Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID VARIABLE SP X END
Rule 2     VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE
Rule 3     VARIABLE -> <empty>
Rule 4     IDLIST -> ID
Rule 5     IDLIST -> IDLIST COMMA ID
Rule 6     IDLIST -> <empty>
Rule 7     TIPO -> WORD
Rule 8     TIPO -> FLOAT
Rule 9     TIPO -> ARRAY DCLARRAY
Rule 10    TIPO -> MATRIX DCLMATRIX
Rule 11    TIPO -> CUBE DCLCUBE
Rule 12    DCLARRAY -> LBRACKET Z RBRACKET
Rule 13    DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET
Rule 14    DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
Rule 15    Z -> NUMBER
Rule 16    Z -> ID
Rule 17    SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
Rule 18    SP -> <empty>
Rule 19    X -> STATEMENTS SEMMICOLON X
Rule 20    X -> <empty>
Rule 21    STATEMENTS -> LET U ASSIGN E
Rule 22    STATEMENTS -> PRINT Q
Rule 23    STATEMENTS -> INPUT TEXT GTGT U
Rule 24    STATEMENTS -> CLS
Rule 25    STATEMENTS -> IF EL THEN X ELSE1 ENDIF
Rule 26    STATEMENTS -> WHILE EL X WHEND
Rule 27    STATEMENTS -> DO X LOOPUNTIL EL ENDO
Rule 28    STATEMENTS -> FOR O TO E X NEXT
Rule 29    STATEMENTS -> GOSUB ID
Rule 30    O -> E
Rule 31    O -> E ASSIGN E
Rule 32    U -> ID
Rule 33    U -> ID DCLARRAY
Rule 34    U -> ID DCLMATRIX
Rule 35    U -> ID DCLCUBE
Rule 36    Q -> LPARENT U RPARENT
Rule 37    Q -> TEXT
Rule 38    TEXT -> LPARENT STRING H RPARENT
Rule 39    TEXT -> <empty>
Rule 40    H -> PLUS STRING H
Rule 41    H -> PLUS U H
Rule 42    H -> <empty>
Rule 43    ELSE1 -> ELSE X
Rule 44    ELSE1 -> <empty>
Rule 45    E -> E PLUS T
Rule 46    E -> E MINUS T
Rule 47    E -> T
Rule 48    T -> T TIMES F
Rule 49    T -> T DIVIDE F
Rule 50    T -> F
Rule 51    F -> NUMBER
Rule 52    F -> U
Rule 53    F -> LPARENT E RPARENT
Rule 54    EL -> EL OR TL
Rule 55    EL -> TL NOT
Rule 56    EL -> TL
Rule 57    TL -> TL AND FL
Rule 58    TL -> FL
Rule 59    FL -> K OPREL K
Rule 60    FL -> LPARENT EL RPARENT
Rule 61    OPREL -> LT
Rule 62    OPREL -> LTE
Rule 63    OPREL -> GT
Rule 64    OPREL -> GTE
Rule 65    OPREL -> NE
Rule 66    OPREL -> EQUAL
Rule 67    K -> ID
Rule 68    K -> NUMBER

Terminals, with rules where they appear

AND                  : 57
ARRAY                : 9
AS                   : 2
ASSIGN               : 21 31
CLS                  : 24
COMMA                : 5
CUBE                 : 11
DIM                  : 2
DIVIDE               : 49
DO                   : 27
ELSE                 : 43
END                  : 1
ENDIF                : 25
ENDO                 : 27
ENDSUB               : 17
EQUAL                : 66
FLOAT                : 8
FOR                  : 28
GOSUB                : 29
GT                   : 63
GTE                  : 64
GTGT                 : 23
ID                   : 1 4 5 16 17 29 32 33 34 35 67
IF                   : 25
INPUT                : 23
LBRACKET             : 12 13 13 14 14 14
LET                  : 21
LOOPUNTIL            : 27
LPARENT              : 36 38 53 60
LT                   : 61
LTE                  : 62
MATRIX               : 10
MINUS                : 46
NE                   : 65
NEXT                 : 28
NOT                  : 55
NUMBER               : 15 51 68
OR                   : 54
PLUS                 : 40 41 45
PRINT                : 22
PROGRAM              : 1
RBRACKET             : 12 13 13 14 14 14
RPARENT              : 36 38 53 60
SEMMICOLON           : 2 17 19
STRING               : 38 40
SUBPROCEDURE         : 17
THEN                 : 25
TIMES                : 48
TO                   : 28
WHEND                : 26
WHILE                : 26
WORD                 : 7
error                : 

Nonterminals, with rules where they appear

DCLARRAY             : 9 33
DCLCUBE              : 11 35
DCLMATRIX            : 10 34
E                    : 21 28 30 31 31 45 46 53
EL                   : 25 26 27 54 60
ELSE1                : 25
F                    : 48 49 50
FL                   : 57 58
H                    : 38 40 41
IDLIST               : 2 5
K                    : 59 59
O                    : 28
OPREL                : 59
Q                    : 22
SP                   : 1 17
STATEMENTS           : 19
T                    : 45 46 47 48 49
TEXT                 : 23 37
TIPO                 : 2
TL                   : 54 55 56 57
U                    : 21 23 36 41 52
VARIABLE             : 1 2
X                    : 1 17 19 25 26 27 28 43
Z                    : 12 13 13 14 14 14
program              : 0

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID VARIABLE SP X END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID VARIABLE SP X END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . VARIABLE SP X END
    (2) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (3) VARIABLE -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (VARIABLE -> .)
    LET             reduce using rule 3 (VARIABLE -> .)
    PRINT           reduce using rule 3 (VARIABLE -> .)
    INPUT           reduce using rule 3 (VARIABLE -> .)
    CLS             reduce using rule 3 (VARIABLE -> .)
    IF              reduce using rule 3 (VARIABLE -> .)
    WHILE           reduce using rule 3 (VARIABLE -> .)
    DO              reduce using rule 3 (VARIABLE -> .)
    FOR             reduce using rule 3 (VARIABLE -> .)
    GOSUB           reduce using rule 3 (VARIABLE -> .)
    END             reduce using rule 3 (VARIABLE -> .)

    VARIABLE                       shift and go to state 4

state 4

    (1) program -> PROGRAM ID VARIABLE . SP X END
    (17) SP -> . SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
    (18) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 18 (SP -> .)
    PRINT           reduce using rule 18 (SP -> .)
    INPUT           reduce using rule 18 (SP -> .)
    CLS             reduce using rule 18 (SP -> .)
    IF              reduce using rule 18 (SP -> .)
    WHILE           reduce using rule 18 (SP -> .)
    DO              reduce using rule 18 (SP -> .)
    FOR             reduce using rule 18 (SP -> .)
    GOSUB           reduce using rule 18 (SP -> .)
    END             reduce using rule 18 (SP -> .)

    SP                             shift and go to state 6

state 5

    (2) VARIABLE -> DIM . IDLIST AS TIPO SEMMICOLON VARIABLE
    (4) IDLIST -> . ID
    (5) IDLIST -> . IDLIST COMMA ID
    (6) IDLIST -> .

    ID              shift and go to state 9
    AS              reduce using rule 6 (IDLIST -> .)
    COMMA           reduce using rule 6 (IDLIST -> .)

    IDLIST                         shift and go to state 8

state 6

    (1) program -> PROGRAM ID VARIABLE SP . X END
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 10
    STATEMENTS                     shift and go to state 11

state 7

    (17) SP -> SUBPROCEDURE . ID X ENDSUB SEMMICOLON SP

    ID              shift and go to state 21


state 8

    (2) VARIABLE -> DIM IDLIST . AS TIPO SEMMICOLON VARIABLE
    (5) IDLIST -> IDLIST . COMMA ID

    AS              shift and go to state 22
    COMMA           shift and go to state 23


state 9

    (4) IDLIST -> ID .

    AS              reduce using rule 4 (IDLIST -> ID .)
    COMMA           reduce using rule 4 (IDLIST -> ID .)


state 10

    (1) program -> PROGRAM ID VARIABLE SP X . END

    END             shift and go to state 24


state 11

    (19) X -> STATEMENTS . SEMMICOLON X

    SEMMICOLON      shift and go to state 25


state 12

    (21) STATEMENTS -> LET . U ASSIGN E
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    ID              shift and go to state 27

    U                              shift and go to state 26

state 13

    (22) STATEMENTS -> PRINT . Q
    (36) Q -> . LPARENT U RPARENT
    (37) Q -> . TEXT
    (38) TEXT -> . LPARENT STRING H RPARENT
    (39) TEXT -> .

    LPARENT         shift and go to state 29
    GTGT            reduce using rule 39 (TEXT -> .)
    SEMMICOLON      reduce using rule 39 (TEXT -> .)

    Q                              shift and go to state 28
    TEXT                           shift and go to state 30

state 14

    (23) STATEMENTS -> INPUT . TEXT GTGT U
    (38) TEXT -> . LPARENT STRING H RPARENT
    (39) TEXT -> .

    LPARENT         shift and go to state 32
    GTGT            reduce using rule 39 (TEXT -> .)
    SEMMICOLON      reduce using rule 39 (TEXT -> .)

    TEXT                           shift and go to state 31

state 15

    (24) STATEMENTS -> CLS .

    SEMMICOLON      reduce using rule 24 (STATEMENTS -> CLS .)


state 16

    (25) STATEMENTS -> IF . EL THEN X ELSE1 ENDIF
    (54) EL -> . EL OR TL
    (55) EL -> . TL NOT
    (56) EL -> . TL
    (57) TL -> . TL AND FL
    (58) TL -> . FL
    (59) FL -> . K OPREL K
    (60) FL -> . LPARENT EL RPARENT
    (67) K -> . ID
    (68) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 33
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 17

    (26) STATEMENTS -> WHILE . EL X WHEND
    (54) EL -> . EL OR TL
    (55) EL -> . TL NOT
    (56) EL -> . TL
    (57) TL -> . TL AND FL
    (58) TL -> . FL
    (59) FL -> . K OPREL K
    (60) FL -> . LPARENT EL RPARENT
    (67) K -> . ID
    (68) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 40
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 18

    (27) STATEMENTS -> DO . X LOOPUNTIL EL ENDO
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 41
    STATEMENTS                     shift and go to state 11

state 19

    (28) STATEMENTS -> FOR . O TO E X NEXT
    (30) O -> . E
    (31) O -> . E ASSIGN E
    (45) E -> . E PLUS T
    (46) E -> . E MINUS T
    (47) E -> . T
    (48) T -> . T TIMES F
    (49) T -> . T DIVIDE F
    (50) T -> . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    O                              shift and go to state 42
    E                              shift and go to state 43
    T                              shift and go to state 44
    F                              shift and go to state 45
    U                              shift and go to state 47

state 20

    (29) STATEMENTS -> GOSUB . ID

    ID              shift and go to state 49


state 21

    (17) SP -> SUBPROCEDURE ID . X ENDSUB SEMMICOLON SP
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 50
    STATEMENTS                     shift and go to state 11

state 22

    (2) VARIABLE -> DIM IDLIST AS . TIPO SEMMICOLON VARIABLE
    (7) TIPO -> . WORD
    (8) TIPO -> . FLOAT
    (9) TIPO -> . ARRAY DCLARRAY
    (10) TIPO -> . MATRIX DCLMATRIX
    (11) TIPO -> . CUBE DCLCUBE

    WORD            shift and go to state 52
    FLOAT           shift and go to state 53
    ARRAY           shift and go to state 54
    MATRIX          shift and go to state 55
    CUBE            shift and go to state 56

    TIPO                           shift and go to state 51

state 23

    (5) IDLIST -> IDLIST COMMA . ID

    ID              shift and go to state 57


state 24

    (1) program -> PROGRAM ID VARIABLE SP X END .

    $end            reduce using rule 1 (program -> PROGRAM ID VARIABLE SP X END .)


state 25

    (19) X -> STATEMENTS SEMMICOLON . X
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    STATEMENTS                     shift and go to state 11
    X                              shift and go to state 58

state 26

    (21) STATEMENTS -> LET U . ASSIGN E

    ASSIGN          shift and go to state 59


state 27

    (32) U -> ID .
    (33) U -> ID . DCLARRAY
    (34) U -> ID . DCLMATRIX
    (35) U -> ID . DCLCUBE
    (12) DCLARRAY -> . LBRACKET Z RBRACKET
    (13) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (14) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    ASSIGN          reduce using rule 32 (U -> ID .)
    SEMMICOLON      reduce using rule 32 (U -> ID .)
    RPARENT         reduce using rule 32 (U -> ID .)
    PLUS            reduce using rule 32 (U -> ID .)
    LET             reduce using rule 32 (U -> ID .)
    PRINT           reduce using rule 32 (U -> ID .)
    INPUT           reduce using rule 32 (U -> ID .)
    CLS             reduce using rule 32 (U -> ID .)
    IF              reduce using rule 32 (U -> ID .)
    WHILE           reduce using rule 32 (U -> ID .)
    DO              reduce using rule 32 (U -> ID .)
    FOR             reduce using rule 32 (U -> ID .)
    GOSUB           reduce using rule 32 (U -> ID .)
    NEXT            reduce using rule 32 (U -> ID .)
    TO              reduce using rule 32 (U -> ID .)
    MINUS           reduce using rule 32 (U -> ID .)
    TIMES           reduce using rule 32 (U -> ID .)
    DIVIDE          reduce using rule 32 (U -> ID .)
    LBRACKET        shift and go to state 63

    DCLARRAY                       shift and go to state 60
    DCLMATRIX                      shift and go to state 61
    DCLCUBE                        shift and go to state 62

state 28

    (22) STATEMENTS -> PRINT Q .

    SEMMICOLON      reduce using rule 22 (STATEMENTS -> PRINT Q .)


state 29

    (36) Q -> LPARENT . U RPARENT
    (38) TEXT -> LPARENT . STRING H RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    STRING          shift and go to state 65
    ID              shift and go to state 27

    U                              shift and go to state 64

state 30

    (37) Q -> TEXT .

    SEMMICOLON      reduce using rule 37 (Q -> TEXT .)


state 31

    (23) STATEMENTS -> INPUT TEXT . GTGT U

    GTGT            shift and go to state 66


state 32

    (38) TEXT -> LPARENT . STRING H RPARENT

    STRING          shift and go to state 65


state 33

    (25) STATEMENTS -> IF EL . THEN X ELSE1 ENDIF
    (54) EL -> EL . OR TL

    THEN            shift and go to state 67
    OR              shift and go to state 68


state 34

    (55) EL -> TL . NOT
    (56) EL -> TL .
    (57) TL -> TL . AND FL

    NOT             shift and go to state 69
    THEN            reduce using rule 56 (EL -> TL .)
    LET             reduce using rule 56 (EL -> TL .)
    PRINT           reduce using rule 56 (EL -> TL .)
    INPUT           reduce using rule 56 (EL -> TL .)
    CLS             reduce using rule 56 (EL -> TL .)
    IF              reduce using rule 56 (EL -> TL .)
    WHILE           reduce using rule 56 (EL -> TL .)
    DO              reduce using rule 56 (EL -> TL .)
    FOR             reduce using rule 56 (EL -> TL .)
    GOSUB           reduce using rule 56 (EL -> TL .)
    WHEND           reduce using rule 56 (EL -> TL .)
    ENDO            reduce using rule 56 (EL -> TL .)
    OR              reduce using rule 56 (EL -> TL .)
    RPARENT         reduce using rule 56 (EL -> TL .)
    AND             shift and go to state 70


state 35

    (58) TL -> FL .

    THEN            reduce using rule 58 (TL -> FL .)
    LET             reduce using rule 58 (TL -> FL .)
    PRINT           reduce using rule 58 (TL -> FL .)
    INPUT           reduce using rule 58 (TL -> FL .)
    CLS             reduce using rule 58 (TL -> FL .)
    IF              reduce using rule 58 (TL -> FL .)
    WHILE           reduce using rule 58 (TL -> FL .)
    DO              reduce using rule 58 (TL -> FL .)
    FOR             reduce using rule 58 (TL -> FL .)
    GOSUB           reduce using rule 58 (TL -> FL .)
    WHEND           reduce using rule 58 (TL -> FL .)
    ENDO            reduce using rule 58 (TL -> FL .)
    OR              reduce using rule 58 (TL -> FL .)
    NOT             reduce using rule 58 (TL -> FL .)
    AND             reduce using rule 58 (TL -> FL .)
    RPARENT         reduce using rule 58 (TL -> FL .)


state 36

    (59) FL -> K . OPREL K
    (61) OPREL -> . LT
    (62) OPREL -> . LTE
    (63) OPREL -> . GT
    (64) OPREL -> . GTE
    (65) OPREL -> . NE
    (66) OPREL -> . EQUAL

    LT              shift and go to state 72
    LTE             shift and go to state 73
    GT              shift and go to state 74
    GTE             shift and go to state 75
    NE              shift and go to state 76
    EQUAL           shift and go to state 77

    OPREL                          shift and go to state 71

state 37

    (60) FL -> LPARENT . EL RPARENT
    (54) EL -> . EL OR TL
    (55) EL -> . TL NOT
    (56) EL -> . TL
    (57) TL -> . TL AND FL
    (58) TL -> . FL
    (59) FL -> . K OPREL K
    (60) FL -> . LPARENT EL RPARENT
    (67) K -> . ID
    (68) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 78
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 38

    (67) K -> ID .

    LT              reduce using rule 67 (K -> ID .)
    LTE             reduce using rule 67 (K -> ID .)
    GT              reduce using rule 67 (K -> ID .)
    GTE             reduce using rule 67 (K -> ID .)
    NE              reduce using rule 67 (K -> ID .)
    EQUAL           reduce using rule 67 (K -> ID .)
    THEN            reduce using rule 67 (K -> ID .)
    LET             reduce using rule 67 (K -> ID .)
    PRINT           reduce using rule 67 (K -> ID .)
    INPUT           reduce using rule 67 (K -> ID .)
    CLS             reduce using rule 67 (K -> ID .)
    IF              reduce using rule 67 (K -> ID .)
    WHILE           reduce using rule 67 (K -> ID .)
    DO              reduce using rule 67 (K -> ID .)
    FOR             reduce using rule 67 (K -> ID .)
    GOSUB           reduce using rule 67 (K -> ID .)
    WHEND           reduce using rule 67 (K -> ID .)
    ENDO            reduce using rule 67 (K -> ID .)
    OR              reduce using rule 67 (K -> ID .)
    NOT             reduce using rule 67 (K -> ID .)
    AND             reduce using rule 67 (K -> ID .)
    RPARENT         reduce using rule 67 (K -> ID .)


state 39

    (68) K -> NUMBER .

    LT              reduce using rule 68 (K -> NUMBER .)
    LTE             reduce using rule 68 (K -> NUMBER .)
    GT              reduce using rule 68 (K -> NUMBER .)
    GTE             reduce using rule 68 (K -> NUMBER .)
    NE              reduce using rule 68 (K -> NUMBER .)
    EQUAL           reduce using rule 68 (K -> NUMBER .)
    THEN            reduce using rule 68 (K -> NUMBER .)
    LET             reduce using rule 68 (K -> NUMBER .)
    PRINT           reduce using rule 68 (K -> NUMBER .)
    INPUT           reduce using rule 68 (K -> NUMBER .)
    CLS             reduce using rule 68 (K -> NUMBER .)
    IF              reduce using rule 68 (K -> NUMBER .)
    WHILE           reduce using rule 68 (K -> NUMBER .)
    DO              reduce using rule 68 (K -> NUMBER .)
    FOR             reduce using rule 68 (K -> NUMBER .)
    GOSUB           reduce using rule 68 (K -> NUMBER .)
    WHEND           reduce using rule 68 (K -> NUMBER .)
    ENDO            reduce using rule 68 (K -> NUMBER .)
    OR              reduce using rule 68 (K -> NUMBER .)
    NOT             reduce using rule 68 (K -> NUMBER .)
    AND             reduce using rule 68 (K -> NUMBER .)
    RPARENT         reduce using rule 68 (K -> NUMBER .)


state 40

    (26) STATEMENTS -> WHILE EL . X WHEND
    (54) EL -> EL . OR TL
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    OR              shift and go to state 68
    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 79
    STATEMENTS                     shift and go to state 11

state 41

    (27) STATEMENTS -> DO X . LOOPUNTIL EL ENDO

    LOOPUNTIL       shift and go to state 80


state 42

    (28) STATEMENTS -> FOR O . TO E X NEXT

    TO              shift and go to state 81


state 43

    (30) O -> E .
    (31) O -> E . ASSIGN E
    (45) E -> E . PLUS T
    (46) E -> E . MINUS T

    TO              reduce using rule 30 (O -> E .)
    ASSIGN          shift and go to state 82
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 44

    (47) E -> T .
    (48) T -> T . TIMES F
    (49) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 47 (E -> T .)
    LET             reduce using rule 47 (E -> T .)
    PRINT           reduce using rule 47 (E -> T .)
    INPUT           reduce using rule 47 (E -> T .)
    CLS             reduce using rule 47 (E -> T .)
    IF              reduce using rule 47 (E -> T .)
    WHILE           reduce using rule 47 (E -> T .)
    DO              reduce using rule 47 (E -> T .)
    FOR             reduce using rule 47 (E -> T .)
    GOSUB           reduce using rule 47 (E -> T .)
    NEXT            reduce using rule 47 (E -> T .)
    TO              reduce using rule 47 (E -> T .)
    ASSIGN          reduce using rule 47 (E -> T .)
    PLUS            reduce using rule 47 (E -> T .)
    MINUS           reduce using rule 47 (E -> T .)
    RPARENT         reduce using rule 47 (E -> T .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 45

    (50) T -> F .

    SEMMICOLON      reduce using rule 50 (T -> F .)
    LET             reduce using rule 50 (T -> F .)
    PRINT           reduce using rule 50 (T -> F .)
    INPUT           reduce using rule 50 (T -> F .)
    CLS             reduce using rule 50 (T -> F .)
    IF              reduce using rule 50 (T -> F .)
    WHILE           reduce using rule 50 (T -> F .)
    DO              reduce using rule 50 (T -> F .)
    FOR             reduce using rule 50 (T -> F .)
    GOSUB           reduce using rule 50 (T -> F .)
    NEXT            reduce using rule 50 (T -> F .)
    TO              reduce using rule 50 (T -> F .)
    ASSIGN          reduce using rule 50 (T -> F .)
    PLUS            reduce using rule 50 (T -> F .)
    MINUS           reduce using rule 50 (T -> F .)
    TIMES           reduce using rule 50 (T -> F .)
    DIVIDE          reduce using rule 50 (T -> F .)
    RPARENT         reduce using rule 50 (T -> F .)


state 46

    (51) F -> NUMBER .

    SEMMICOLON      reduce using rule 51 (F -> NUMBER .)
    LET             reduce using rule 51 (F -> NUMBER .)
    PRINT           reduce using rule 51 (F -> NUMBER .)
    INPUT           reduce using rule 51 (F -> NUMBER .)
    CLS             reduce using rule 51 (F -> NUMBER .)
    IF              reduce using rule 51 (F -> NUMBER .)
    WHILE           reduce using rule 51 (F -> NUMBER .)
    DO              reduce using rule 51 (F -> NUMBER .)
    FOR             reduce using rule 51 (F -> NUMBER .)
    GOSUB           reduce using rule 51 (F -> NUMBER .)
    NEXT            reduce using rule 51 (F -> NUMBER .)
    TO              reduce using rule 51 (F -> NUMBER .)
    ASSIGN          reduce using rule 51 (F -> NUMBER .)
    PLUS            reduce using rule 51 (F -> NUMBER .)
    MINUS           reduce using rule 51 (F -> NUMBER .)
    TIMES           reduce using rule 51 (F -> NUMBER .)
    DIVIDE          reduce using rule 51 (F -> NUMBER .)
    RPARENT         reduce using rule 51 (F -> NUMBER .)


state 47

    (52) F -> U .

    SEMMICOLON      reduce using rule 52 (F -> U .)
    LET             reduce using rule 52 (F -> U .)
    PRINT           reduce using rule 52 (F -> U .)
    INPUT           reduce using rule 52 (F -> U .)
    CLS             reduce using rule 52 (F -> U .)
    IF              reduce using rule 52 (F -> U .)
    WHILE           reduce using rule 52 (F -> U .)
    DO              reduce using rule 52 (F -> U .)
    FOR             reduce using rule 52 (F -> U .)
    GOSUB           reduce using rule 52 (F -> U .)
    NEXT            reduce using rule 52 (F -> U .)
    TO              reduce using rule 52 (F -> U .)
    ASSIGN          reduce using rule 52 (F -> U .)
    PLUS            reduce using rule 52 (F -> U .)
    MINUS           reduce using rule 52 (F -> U .)
    TIMES           reduce using rule 52 (F -> U .)
    DIVIDE          reduce using rule 52 (F -> U .)
    RPARENT         reduce using rule 52 (F -> U .)


state 48

    (53) F -> LPARENT . E RPARENT
    (45) E -> . E PLUS T
    (46) E -> . E MINUS T
    (47) E -> . T
    (48) T -> . T TIMES F
    (49) T -> . T DIVIDE F
    (50) T -> . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    E                              shift and go to state 87
    T                              shift and go to state 44
    F                              shift and go to state 45
    U                              shift and go to state 47

state 49

    (29) STATEMENTS -> GOSUB ID .

    SEMMICOLON      reduce using rule 29 (STATEMENTS -> GOSUB ID .)


state 50

    (17) SP -> SUBPROCEDURE ID X . ENDSUB SEMMICOLON SP

    ENDSUB          shift and go to state 88


state 51

    (2) VARIABLE -> DIM IDLIST AS TIPO . SEMMICOLON VARIABLE

    SEMMICOLON      shift and go to state 89


state 52

    (7) TIPO -> WORD .

    SEMMICOLON      reduce using rule 7 (TIPO -> WORD .)


state 53

    (8) TIPO -> FLOAT .

    SEMMICOLON      reduce using rule 8 (TIPO -> FLOAT .)


state 54

    (9) TIPO -> ARRAY . DCLARRAY
    (12) DCLARRAY -> . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 91

    DCLARRAY                       shift and go to state 90

state 55

    (10) TIPO -> MATRIX . DCLMATRIX
    (13) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 93

    DCLMATRIX                      shift and go to state 92

state 56

    (11) TIPO -> CUBE . DCLCUBE
    (14) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 95

    DCLCUBE                        shift and go to state 94

state 57

    (5) IDLIST -> IDLIST COMMA ID .

    AS              reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)
    COMMA           reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)


state 58

    (19) X -> STATEMENTS SEMMICOLON X .

    END             reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    ENDSUB          reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    ELSE            reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    ENDIF           reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    WHEND           reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    LOOPUNTIL       reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    NEXT            reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)


state 59

    (21) STATEMENTS -> LET U ASSIGN . E
    (45) E -> . E PLUS T
    (46) E -> . E MINUS T
    (47) E -> . T
    (48) T -> . T TIMES F
    (49) T -> . T DIVIDE F
    (50) T -> . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    U                              shift and go to state 47
    E                              shift and go to state 96
    T                              shift and go to state 44
    F                              shift and go to state 45

state 60

    (33) U -> ID DCLARRAY .

    ASSIGN          reduce using rule 33 (U -> ID DCLARRAY .)
    SEMMICOLON      reduce using rule 33 (U -> ID DCLARRAY .)
    RPARENT         reduce using rule 33 (U -> ID DCLARRAY .)
    PLUS            reduce using rule 33 (U -> ID DCLARRAY .)
    LET             reduce using rule 33 (U -> ID DCLARRAY .)
    PRINT           reduce using rule 33 (U -> ID DCLARRAY .)
    INPUT           reduce using rule 33 (U -> ID DCLARRAY .)
    CLS             reduce using rule 33 (U -> ID DCLARRAY .)
    IF              reduce using rule 33 (U -> ID DCLARRAY .)
    WHILE           reduce using rule 33 (U -> ID DCLARRAY .)
    DO              reduce using rule 33 (U -> ID DCLARRAY .)
    FOR             reduce using rule 33 (U -> ID DCLARRAY .)
    GOSUB           reduce using rule 33 (U -> ID DCLARRAY .)
    NEXT            reduce using rule 33 (U -> ID DCLARRAY .)
    TO              reduce using rule 33 (U -> ID DCLARRAY .)
    MINUS           reduce using rule 33 (U -> ID DCLARRAY .)
    TIMES           reduce using rule 33 (U -> ID DCLARRAY .)
    DIVIDE          reduce using rule 33 (U -> ID DCLARRAY .)


state 61

    (34) U -> ID DCLMATRIX .

    ASSIGN          reduce using rule 34 (U -> ID DCLMATRIX .)
    SEMMICOLON      reduce using rule 34 (U -> ID DCLMATRIX .)
    RPARENT         reduce using rule 34 (U -> ID DCLMATRIX .)
    PLUS            reduce using rule 34 (U -> ID DCLMATRIX .)
    LET             reduce using rule 34 (U -> ID DCLMATRIX .)
    PRINT           reduce using rule 34 (U -> ID DCLMATRIX .)
    INPUT           reduce using rule 34 (U -> ID DCLMATRIX .)
    CLS             reduce using rule 34 (U -> ID DCLMATRIX .)
    IF              reduce using rule 34 (U -> ID DCLMATRIX .)
    WHILE           reduce using rule 34 (U -> ID DCLMATRIX .)
    DO              reduce using rule 34 (U -> ID DCLMATRIX .)
    FOR             reduce using rule 34 (U -> ID DCLMATRIX .)
    GOSUB           reduce using rule 34 (U -> ID DCLMATRIX .)
    NEXT            reduce using rule 34 (U -> ID DCLMATRIX .)
    TO              reduce using rule 34 (U -> ID DCLMATRIX .)
    MINUS           reduce using rule 34 (U -> ID DCLMATRIX .)
    TIMES           reduce using rule 34 (U -> ID DCLMATRIX .)
    DIVIDE          reduce using rule 34 (U -> ID DCLMATRIX .)


state 62

    (35) U -> ID DCLCUBE .

    ASSIGN          reduce using rule 35 (U -> ID DCLCUBE .)
    SEMMICOLON      reduce using rule 35 (U -> ID DCLCUBE .)
    RPARENT         reduce using rule 35 (U -> ID DCLCUBE .)
    PLUS            reduce using rule 35 (U -> ID DCLCUBE .)
    LET             reduce using rule 35 (U -> ID DCLCUBE .)
    PRINT           reduce using rule 35 (U -> ID DCLCUBE .)
    INPUT           reduce using rule 35 (U -> ID DCLCUBE .)
    CLS             reduce using rule 35 (U -> ID DCLCUBE .)
    IF              reduce using rule 35 (U -> ID DCLCUBE .)
    WHILE           reduce using rule 35 (U -> ID DCLCUBE .)
    DO              reduce using rule 35 (U -> ID DCLCUBE .)
    FOR             reduce using rule 35 (U -> ID DCLCUBE .)
    GOSUB           reduce using rule 35 (U -> ID DCLCUBE .)
    NEXT            reduce using rule 35 (U -> ID DCLCUBE .)
    TO              reduce using rule 35 (U -> ID DCLCUBE .)
    MINUS           reduce using rule 35 (U -> ID DCLCUBE .)
    TIMES           reduce using rule 35 (U -> ID DCLCUBE .)
    DIVIDE          reduce using rule 35 (U -> ID DCLCUBE .)


state 63

    (12) DCLARRAY -> LBRACKET . Z RBRACKET
    (13) DCLMATRIX -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (14) DCLCUBE -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 97

state 64

    (36) Q -> LPARENT U . RPARENT

    RPARENT         shift and go to state 100


state 65

    (38) TEXT -> LPARENT STRING . H RPARENT
    (40) H -> . PLUS STRING H
    (41) H -> . PLUS U H
    (42) H -> .

    PLUS            shift and go to state 102
    RPARENT         reduce using rule 42 (H -> .)

    H                              shift and go to state 101

state 66

    (23) STATEMENTS -> INPUT TEXT GTGT . U
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    ID              shift and go to state 27

    U                              shift and go to state 103

state 67

    (25) STATEMENTS -> IF EL THEN . X ELSE1 ENDIF
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 104
    STATEMENTS                     shift and go to state 11

state 68

    (54) EL -> EL OR . TL
    (57) TL -> . TL AND FL
    (58) TL -> . FL
    (59) FL -> . K OPREL K
    (60) FL -> . LPARENT EL RPARENT
    (67) K -> . ID
    (68) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    TL                             shift and go to state 105
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 69

    (55) EL -> TL NOT .

    THEN            reduce using rule 55 (EL -> TL NOT .)
    LET             reduce using rule 55 (EL -> TL NOT .)
    PRINT           reduce using rule 55 (EL -> TL NOT .)
    INPUT           reduce using rule 55 (EL -> TL NOT .)
    CLS             reduce using rule 55 (EL -> TL NOT .)
    IF              reduce using rule 55 (EL -> TL NOT .)
    WHILE           reduce using rule 55 (EL -> TL NOT .)
    DO              reduce using rule 55 (EL -> TL NOT .)
    FOR             reduce using rule 55 (EL -> TL NOT .)
    GOSUB           reduce using rule 55 (EL -> TL NOT .)
    WHEND           reduce using rule 55 (EL -> TL NOT .)
    ENDO            reduce using rule 55 (EL -> TL NOT .)
    OR              reduce using rule 55 (EL -> TL NOT .)
    RPARENT         reduce using rule 55 (EL -> TL NOT .)


state 70

    (57) TL -> TL AND . FL
    (59) FL -> . K OPREL K
    (60) FL -> . LPARENT EL RPARENT
    (67) K -> . ID
    (68) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    FL                             shift and go to state 106
    K                              shift and go to state 36

state 71

    (59) FL -> K OPREL . K
    (67) K -> . ID
    (68) K -> . NUMBER

    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    K                              shift and go to state 107

state 72

    (61) OPREL -> LT .

    ID              reduce using rule 61 (OPREL -> LT .)
    NUMBER          reduce using rule 61 (OPREL -> LT .)


state 73

    (62) OPREL -> LTE .

    ID              reduce using rule 62 (OPREL -> LTE .)
    NUMBER          reduce using rule 62 (OPREL -> LTE .)


state 74

    (63) OPREL -> GT .

    ID              reduce using rule 63 (OPREL -> GT .)
    NUMBER          reduce using rule 63 (OPREL -> GT .)


state 75

    (64) OPREL -> GTE .

    ID              reduce using rule 64 (OPREL -> GTE .)
    NUMBER          reduce using rule 64 (OPREL -> GTE .)


state 76

    (65) OPREL -> NE .

    ID              reduce using rule 65 (OPREL -> NE .)
    NUMBER          reduce using rule 65 (OPREL -> NE .)


state 77

    (66) OPREL -> EQUAL .

    ID              reduce using rule 66 (OPREL -> EQUAL .)
    NUMBER          reduce using rule 66 (OPREL -> EQUAL .)


state 78

    (60) FL -> LPARENT EL . RPARENT
    (54) EL -> EL . OR TL

    RPARENT         shift and go to state 108
    OR              shift and go to state 68


state 79

    (26) STATEMENTS -> WHILE EL X . WHEND

    WHEND           shift and go to state 109


state 80

    (27) STATEMENTS -> DO X LOOPUNTIL . EL ENDO
    (54) EL -> . EL OR TL
    (55) EL -> . TL NOT
    (56) EL -> . TL
    (57) TL -> . TL AND FL
    (58) TL -> . FL
    (59) FL -> . K OPREL K
    (60) FL -> . LPARENT EL RPARENT
    (67) K -> . ID
    (68) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 110
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 81

    (28) STATEMENTS -> FOR O TO . E X NEXT
    (45) E -> . E PLUS T
    (46) E -> . E MINUS T
    (47) E -> . T
    (48) T -> . T TIMES F
    (49) T -> . T DIVIDE F
    (50) T -> . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    E                              shift and go to state 111
    T                              shift and go to state 44
    F                              shift and go to state 45
    U                              shift and go to state 47

state 82

    (31) O -> E ASSIGN . E
    (45) E -> . E PLUS T
    (46) E -> . E MINUS T
    (47) E -> . T
    (48) T -> . T TIMES F
    (49) T -> . T DIVIDE F
    (50) T -> . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    E                              shift and go to state 112
    T                              shift and go to state 44
    F                              shift and go to state 45
    U                              shift and go to state 47

state 83

    (45) E -> E PLUS . T
    (48) T -> . T TIMES F
    (49) T -> . T DIVIDE F
    (50) T -> . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    T                              shift and go to state 113
    F                              shift and go to state 45
    U                              shift and go to state 47

state 84

    (46) E -> E MINUS . T
    (48) T -> . T TIMES F
    (49) T -> . T DIVIDE F
    (50) T -> . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    T                              shift and go to state 114
    F                              shift and go to state 45
    U                              shift and go to state 47

state 85

    (48) T -> T TIMES . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    F                              shift and go to state 115
    U                              shift and go to state 47

state 86

    (49) T -> T DIVIDE . F
    (51) F -> . NUMBER
    (52) F -> . U
    (53) F -> . LPARENT E RPARENT
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    NUMBER          shift and go to state 46
    LPARENT         shift and go to state 48
    ID              shift and go to state 27

    F                              shift and go to state 116
    U                              shift and go to state 47

state 87

    (53) F -> LPARENT E . RPARENT
    (45) E -> E . PLUS T
    (46) E -> E . MINUS T

    RPARENT         shift and go to state 117
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 88

    (17) SP -> SUBPROCEDURE ID X ENDSUB . SEMMICOLON SP

    SEMMICOLON      shift and go to state 118


state 89

    (2) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON . VARIABLE
    (2) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (3) VARIABLE -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (VARIABLE -> .)
    LET             reduce using rule 3 (VARIABLE -> .)
    PRINT           reduce using rule 3 (VARIABLE -> .)
    INPUT           reduce using rule 3 (VARIABLE -> .)
    CLS             reduce using rule 3 (VARIABLE -> .)
    IF              reduce using rule 3 (VARIABLE -> .)
    WHILE           reduce using rule 3 (VARIABLE -> .)
    DO              reduce using rule 3 (VARIABLE -> .)
    FOR             reduce using rule 3 (VARIABLE -> .)
    GOSUB           reduce using rule 3 (VARIABLE -> .)
    END             reduce using rule 3 (VARIABLE -> .)

    VARIABLE                       shift and go to state 119

state 90

    (9) TIPO -> ARRAY DCLARRAY .

    SEMMICOLON      reduce using rule 9 (TIPO -> ARRAY DCLARRAY .)


state 91

    (12) DCLARRAY -> LBRACKET . Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 120

state 92

    (10) TIPO -> MATRIX DCLMATRIX .

    SEMMICOLON      reduce using rule 10 (TIPO -> MATRIX DCLMATRIX .)


state 93

    (13) DCLMATRIX -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 121

state 94

    (11) TIPO -> CUBE DCLCUBE .

    SEMMICOLON      reduce using rule 11 (TIPO -> CUBE DCLCUBE .)


state 95

    (14) DCLCUBE -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 122

state 96

    (21) STATEMENTS -> LET U ASSIGN E .
    (45) E -> E . PLUS T
    (46) E -> E . MINUS T

    SEMMICOLON      reduce using rule 21 (STATEMENTS -> LET U ASSIGN E .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 97

    (12) DCLARRAY -> LBRACKET Z . RBRACKET
    (13) DCLMATRIX -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET
    (14) DCLCUBE -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 123


state 98

    (15) Z -> NUMBER .

    RBRACKET        reduce using rule 15 (Z -> NUMBER .)


state 99

    (16) Z -> ID .

    RBRACKET        reduce using rule 16 (Z -> ID .)


state 100

    (36) Q -> LPARENT U RPARENT .

    SEMMICOLON      reduce using rule 36 (Q -> LPARENT U RPARENT .)


state 101

    (38) TEXT -> LPARENT STRING H . RPARENT

    RPARENT         shift and go to state 124


state 102

    (40) H -> PLUS . STRING H
    (41) H -> PLUS . U H
    (32) U -> . ID
    (33) U -> . ID DCLARRAY
    (34) U -> . ID DCLMATRIX
    (35) U -> . ID DCLCUBE

    STRING          shift and go to state 125
    ID              shift and go to state 27

    U                              shift and go to state 126

state 103

    (23) STATEMENTS -> INPUT TEXT GTGT U .

    SEMMICOLON      reduce using rule 23 (STATEMENTS -> INPUT TEXT GTGT U .)


state 104

    (25) STATEMENTS -> IF EL THEN X . ELSE1 ENDIF
    (43) ELSE1 -> . ELSE X
    (44) ELSE1 -> .

    ELSE            shift and go to state 128
    ENDIF           reduce using rule 44 (ELSE1 -> .)

    ELSE1                          shift and go to state 127

state 105

    (54) EL -> EL OR TL .
    (57) TL -> TL . AND FL

    THEN            reduce using rule 54 (EL -> EL OR TL .)
    LET             reduce using rule 54 (EL -> EL OR TL .)
    PRINT           reduce using rule 54 (EL -> EL OR TL .)
    INPUT           reduce using rule 54 (EL -> EL OR TL .)
    CLS             reduce using rule 54 (EL -> EL OR TL .)
    IF              reduce using rule 54 (EL -> EL OR TL .)
    WHILE           reduce using rule 54 (EL -> EL OR TL .)
    DO              reduce using rule 54 (EL -> EL OR TL .)
    FOR             reduce using rule 54 (EL -> EL OR TL .)
    GOSUB           reduce using rule 54 (EL -> EL OR TL .)
    WHEND           reduce using rule 54 (EL -> EL OR TL .)
    ENDO            reduce using rule 54 (EL -> EL OR TL .)
    OR              reduce using rule 54 (EL -> EL OR TL .)
    RPARENT         reduce using rule 54 (EL -> EL OR TL .)
    AND             shift and go to state 70


state 106

    (57) TL -> TL AND FL .

    THEN            reduce using rule 57 (TL -> TL AND FL .)
    LET             reduce using rule 57 (TL -> TL AND FL .)
    PRINT           reduce using rule 57 (TL -> TL AND FL .)
    INPUT           reduce using rule 57 (TL -> TL AND FL .)
    CLS             reduce using rule 57 (TL -> TL AND FL .)
    IF              reduce using rule 57 (TL -> TL AND FL .)
    WHILE           reduce using rule 57 (TL -> TL AND FL .)
    DO              reduce using rule 57 (TL -> TL AND FL .)
    FOR             reduce using rule 57 (TL -> TL AND FL .)
    GOSUB           reduce using rule 57 (TL -> TL AND FL .)
    WHEND           reduce using rule 57 (TL -> TL AND FL .)
    ENDO            reduce using rule 57 (TL -> TL AND FL .)
    OR              reduce using rule 57 (TL -> TL AND FL .)
    NOT             reduce using rule 57 (TL -> TL AND FL .)
    AND             reduce using rule 57 (TL -> TL AND FL .)
    RPARENT         reduce using rule 57 (TL -> TL AND FL .)


state 107

    (59) FL -> K OPREL K .

    THEN            reduce using rule 59 (FL -> K OPREL K .)
    LET             reduce using rule 59 (FL -> K OPREL K .)
    PRINT           reduce using rule 59 (FL -> K OPREL K .)
    INPUT           reduce using rule 59 (FL -> K OPREL K .)
    CLS             reduce using rule 59 (FL -> K OPREL K .)
    IF              reduce using rule 59 (FL -> K OPREL K .)
    WHILE           reduce using rule 59 (FL -> K OPREL K .)
    DO              reduce using rule 59 (FL -> K OPREL K .)
    FOR             reduce using rule 59 (FL -> K OPREL K .)
    GOSUB           reduce using rule 59 (FL -> K OPREL K .)
    WHEND           reduce using rule 59 (FL -> K OPREL K .)
    ENDO            reduce using rule 59 (FL -> K OPREL K .)
    OR              reduce using rule 59 (FL -> K OPREL K .)
    NOT             reduce using rule 59 (FL -> K OPREL K .)
    AND             reduce using rule 59 (FL -> K OPREL K .)
    RPARENT         reduce using rule 59 (FL -> K OPREL K .)


state 108

    (60) FL -> LPARENT EL RPARENT .

    THEN            reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    LET             reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    PRINT           reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    INPUT           reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    CLS             reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    IF              reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    WHILE           reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    DO              reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    FOR             reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    GOSUB           reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    WHEND           reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    ENDO            reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    OR              reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    NOT             reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    AND             reduce using rule 60 (FL -> LPARENT EL RPARENT .)
    RPARENT         reduce using rule 60 (FL -> LPARENT EL RPARENT .)


state 109

    (26) STATEMENTS -> WHILE EL X WHEND .

    SEMMICOLON      reduce using rule 26 (STATEMENTS -> WHILE EL X WHEND .)


state 110

    (27) STATEMENTS -> DO X LOOPUNTIL EL . ENDO
    (54) EL -> EL . OR TL

    ENDO            shift and go to state 129
    OR              shift and go to state 68


state 111

    (28) STATEMENTS -> FOR O TO E . X NEXT
    (45) E -> E . PLUS T
    (46) E -> E . MINUS T
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 130
    STATEMENTS                     shift and go to state 11

state 112

    (31) O -> E ASSIGN E .
    (45) E -> E . PLUS T
    (46) E -> E . MINUS T

    TO              reduce using rule 31 (O -> E ASSIGN E .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 113

    (45) E -> E PLUS T .
    (48) T -> T . TIMES F
    (49) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 45 (E -> E PLUS T .)
    LET             reduce using rule 45 (E -> E PLUS T .)
    PRINT           reduce using rule 45 (E -> E PLUS T .)
    INPUT           reduce using rule 45 (E -> E PLUS T .)
    CLS             reduce using rule 45 (E -> E PLUS T .)
    IF              reduce using rule 45 (E -> E PLUS T .)
    WHILE           reduce using rule 45 (E -> E PLUS T .)
    DO              reduce using rule 45 (E -> E PLUS T .)
    FOR             reduce using rule 45 (E -> E PLUS T .)
    GOSUB           reduce using rule 45 (E -> E PLUS T .)
    NEXT            reduce using rule 45 (E -> E PLUS T .)
    TO              reduce using rule 45 (E -> E PLUS T .)
    ASSIGN          reduce using rule 45 (E -> E PLUS T .)
    PLUS            reduce using rule 45 (E -> E PLUS T .)
    MINUS           reduce using rule 45 (E -> E PLUS T .)
    RPARENT         reduce using rule 45 (E -> E PLUS T .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 114

    (46) E -> E MINUS T .
    (48) T -> T . TIMES F
    (49) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 46 (E -> E MINUS T .)
    LET             reduce using rule 46 (E -> E MINUS T .)
    PRINT           reduce using rule 46 (E -> E MINUS T .)
    INPUT           reduce using rule 46 (E -> E MINUS T .)
    CLS             reduce using rule 46 (E -> E MINUS T .)
    IF              reduce using rule 46 (E -> E MINUS T .)
    WHILE           reduce using rule 46 (E -> E MINUS T .)
    DO              reduce using rule 46 (E -> E MINUS T .)
    FOR             reduce using rule 46 (E -> E MINUS T .)
    GOSUB           reduce using rule 46 (E -> E MINUS T .)
    NEXT            reduce using rule 46 (E -> E MINUS T .)
    TO              reduce using rule 46 (E -> E MINUS T .)
    ASSIGN          reduce using rule 46 (E -> E MINUS T .)
    PLUS            reduce using rule 46 (E -> E MINUS T .)
    MINUS           reduce using rule 46 (E -> E MINUS T .)
    RPARENT         reduce using rule 46 (E -> E MINUS T .)
    TIMES           shift and go to state 85
    DIVIDE          shift and go to state 86


state 115

    (48) T -> T TIMES F .

    SEMMICOLON      reduce using rule 48 (T -> T TIMES F .)
    LET             reduce using rule 48 (T -> T TIMES F .)
    PRINT           reduce using rule 48 (T -> T TIMES F .)
    INPUT           reduce using rule 48 (T -> T TIMES F .)
    CLS             reduce using rule 48 (T -> T TIMES F .)
    IF              reduce using rule 48 (T -> T TIMES F .)
    WHILE           reduce using rule 48 (T -> T TIMES F .)
    DO              reduce using rule 48 (T -> T TIMES F .)
    FOR             reduce using rule 48 (T -> T TIMES F .)
    GOSUB           reduce using rule 48 (T -> T TIMES F .)
    NEXT            reduce using rule 48 (T -> T TIMES F .)
    TO              reduce using rule 48 (T -> T TIMES F .)
    ASSIGN          reduce using rule 48 (T -> T TIMES F .)
    PLUS            reduce using rule 48 (T -> T TIMES F .)
    MINUS           reduce using rule 48 (T -> T TIMES F .)
    TIMES           reduce using rule 48 (T -> T TIMES F .)
    DIVIDE          reduce using rule 48 (T -> T TIMES F .)
    RPARENT         reduce using rule 48 (T -> T TIMES F .)


state 116

    (49) T -> T DIVIDE F .

    SEMMICOLON      reduce using rule 49 (T -> T DIVIDE F .)
    LET             reduce using rule 49 (T -> T DIVIDE F .)
    PRINT           reduce using rule 49 (T -> T DIVIDE F .)
    INPUT           reduce using rule 49 (T -> T DIVIDE F .)
    CLS             reduce using rule 49 (T -> T DIVIDE F .)
    IF              reduce using rule 49 (T -> T DIVIDE F .)
    WHILE           reduce using rule 49 (T -> T DIVIDE F .)
    DO              reduce using rule 49 (T -> T DIVIDE F .)
    FOR             reduce using rule 49 (T -> T DIVIDE F .)
    GOSUB           reduce using rule 49 (T -> T DIVIDE F .)
    NEXT            reduce using rule 49 (T -> T DIVIDE F .)
    TO              reduce using rule 49 (T -> T DIVIDE F .)
    ASSIGN          reduce using rule 49 (T -> T DIVIDE F .)
    PLUS            reduce using rule 49 (T -> T DIVIDE F .)
    MINUS           reduce using rule 49 (T -> T DIVIDE F .)
    TIMES           reduce using rule 49 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 49 (T -> T DIVIDE F .)
    RPARENT         reduce using rule 49 (T -> T DIVIDE F .)


state 117

    (53) F -> LPARENT E RPARENT .

    SEMMICOLON      reduce using rule 53 (F -> LPARENT E RPARENT .)
    LET             reduce using rule 53 (F -> LPARENT E RPARENT .)
    PRINT           reduce using rule 53 (F -> LPARENT E RPARENT .)
    INPUT           reduce using rule 53 (F -> LPARENT E RPARENT .)
    CLS             reduce using rule 53 (F -> LPARENT E RPARENT .)
    IF              reduce using rule 53 (F -> LPARENT E RPARENT .)
    WHILE           reduce using rule 53 (F -> LPARENT E RPARENT .)
    DO              reduce using rule 53 (F -> LPARENT E RPARENT .)
    FOR             reduce using rule 53 (F -> LPARENT E RPARENT .)
    GOSUB           reduce using rule 53 (F -> LPARENT E RPARENT .)
    NEXT            reduce using rule 53 (F -> LPARENT E RPARENT .)
    TO              reduce using rule 53 (F -> LPARENT E RPARENT .)
    ASSIGN          reduce using rule 53 (F -> LPARENT E RPARENT .)
    PLUS            reduce using rule 53 (F -> LPARENT E RPARENT .)
    MINUS           reduce using rule 53 (F -> LPARENT E RPARENT .)
    TIMES           reduce using rule 53 (F -> LPARENT E RPARENT .)
    DIVIDE          reduce using rule 53 (F -> LPARENT E RPARENT .)
    RPARENT         reduce using rule 53 (F -> LPARENT E RPARENT .)


state 118

    (17) SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON . SP
    (17) SP -> . SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
    (18) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 18 (SP -> .)
    PRINT           reduce using rule 18 (SP -> .)
    INPUT           reduce using rule 18 (SP -> .)
    CLS             reduce using rule 18 (SP -> .)
    IF              reduce using rule 18 (SP -> .)
    WHILE           reduce using rule 18 (SP -> .)
    DO              reduce using rule 18 (SP -> .)
    FOR             reduce using rule 18 (SP -> .)
    GOSUB           reduce using rule 18 (SP -> .)
    END             reduce using rule 18 (SP -> .)

    SP                             shift and go to state 131

state 119

    (2) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .

    SUBPROCEDURE    reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    LET             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    PRINT           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    INPUT           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    CLS             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    IF              reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    WHILE           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    DO              reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    FOR             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    GOSUB           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    END             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)


state 120

    (12) DCLARRAY -> LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 132


state 121

    (13) DCLMATRIX -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 133


state 122

    (14) DCLCUBE -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 134


state 123

    (12) DCLARRAY -> LBRACKET Z RBRACKET .
    (13) DCLMATRIX -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET
    (14) DCLCUBE -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    LET             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    CLS             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    IF              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DO              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    FOR             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TO              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    LBRACKET        shift and go to state 135


state 124

    (38) TEXT -> LPARENT STRING H RPARENT .

    GTGT            reduce using rule 38 (TEXT -> LPARENT STRING H RPARENT .)
    SEMMICOLON      reduce using rule 38 (TEXT -> LPARENT STRING H RPARENT .)


state 125

    (40) H -> PLUS STRING . H
    (40) H -> . PLUS STRING H
    (41) H -> . PLUS U H
    (42) H -> .

    PLUS            shift and go to state 102
    RPARENT         reduce using rule 42 (H -> .)

    H                              shift and go to state 136

state 126

    (41) H -> PLUS U . H
    (40) H -> . PLUS STRING H
    (41) H -> . PLUS U H
    (42) H -> .

    PLUS            shift and go to state 102
    RPARENT         reduce using rule 42 (H -> .)

    H                              shift and go to state 137

state 127

    (25) STATEMENTS -> IF EL THEN X ELSE1 . ENDIF

    ENDIF           shift and go to state 138


state 128

    (43) ELSE1 -> ELSE . X
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT U
    (24) STATEMENTS -> . CLS
    (25) STATEMENTS -> . IF EL THEN X ELSE1 ENDIF
    (26) STATEMENTS -> . WHILE EL X WHEND
    (27) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (28) STATEMENTS -> . FOR O TO E X NEXT
    (29) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 139
    STATEMENTS                     shift and go to state 11

state 129

    (27) STATEMENTS -> DO X LOOPUNTIL EL ENDO .

    SEMMICOLON      reduce using rule 27 (STATEMENTS -> DO X LOOPUNTIL EL ENDO .)


state 130

    (28) STATEMENTS -> FOR O TO E X . NEXT

    NEXT            shift and go to state 140


state 131

    (17) SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .

    LET             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    PRINT           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    INPUT           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    CLS             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    IF              reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    WHILE           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    DO              reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    FOR             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    GOSUB           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    END             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)


state 132

    (12) DCLARRAY -> LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    LET             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    CLS             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    IF              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DO              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    FOR             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TO              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)


state 133

    (13) DCLMATRIX -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 141


state 134

    (14) DCLCUBE -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 142


state 135

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 143

state 136

    (40) H -> PLUS STRING H .

    RPARENT         reduce using rule 40 (H -> PLUS STRING H .)


state 137

    (41) H -> PLUS U H .

    RPARENT         reduce using rule 41 (H -> PLUS U H .)


state 138

    (25) STATEMENTS -> IF EL THEN X ELSE1 ENDIF .

    SEMMICOLON      reduce using rule 25 (STATEMENTS -> IF EL THEN X ELSE1 ENDIF .)


state 139

    (43) ELSE1 -> ELSE X .

    ENDIF           reduce using rule 43 (ELSE1 -> ELSE X .)


state 140

    (28) STATEMENTS -> FOR O TO E X NEXT .

    SEMMICOLON      reduce using rule 28 (STATEMENTS -> FOR O TO E X NEXT .)


state 141

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 144

state 142

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 145

state 143

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET
    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 146


state 144

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 147


state 145

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 148


state 146

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .
    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LET             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    CLS             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    IF              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    FOR             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TO              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LBRACKET        shift and go to state 149


state 147

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LET             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    CLS             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    IF              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    FOR             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TO              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)


state 148

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 149


state 149

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 150

state 150

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 151


state 151

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LET             reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    CLS             reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    IF              reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    FOR             reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TO              reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)

