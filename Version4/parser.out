Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID VARIABLE SP X END SEMMICOLON
Rule 2     VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE
Rule 3     VARIABLE -> <empty>
Rule 4     IDLIST -> ID
Rule 5     IDLIST -> IDLIST COMMA ID
Rule 6     TIPO -> WORD
Rule 7     TIPO -> FLOAT
Rule 8     TIPO -> ARRAY DCLARRAY
Rule 9     TIPO -> MATRIX DCLMATRIX
Rule 10    TIPO -> CUBE DCLCUBE
Rule 11    DCLARRAY -> LBRACKET Z RBRACKET
Rule 12    DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET
Rule 13    DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
Rule 14    Z -> NUMBER
Rule 15    Z -> ID
Rule 16    SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
Rule 17    SP -> <empty>
Rule 18    X -> STATEMENTS SEMMICOLON X
Rule 19    X -> <empty>
Rule 20    STATEMENTS -> LET U ASSIGN E
Rule 21    STATEMENTS -> PRINT Q
Rule 22    STATEMENTS -> INPUT TEXT GTGT VAR
Rule 23    VAR -> ID
Rule 24    VAR -> ID DCLARRAY
Rule 25    VAR -> ID DCLMATRIX
Rule 26    VAR -> ID DCLCUBE
Rule 27    STATEMENTS -> CLS
Rule 28    STATEMENTS -> IF EL THEN1 X ELSE1 X ENDIF
Rule 29    ELSE1 -> ELSE
Rule 30    ELSE1 -> <empty>
Rule 31    THEN1 -> THEN
Rule 32    STATEMENTS -> WHILE1 EL DO1 X WHEND
Rule 33    WHILE1 -> WHILE
Rule 34    DO1 -> DO
Rule 35    STATEMENTS -> DO2 X LOOPUNTIL EL ENDO
Rule 36    DO2 -> DO
Rule 37    STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 X NEXT
Rule 38    ID1 -> ID
Rule 39    TO1 -> TO
Rule 40    DO3 -> DO
Rule 41    STATEMENTS -> GOSUB ID
Rule 42    U -> ID
Rule 43    U -> ID DCLARRAY
Rule 44    U -> ID DCLMATRIX
Rule 45    U -> ID DCLCUBE
Rule 46    Q -> LPARENT VAR RPARENT
Rule 47    Q -> TEXT
Rule 48    TEXT -> LPARENT STRING H RPARENT
Rule 49    TEXT -> <empty>
Rule 50    H -> PLUS STRING H
Rule 51    H -> PLUS U H
Rule 52    H -> <empty>
Rule 53    E -> E PLUS T
Rule 54    E -> E MINUS T
Rule 55    E -> T
Rule 56    T -> T TIMES F
Rule 57    T -> T DIVIDE F
Rule 58    T -> F
Rule 59    F -> NUMBER
Rule 60    F -> U
Rule 61    F -> LPARENT E RPARENT
Rule 62    EL -> EL OR TL
Rule 63    EL -> TL NOT
Rule 64    EL -> TL
Rule 65    TL -> TL AND FL
Rule 66    TL -> FL
Rule 67    FL -> K OPREL K
Rule 68    FL -> LPARENT EL RPARENT
Rule 69    OPREL -> LT
Rule 70    OPREL -> LTE
Rule 71    OPREL -> GT
Rule 72    OPREL -> GTE
Rule 73    OPREL -> NE
Rule 74    OPREL -> EQUAL
Rule 75    K -> ID
Rule 76    K -> NUMBER

Terminals, with rules where they appear

AND                  : 65
ARRAY                : 8
AS                   : 2
ASSIGN               : 20 37
CLS                  : 27
COMMA                : 5
CUBE                 : 10
DIM                  : 2
DIVIDE               : 57
DO                   : 34 36 40
ELSE                 : 29
END                  : 1
ENDIF                : 28
ENDO                 : 35
ENDSUB               : 16
EQUAL                : 74
FLOAT                : 7
FOR                  : 37
GOSUB                : 41
GT                   : 71
GTE                  : 72
GTGT                 : 22
ID                   : 1 4 5 15 16 23 24 25 26 38 41 42 43 44 45 75
IF                   : 28
INPUT                : 22
LBRACKET             : 11 12 12 13 13 13
LET                  : 20
LOOPUNTIL            : 35
LPARENT              : 46 48 61 68
LT                   : 69
LTE                  : 70
MATRIX               : 9
MINUS                : 54
NE                   : 73
NEXT                 : 37
NOT                  : 63
NUMBER               : 14 59 76
OR                   : 62
PLUS                 : 50 51 53
PRINT                : 21
PROGRAM              : 1
RBRACKET             : 11 12 12 13 13 13
RPARENT              : 46 48 61 68
SEMMICOLON           : 1 2 16 18
STRING               : 48 50
SUBPROCEDURE         : 16
THEN                 : 31
TIMES                : 56
TO                   : 39
WHEND                : 32
WHILE                : 33
WORD                 : 6
error                : 

Nonterminals, with rules where they appear

DCLARRAY             : 8 24 43
DCLCUBE              : 10 26 45
DCLMATRIX            : 9 25 44
DO1                  : 32
DO2                  : 35
DO3                  : 37
E                    : 20 37 37 53 54 61
EL                   : 28 32 35 62 68
ELSE1                : 28
F                    : 56 57 58
FL                   : 65 66
H                    : 48 50 51
ID1                  : 37
IDLIST               : 2 5
K                    : 67 67
OPREL                : 67
Q                    : 21
SP                   : 1 16
STATEMENTS           : 18
T                    : 53 54 55 56 57
TEXT                 : 22 47
THEN1                : 28
TIPO                 : 2
TL                   : 62 63 64 65
TO1                  : 37
U                    : 20 51 60
VAR                  : 22 46
VARIABLE             : 1 2
WHILE1               : 32
X                    : 1 16 18 28 28 32 35 37
Z                    : 11 12 12 13 13 13
program              : 0

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID VARIABLE SP X END SEMMICOLON

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID VARIABLE SP X END SEMMICOLON

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . VARIABLE SP X END SEMMICOLON
    (2) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (3) VARIABLE -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (VARIABLE -> .)
    LET             reduce using rule 3 (VARIABLE -> .)
    PRINT           reduce using rule 3 (VARIABLE -> .)
    INPUT           reduce using rule 3 (VARIABLE -> .)
    CLS             reduce using rule 3 (VARIABLE -> .)
    IF              reduce using rule 3 (VARIABLE -> .)
    FOR             reduce using rule 3 (VARIABLE -> .)
    GOSUB           reduce using rule 3 (VARIABLE -> .)
    WHILE           reduce using rule 3 (VARIABLE -> .)
    DO              reduce using rule 3 (VARIABLE -> .)
    END             reduce using rule 3 (VARIABLE -> .)

    VARIABLE                       shift and go to state 4

state 4

    (1) program -> PROGRAM ID VARIABLE . SP X END SEMMICOLON
    (16) SP -> . SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
    (17) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 17 (SP -> .)
    PRINT           reduce using rule 17 (SP -> .)
    INPUT           reduce using rule 17 (SP -> .)
    CLS             reduce using rule 17 (SP -> .)
    IF              reduce using rule 17 (SP -> .)
    FOR             reduce using rule 17 (SP -> .)
    GOSUB           reduce using rule 17 (SP -> .)
    WHILE           reduce using rule 17 (SP -> .)
    DO              reduce using rule 17 (SP -> .)
    END             reduce using rule 17 (SP -> .)

    SP                             shift and go to state 6

state 5

    (2) VARIABLE -> DIM . IDLIST AS TIPO SEMMICOLON VARIABLE
    (4) IDLIST -> . ID
    (5) IDLIST -> . IDLIST COMMA ID

    ID              shift and go to state 9

    IDLIST                         shift and go to state 8

state 6

    (1) program -> PROGRAM ID VARIABLE SP . X END SEMMICOLON
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    X                              shift and go to state 10
    STATEMENTS                     shift and go to state 11
    WHILE1                         shift and go to state 17
    DO2                            shift and go to state 18

state 7

    (16) SP -> SUBPROCEDURE . ID X ENDSUB SEMMICOLON SP

    ID              shift and go to state 23


state 8

    (2) VARIABLE -> DIM IDLIST . AS TIPO SEMMICOLON VARIABLE
    (5) IDLIST -> IDLIST . COMMA ID

    AS              shift and go to state 24
    COMMA           shift and go to state 25


state 9

    (4) IDLIST -> ID .

    AS              reduce using rule 4 (IDLIST -> ID .)
    COMMA           reduce using rule 4 (IDLIST -> ID .)


state 10

    (1) program -> PROGRAM ID VARIABLE SP X . END SEMMICOLON

    END             shift and go to state 26


state 11

    (18) X -> STATEMENTS . SEMMICOLON X

    SEMMICOLON      shift and go to state 27


state 12

    (20) STATEMENTS -> LET . U ASSIGN E
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    ID              shift and go to state 29

    U                              shift and go to state 28

state 13

    (21) STATEMENTS -> PRINT . Q
    (46) Q -> . LPARENT VAR RPARENT
    (47) Q -> . TEXT
    (48) TEXT -> . LPARENT STRING H RPARENT
    (49) TEXT -> .

    LPARENT         shift and go to state 31
    GTGT            reduce using rule 49 (TEXT -> .)
    SEMMICOLON      reduce using rule 49 (TEXT -> .)

    Q                              shift and go to state 30
    TEXT                           shift and go to state 32

state 14

    (22) STATEMENTS -> INPUT . TEXT GTGT VAR
    (48) TEXT -> . LPARENT STRING H RPARENT
    (49) TEXT -> .

    LPARENT         shift and go to state 34
    GTGT            reduce using rule 49 (TEXT -> .)
    SEMMICOLON      reduce using rule 49 (TEXT -> .)

    TEXT                           shift and go to state 33

state 15

    (27) STATEMENTS -> CLS .

    SEMMICOLON      reduce using rule 27 (STATEMENTS -> CLS .)


state 16

    (28) STATEMENTS -> IF . EL THEN1 X ELSE1 X ENDIF
    (62) EL -> . EL OR TL
    (63) EL -> . TL NOT
    (64) EL -> . TL
    (65) TL -> . TL AND FL
    (66) TL -> . FL
    (67) FL -> . K OPREL K
    (68) FL -> . LPARENT EL RPARENT
    (75) K -> . ID
    (76) K -> . NUMBER

    LPARENT         shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41

    EL                             shift and go to state 35
    TL                             shift and go to state 36
    FL                             shift and go to state 37
    K                              shift and go to state 38

state 17

    (32) STATEMENTS -> WHILE1 . EL DO1 X WHEND
    (62) EL -> . EL OR TL
    (63) EL -> . TL NOT
    (64) EL -> . TL
    (65) TL -> . TL AND FL
    (66) TL -> . FL
    (67) FL -> . K OPREL K
    (68) FL -> . LPARENT EL RPARENT
    (75) K -> . ID
    (76) K -> . NUMBER

    LPARENT         shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41

    EL                             shift and go to state 42
    TL                             shift and go to state 36
    FL                             shift and go to state 37
    K                              shift and go to state 38

state 18

    (35) STATEMENTS -> DO2 . X LOOPUNTIL EL ENDO
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    DO2                            shift and go to state 18
    X                              shift and go to state 43
    STATEMENTS                     shift and go to state 11
    WHILE1                         shift and go to state 17

state 19

    (37) STATEMENTS -> FOR . ID1 ASSIGN E TO1 E DO3 X NEXT
    (38) ID1 -> . ID

    ID              shift and go to state 45

    ID1                            shift and go to state 44

state 20

    (41) STATEMENTS -> GOSUB . ID

    ID              shift and go to state 46


state 21

    (33) WHILE1 -> WHILE .

    LPARENT         reduce using rule 33 (WHILE1 -> WHILE .)
    ID              reduce using rule 33 (WHILE1 -> WHILE .)
    NUMBER          reduce using rule 33 (WHILE1 -> WHILE .)


state 22

    (36) DO2 -> DO .

    LET             reduce using rule 36 (DO2 -> DO .)
    PRINT           reduce using rule 36 (DO2 -> DO .)
    INPUT           reduce using rule 36 (DO2 -> DO .)
    CLS             reduce using rule 36 (DO2 -> DO .)
    IF              reduce using rule 36 (DO2 -> DO .)
    FOR             reduce using rule 36 (DO2 -> DO .)
    GOSUB           reduce using rule 36 (DO2 -> DO .)
    WHILE           reduce using rule 36 (DO2 -> DO .)
    DO              reduce using rule 36 (DO2 -> DO .)
    LOOPUNTIL       reduce using rule 36 (DO2 -> DO .)


state 23

    (16) SP -> SUBPROCEDURE ID . X ENDSUB SEMMICOLON SP
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    X                              shift and go to state 47
    STATEMENTS                     shift and go to state 11
    WHILE1                         shift and go to state 17
    DO2                            shift and go to state 18

state 24

    (2) VARIABLE -> DIM IDLIST AS . TIPO SEMMICOLON VARIABLE
    (6) TIPO -> . WORD
    (7) TIPO -> . FLOAT
    (8) TIPO -> . ARRAY DCLARRAY
    (9) TIPO -> . MATRIX DCLMATRIX
    (10) TIPO -> . CUBE DCLCUBE

    WORD            shift and go to state 49
    FLOAT           shift and go to state 50
    ARRAY           shift and go to state 51
    MATRIX          shift and go to state 52
    CUBE            shift and go to state 53

    TIPO                           shift and go to state 48

state 25

    (5) IDLIST -> IDLIST COMMA . ID

    ID              shift and go to state 54


state 26

    (1) program -> PROGRAM ID VARIABLE SP X END . SEMMICOLON

    SEMMICOLON      shift and go to state 55


state 27

    (18) X -> STATEMENTS SEMMICOLON . X
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    STATEMENTS                     shift and go to state 11
    X                              shift and go to state 56
    WHILE1                         shift and go to state 17
    DO2                            shift and go to state 18

state 28

    (20) STATEMENTS -> LET U . ASSIGN E

    ASSIGN          shift and go to state 57


state 29

    (42) U -> ID .
    (43) U -> ID . DCLARRAY
    (44) U -> ID . DCLMATRIX
    (45) U -> ID . DCLCUBE
    (11) DCLARRAY -> . LBRACKET Z RBRACKET
    (12) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (13) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    ASSIGN          reduce using rule 42 (U -> ID .)
    PLUS            reduce using rule 42 (U -> ID .)
    RPARENT         reduce using rule 42 (U -> ID .)
    SEMMICOLON      reduce using rule 42 (U -> ID .)
    TO              reduce using rule 42 (U -> ID .)
    DO              reduce using rule 42 (U -> ID .)
    MINUS           reduce using rule 42 (U -> ID .)
    TIMES           reduce using rule 42 (U -> ID .)
    DIVIDE          reduce using rule 42 (U -> ID .)
    LBRACKET        shift and go to state 61

    DCLARRAY                       shift and go to state 58
    DCLMATRIX                      shift and go to state 59
    DCLCUBE                        shift and go to state 60

state 30

    (21) STATEMENTS -> PRINT Q .

    SEMMICOLON      reduce using rule 21 (STATEMENTS -> PRINT Q .)


state 31

    (46) Q -> LPARENT . VAR RPARENT
    (48) TEXT -> LPARENT . STRING H RPARENT
    (23) VAR -> . ID
    (24) VAR -> . ID DCLARRAY
    (25) VAR -> . ID DCLMATRIX
    (26) VAR -> . ID DCLCUBE

    STRING          shift and go to state 63
    ID              shift and go to state 64

    VAR                            shift and go to state 62

state 32

    (47) Q -> TEXT .

    SEMMICOLON      reduce using rule 47 (Q -> TEXT .)


state 33

    (22) STATEMENTS -> INPUT TEXT . GTGT VAR

    GTGT            shift and go to state 65


state 34

    (48) TEXT -> LPARENT . STRING H RPARENT

    STRING          shift and go to state 63


state 35

    (28) STATEMENTS -> IF EL . THEN1 X ELSE1 X ENDIF
    (62) EL -> EL . OR TL
    (31) THEN1 -> . THEN

    OR              shift and go to state 67
    THEN            shift and go to state 68

    THEN1                          shift and go to state 66

state 36

    (63) EL -> TL . NOT
    (64) EL -> TL .
    (65) TL -> TL . AND FL

    NOT             shift and go to state 69
    THEN            reduce using rule 64 (EL -> TL .)
    DO              reduce using rule 64 (EL -> TL .)
    ENDO            reduce using rule 64 (EL -> TL .)
    OR              reduce using rule 64 (EL -> TL .)
    RPARENT         reduce using rule 64 (EL -> TL .)
    AND             shift and go to state 70


state 37

    (66) TL -> FL .

    THEN            reduce using rule 66 (TL -> FL .)
    DO              reduce using rule 66 (TL -> FL .)
    ENDO            reduce using rule 66 (TL -> FL .)
    OR              reduce using rule 66 (TL -> FL .)
    NOT             reduce using rule 66 (TL -> FL .)
    AND             reduce using rule 66 (TL -> FL .)
    RPARENT         reduce using rule 66 (TL -> FL .)


state 38

    (67) FL -> K . OPREL K
    (69) OPREL -> . LT
    (70) OPREL -> . LTE
    (71) OPREL -> . GT
    (72) OPREL -> . GTE
    (73) OPREL -> . NE
    (74) OPREL -> . EQUAL

    LT              shift and go to state 72
    LTE             shift and go to state 73
    GT              shift and go to state 74
    GTE             shift and go to state 75
    NE              shift and go to state 76
    EQUAL           shift and go to state 77

    OPREL                          shift and go to state 71

state 39

    (68) FL -> LPARENT . EL RPARENT
    (62) EL -> . EL OR TL
    (63) EL -> . TL NOT
    (64) EL -> . TL
    (65) TL -> . TL AND FL
    (66) TL -> . FL
    (67) FL -> . K OPREL K
    (68) FL -> . LPARENT EL RPARENT
    (75) K -> . ID
    (76) K -> . NUMBER

    LPARENT         shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41

    EL                             shift and go to state 78
    TL                             shift and go to state 36
    FL                             shift and go to state 37
    K                              shift and go to state 38

state 40

    (75) K -> ID .

    LT              reduce using rule 75 (K -> ID .)
    LTE             reduce using rule 75 (K -> ID .)
    GT              reduce using rule 75 (K -> ID .)
    GTE             reduce using rule 75 (K -> ID .)
    NE              reduce using rule 75 (K -> ID .)
    EQUAL           reduce using rule 75 (K -> ID .)
    THEN            reduce using rule 75 (K -> ID .)
    DO              reduce using rule 75 (K -> ID .)
    ENDO            reduce using rule 75 (K -> ID .)
    OR              reduce using rule 75 (K -> ID .)
    NOT             reduce using rule 75 (K -> ID .)
    AND             reduce using rule 75 (K -> ID .)
    RPARENT         reduce using rule 75 (K -> ID .)


state 41

    (76) K -> NUMBER .

    LT              reduce using rule 76 (K -> NUMBER .)
    LTE             reduce using rule 76 (K -> NUMBER .)
    GT              reduce using rule 76 (K -> NUMBER .)
    GTE             reduce using rule 76 (K -> NUMBER .)
    NE              reduce using rule 76 (K -> NUMBER .)
    EQUAL           reduce using rule 76 (K -> NUMBER .)
    THEN            reduce using rule 76 (K -> NUMBER .)
    DO              reduce using rule 76 (K -> NUMBER .)
    ENDO            reduce using rule 76 (K -> NUMBER .)
    OR              reduce using rule 76 (K -> NUMBER .)
    NOT             reduce using rule 76 (K -> NUMBER .)
    AND             reduce using rule 76 (K -> NUMBER .)
    RPARENT         reduce using rule 76 (K -> NUMBER .)


state 42

    (32) STATEMENTS -> WHILE1 EL . DO1 X WHEND
    (62) EL -> EL . OR TL
    (34) DO1 -> . DO

    OR              shift and go to state 67
    DO              shift and go to state 80

    DO1                            shift and go to state 79

state 43

    (35) STATEMENTS -> DO2 X . LOOPUNTIL EL ENDO

    LOOPUNTIL       shift and go to state 81


state 44

    (37) STATEMENTS -> FOR ID1 . ASSIGN E TO1 E DO3 X NEXT

    ASSIGN          shift and go to state 82


state 45

    (38) ID1 -> ID .

    ASSIGN          reduce using rule 38 (ID1 -> ID .)


state 46

    (41) STATEMENTS -> GOSUB ID .

    SEMMICOLON      reduce using rule 41 (STATEMENTS -> GOSUB ID .)


state 47

    (16) SP -> SUBPROCEDURE ID X . ENDSUB SEMMICOLON SP

    ENDSUB          shift and go to state 83


state 48

    (2) VARIABLE -> DIM IDLIST AS TIPO . SEMMICOLON VARIABLE

    SEMMICOLON      shift and go to state 84


state 49

    (6) TIPO -> WORD .

    SEMMICOLON      reduce using rule 6 (TIPO -> WORD .)


state 50

    (7) TIPO -> FLOAT .

    SEMMICOLON      reduce using rule 7 (TIPO -> FLOAT .)


state 51

    (8) TIPO -> ARRAY . DCLARRAY
    (11) DCLARRAY -> . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 86

    DCLARRAY                       shift and go to state 85

state 52

    (9) TIPO -> MATRIX . DCLMATRIX
    (12) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 88

    DCLMATRIX                      shift and go to state 87

state 53

    (10) TIPO -> CUBE . DCLCUBE
    (13) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 90

    DCLCUBE                        shift and go to state 89

state 54

    (5) IDLIST -> IDLIST COMMA ID .

    AS              reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)
    COMMA           reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)


state 55

    (1) program -> PROGRAM ID VARIABLE SP X END SEMMICOLON .

    $end            reduce using rule 1 (program -> PROGRAM ID VARIABLE SP X END SEMMICOLON .)


state 56

    (18) X -> STATEMENTS SEMMICOLON X .

    END             reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    ENDSUB          reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    ELSE            reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    LET             reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    PRINT           reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    INPUT           reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    CLS             reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    IF              reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    FOR             reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    GOSUB           reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    WHILE           reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    DO              reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    ENDIF           reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    WHEND           reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    LOOPUNTIL       reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)
    NEXT            reduce using rule 18 (X -> STATEMENTS SEMMICOLON X .)


state 57

    (20) STATEMENTS -> LET U ASSIGN . E
    (53) E -> . E PLUS T
    (54) E -> . E MINUS T
    (55) E -> . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    U                              shift and go to state 91
    E                              shift and go to state 92
    T                              shift and go to state 93
    F                              shift and go to state 94

state 58

    (43) U -> ID DCLARRAY .

    ASSIGN          reduce using rule 43 (U -> ID DCLARRAY .)
    PLUS            reduce using rule 43 (U -> ID DCLARRAY .)
    RPARENT         reduce using rule 43 (U -> ID DCLARRAY .)
    SEMMICOLON      reduce using rule 43 (U -> ID DCLARRAY .)
    TO              reduce using rule 43 (U -> ID DCLARRAY .)
    DO              reduce using rule 43 (U -> ID DCLARRAY .)
    MINUS           reduce using rule 43 (U -> ID DCLARRAY .)
    TIMES           reduce using rule 43 (U -> ID DCLARRAY .)
    DIVIDE          reduce using rule 43 (U -> ID DCLARRAY .)


state 59

    (44) U -> ID DCLMATRIX .

    ASSIGN          reduce using rule 44 (U -> ID DCLMATRIX .)
    PLUS            reduce using rule 44 (U -> ID DCLMATRIX .)
    RPARENT         reduce using rule 44 (U -> ID DCLMATRIX .)
    SEMMICOLON      reduce using rule 44 (U -> ID DCLMATRIX .)
    TO              reduce using rule 44 (U -> ID DCLMATRIX .)
    DO              reduce using rule 44 (U -> ID DCLMATRIX .)
    MINUS           reduce using rule 44 (U -> ID DCLMATRIX .)
    TIMES           reduce using rule 44 (U -> ID DCLMATRIX .)
    DIVIDE          reduce using rule 44 (U -> ID DCLMATRIX .)


state 60

    (45) U -> ID DCLCUBE .

    ASSIGN          reduce using rule 45 (U -> ID DCLCUBE .)
    PLUS            reduce using rule 45 (U -> ID DCLCUBE .)
    RPARENT         reduce using rule 45 (U -> ID DCLCUBE .)
    SEMMICOLON      reduce using rule 45 (U -> ID DCLCUBE .)
    TO              reduce using rule 45 (U -> ID DCLCUBE .)
    DO              reduce using rule 45 (U -> ID DCLCUBE .)
    MINUS           reduce using rule 45 (U -> ID DCLCUBE .)
    TIMES           reduce using rule 45 (U -> ID DCLCUBE .)
    DIVIDE          reduce using rule 45 (U -> ID DCLCUBE .)


state 61

    (11) DCLARRAY -> LBRACKET . Z RBRACKET
    (12) DCLMATRIX -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (13) DCLCUBE -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 97

state 62

    (46) Q -> LPARENT VAR . RPARENT

    RPARENT         shift and go to state 100


state 63

    (48) TEXT -> LPARENT STRING . H RPARENT
    (50) H -> . PLUS STRING H
    (51) H -> . PLUS U H
    (52) H -> .

    PLUS            shift and go to state 102
    RPARENT         reduce using rule 52 (H -> .)

    H                              shift and go to state 101

state 64

    (23) VAR -> ID .
    (24) VAR -> ID . DCLARRAY
    (25) VAR -> ID . DCLMATRIX
    (26) VAR -> ID . DCLCUBE
    (11) DCLARRAY -> . LBRACKET Z RBRACKET
    (12) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (13) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 23 (VAR -> ID .)
    RPARENT         reduce using rule 23 (VAR -> ID .)
    LBRACKET        shift and go to state 61

    DCLARRAY                       shift and go to state 103
    DCLMATRIX                      shift and go to state 104
    DCLCUBE                        shift and go to state 105

state 65

    (22) STATEMENTS -> INPUT TEXT GTGT . VAR
    (23) VAR -> . ID
    (24) VAR -> . ID DCLARRAY
    (25) VAR -> . ID DCLMATRIX
    (26) VAR -> . ID DCLCUBE

    ID              shift and go to state 64

    VAR                            shift and go to state 106

state 66

    (28) STATEMENTS -> IF EL THEN1 . X ELSE1 X ENDIF
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    X                              shift and go to state 107
    STATEMENTS                     shift and go to state 11
    WHILE1                         shift and go to state 17
    DO2                            shift and go to state 18

state 67

    (62) EL -> EL OR . TL
    (65) TL -> . TL AND FL
    (66) TL -> . FL
    (67) FL -> . K OPREL K
    (68) FL -> . LPARENT EL RPARENT
    (75) K -> . ID
    (76) K -> . NUMBER

    LPARENT         shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41

    TL                             shift and go to state 108
    FL                             shift and go to state 37
    K                              shift and go to state 38

state 68

    (31) THEN1 -> THEN .

    LET             reduce using rule 31 (THEN1 -> THEN .)
    PRINT           reduce using rule 31 (THEN1 -> THEN .)
    INPUT           reduce using rule 31 (THEN1 -> THEN .)
    CLS             reduce using rule 31 (THEN1 -> THEN .)
    IF              reduce using rule 31 (THEN1 -> THEN .)
    FOR             reduce using rule 31 (THEN1 -> THEN .)
    GOSUB           reduce using rule 31 (THEN1 -> THEN .)
    WHILE           reduce using rule 31 (THEN1 -> THEN .)
    DO              reduce using rule 31 (THEN1 -> THEN .)
    ELSE            reduce using rule 31 (THEN1 -> THEN .)
    ENDIF           reduce using rule 31 (THEN1 -> THEN .)


state 69

    (63) EL -> TL NOT .

    THEN            reduce using rule 63 (EL -> TL NOT .)
    DO              reduce using rule 63 (EL -> TL NOT .)
    ENDO            reduce using rule 63 (EL -> TL NOT .)
    OR              reduce using rule 63 (EL -> TL NOT .)
    RPARENT         reduce using rule 63 (EL -> TL NOT .)


state 70

    (65) TL -> TL AND . FL
    (67) FL -> . K OPREL K
    (68) FL -> . LPARENT EL RPARENT
    (75) K -> . ID
    (76) K -> . NUMBER

    LPARENT         shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41

    FL                             shift and go to state 109
    K                              shift and go to state 38

state 71

    (67) FL -> K OPREL . K
    (75) K -> . ID
    (76) K -> . NUMBER

    ID              shift and go to state 40
    NUMBER          shift and go to state 41

    K                              shift and go to state 110

state 72

    (69) OPREL -> LT .

    ID              reduce using rule 69 (OPREL -> LT .)
    NUMBER          reduce using rule 69 (OPREL -> LT .)


state 73

    (70) OPREL -> LTE .

    ID              reduce using rule 70 (OPREL -> LTE .)
    NUMBER          reduce using rule 70 (OPREL -> LTE .)


state 74

    (71) OPREL -> GT .

    ID              reduce using rule 71 (OPREL -> GT .)
    NUMBER          reduce using rule 71 (OPREL -> GT .)


state 75

    (72) OPREL -> GTE .

    ID              reduce using rule 72 (OPREL -> GTE .)
    NUMBER          reduce using rule 72 (OPREL -> GTE .)


state 76

    (73) OPREL -> NE .

    ID              reduce using rule 73 (OPREL -> NE .)
    NUMBER          reduce using rule 73 (OPREL -> NE .)


state 77

    (74) OPREL -> EQUAL .

    ID              reduce using rule 74 (OPREL -> EQUAL .)
    NUMBER          reduce using rule 74 (OPREL -> EQUAL .)


state 78

    (68) FL -> LPARENT EL . RPARENT
    (62) EL -> EL . OR TL

    RPARENT         shift and go to state 111
    OR              shift and go to state 67


state 79

    (32) STATEMENTS -> WHILE1 EL DO1 . X WHEND
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    WHILE1                         shift and go to state 17
    X                              shift and go to state 112
    STATEMENTS                     shift and go to state 11
    DO2                            shift and go to state 18

state 80

    (34) DO1 -> DO .

    LET             reduce using rule 34 (DO1 -> DO .)
    PRINT           reduce using rule 34 (DO1 -> DO .)
    INPUT           reduce using rule 34 (DO1 -> DO .)
    CLS             reduce using rule 34 (DO1 -> DO .)
    IF              reduce using rule 34 (DO1 -> DO .)
    FOR             reduce using rule 34 (DO1 -> DO .)
    GOSUB           reduce using rule 34 (DO1 -> DO .)
    WHILE           reduce using rule 34 (DO1 -> DO .)
    DO              reduce using rule 34 (DO1 -> DO .)
    WHEND           reduce using rule 34 (DO1 -> DO .)


state 81

    (35) STATEMENTS -> DO2 X LOOPUNTIL . EL ENDO
    (62) EL -> . EL OR TL
    (63) EL -> . TL NOT
    (64) EL -> . TL
    (65) TL -> . TL AND FL
    (66) TL -> . FL
    (67) FL -> . K OPREL K
    (68) FL -> . LPARENT EL RPARENT
    (75) K -> . ID
    (76) K -> . NUMBER

    LPARENT         shift and go to state 39
    ID              shift and go to state 40
    NUMBER          shift and go to state 41

    EL                             shift and go to state 113
    TL                             shift and go to state 36
    FL                             shift and go to state 37
    K                              shift and go to state 38

state 82

    (37) STATEMENTS -> FOR ID1 ASSIGN . E TO1 E DO3 X NEXT
    (53) E -> . E PLUS T
    (54) E -> . E MINUS T
    (55) E -> . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    E                              shift and go to state 114
    T                              shift and go to state 93
    F                              shift and go to state 94
    U                              shift and go to state 91

state 83

    (16) SP -> SUBPROCEDURE ID X ENDSUB . SEMMICOLON SP

    SEMMICOLON      shift and go to state 115


state 84

    (2) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON . VARIABLE
    (2) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (3) VARIABLE -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (VARIABLE -> .)
    LET             reduce using rule 3 (VARIABLE -> .)
    PRINT           reduce using rule 3 (VARIABLE -> .)
    INPUT           reduce using rule 3 (VARIABLE -> .)
    CLS             reduce using rule 3 (VARIABLE -> .)
    IF              reduce using rule 3 (VARIABLE -> .)
    FOR             reduce using rule 3 (VARIABLE -> .)
    GOSUB           reduce using rule 3 (VARIABLE -> .)
    WHILE           reduce using rule 3 (VARIABLE -> .)
    DO              reduce using rule 3 (VARIABLE -> .)
    END             reduce using rule 3 (VARIABLE -> .)

    VARIABLE                       shift and go to state 116

state 85

    (8) TIPO -> ARRAY DCLARRAY .

    SEMMICOLON      reduce using rule 8 (TIPO -> ARRAY DCLARRAY .)


state 86

    (11) DCLARRAY -> LBRACKET . Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 117

state 87

    (9) TIPO -> MATRIX DCLMATRIX .

    SEMMICOLON      reduce using rule 9 (TIPO -> MATRIX DCLMATRIX .)


state 88

    (12) DCLMATRIX -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 118

state 89

    (10) TIPO -> CUBE DCLCUBE .

    SEMMICOLON      reduce using rule 10 (TIPO -> CUBE DCLCUBE .)


state 90

    (13) DCLCUBE -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 119

state 91

    (60) F -> U .

    SEMMICOLON      reduce using rule 60 (F -> U .)
    TO              reduce using rule 60 (F -> U .)
    DO              reduce using rule 60 (F -> U .)
    PLUS            reduce using rule 60 (F -> U .)
    MINUS           reduce using rule 60 (F -> U .)
    TIMES           reduce using rule 60 (F -> U .)
    DIVIDE          reduce using rule 60 (F -> U .)
    RPARENT         reduce using rule 60 (F -> U .)


state 92

    (20) STATEMENTS -> LET U ASSIGN E .
    (53) E -> E . PLUS T
    (54) E -> E . MINUS T

    SEMMICOLON      reduce using rule 20 (STATEMENTS -> LET U ASSIGN E .)
    PLUS            shift and go to state 120
    MINUS           shift and go to state 121


state 93

    (55) E -> T .
    (56) T -> T . TIMES F
    (57) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 55 (E -> T .)
    TO              reduce using rule 55 (E -> T .)
    DO              reduce using rule 55 (E -> T .)
    PLUS            reduce using rule 55 (E -> T .)
    MINUS           reduce using rule 55 (E -> T .)
    RPARENT         reduce using rule 55 (E -> T .)
    TIMES           shift and go to state 122
    DIVIDE          shift and go to state 123


state 94

    (58) T -> F .

    SEMMICOLON      reduce using rule 58 (T -> F .)
    TO              reduce using rule 58 (T -> F .)
    DO              reduce using rule 58 (T -> F .)
    PLUS            reduce using rule 58 (T -> F .)
    MINUS           reduce using rule 58 (T -> F .)
    TIMES           reduce using rule 58 (T -> F .)
    DIVIDE          reduce using rule 58 (T -> F .)
    RPARENT         reduce using rule 58 (T -> F .)


state 95

    (59) F -> NUMBER .

    SEMMICOLON      reduce using rule 59 (F -> NUMBER .)
    TO              reduce using rule 59 (F -> NUMBER .)
    DO              reduce using rule 59 (F -> NUMBER .)
    PLUS            reduce using rule 59 (F -> NUMBER .)
    MINUS           reduce using rule 59 (F -> NUMBER .)
    TIMES           reduce using rule 59 (F -> NUMBER .)
    DIVIDE          reduce using rule 59 (F -> NUMBER .)
    RPARENT         reduce using rule 59 (F -> NUMBER .)


state 96

    (61) F -> LPARENT . E RPARENT
    (53) E -> . E PLUS T
    (54) E -> . E MINUS T
    (55) E -> . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    E                              shift and go to state 124
    T                              shift and go to state 93
    F                              shift and go to state 94
    U                              shift and go to state 91

state 97

    (11) DCLARRAY -> LBRACKET Z . RBRACKET
    (12) DCLMATRIX -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET
    (13) DCLCUBE -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 125


state 98

    (14) Z -> NUMBER .

    RBRACKET        reduce using rule 14 (Z -> NUMBER .)


state 99

    (15) Z -> ID .

    RBRACKET        reduce using rule 15 (Z -> ID .)


state 100

    (46) Q -> LPARENT VAR RPARENT .

    SEMMICOLON      reduce using rule 46 (Q -> LPARENT VAR RPARENT .)


state 101

    (48) TEXT -> LPARENT STRING H . RPARENT

    RPARENT         shift and go to state 126


state 102

    (50) H -> PLUS . STRING H
    (51) H -> PLUS . U H
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    STRING          shift and go to state 127
    ID              shift and go to state 29

    U                              shift and go to state 128

state 103

    (24) VAR -> ID DCLARRAY .

    SEMMICOLON      reduce using rule 24 (VAR -> ID DCLARRAY .)
    RPARENT         reduce using rule 24 (VAR -> ID DCLARRAY .)


state 104

    (25) VAR -> ID DCLMATRIX .

    SEMMICOLON      reduce using rule 25 (VAR -> ID DCLMATRIX .)
    RPARENT         reduce using rule 25 (VAR -> ID DCLMATRIX .)


state 105

    (26) VAR -> ID DCLCUBE .

    SEMMICOLON      reduce using rule 26 (VAR -> ID DCLCUBE .)
    RPARENT         reduce using rule 26 (VAR -> ID DCLCUBE .)


state 106

    (22) STATEMENTS -> INPUT TEXT GTGT VAR .

    SEMMICOLON      reduce using rule 22 (STATEMENTS -> INPUT TEXT GTGT VAR .)


state 107

    (28) STATEMENTS -> IF EL THEN1 X . ELSE1 X ENDIF
    (29) ELSE1 -> . ELSE
    (30) ELSE1 -> .

    ELSE            shift and go to state 130
    LET             reduce using rule 30 (ELSE1 -> .)
    PRINT           reduce using rule 30 (ELSE1 -> .)
    INPUT           reduce using rule 30 (ELSE1 -> .)
    CLS             reduce using rule 30 (ELSE1 -> .)
    IF              reduce using rule 30 (ELSE1 -> .)
    FOR             reduce using rule 30 (ELSE1 -> .)
    GOSUB           reduce using rule 30 (ELSE1 -> .)
    WHILE           reduce using rule 30 (ELSE1 -> .)
    DO              reduce using rule 30 (ELSE1 -> .)
    ENDIF           reduce using rule 30 (ELSE1 -> .)

    ELSE1                          shift and go to state 129

state 108

    (62) EL -> EL OR TL .
    (65) TL -> TL . AND FL

    THEN            reduce using rule 62 (EL -> EL OR TL .)
    DO              reduce using rule 62 (EL -> EL OR TL .)
    ENDO            reduce using rule 62 (EL -> EL OR TL .)
    OR              reduce using rule 62 (EL -> EL OR TL .)
    RPARENT         reduce using rule 62 (EL -> EL OR TL .)
    AND             shift and go to state 70


state 109

    (65) TL -> TL AND FL .

    THEN            reduce using rule 65 (TL -> TL AND FL .)
    DO              reduce using rule 65 (TL -> TL AND FL .)
    ENDO            reduce using rule 65 (TL -> TL AND FL .)
    OR              reduce using rule 65 (TL -> TL AND FL .)
    NOT             reduce using rule 65 (TL -> TL AND FL .)
    AND             reduce using rule 65 (TL -> TL AND FL .)
    RPARENT         reduce using rule 65 (TL -> TL AND FL .)


state 110

    (67) FL -> K OPREL K .

    THEN            reduce using rule 67 (FL -> K OPREL K .)
    DO              reduce using rule 67 (FL -> K OPREL K .)
    ENDO            reduce using rule 67 (FL -> K OPREL K .)
    OR              reduce using rule 67 (FL -> K OPREL K .)
    NOT             reduce using rule 67 (FL -> K OPREL K .)
    AND             reduce using rule 67 (FL -> K OPREL K .)
    RPARENT         reduce using rule 67 (FL -> K OPREL K .)


state 111

    (68) FL -> LPARENT EL RPARENT .

    THEN            reduce using rule 68 (FL -> LPARENT EL RPARENT .)
    DO              reduce using rule 68 (FL -> LPARENT EL RPARENT .)
    ENDO            reduce using rule 68 (FL -> LPARENT EL RPARENT .)
    OR              reduce using rule 68 (FL -> LPARENT EL RPARENT .)
    NOT             reduce using rule 68 (FL -> LPARENT EL RPARENT .)
    AND             reduce using rule 68 (FL -> LPARENT EL RPARENT .)
    RPARENT         reduce using rule 68 (FL -> LPARENT EL RPARENT .)


state 112

    (32) STATEMENTS -> WHILE1 EL DO1 X . WHEND

    WHEND           shift and go to state 131


state 113

    (35) STATEMENTS -> DO2 X LOOPUNTIL EL . ENDO
    (62) EL -> EL . OR TL

    ENDO            shift and go to state 132
    OR              shift and go to state 67


state 114

    (37) STATEMENTS -> FOR ID1 ASSIGN E . TO1 E DO3 X NEXT
    (53) E -> E . PLUS T
    (54) E -> E . MINUS T
    (39) TO1 -> . TO

    PLUS            shift and go to state 120
    MINUS           shift and go to state 121
    TO              shift and go to state 134

    TO1                            shift and go to state 133

state 115

    (16) SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON . SP
    (16) SP -> . SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
    (17) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 17 (SP -> .)
    PRINT           reduce using rule 17 (SP -> .)
    INPUT           reduce using rule 17 (SP -> .)
    CLS             reduce using rule 17 (SP -> .)
    IF              reduce using rule 17 (SP -> .)
    FOR             reduce using rule 17 (SP -> .)
    GOSUB           reduce using rule 17 (SP -> .)
    WHILE           reduce using rule 17 (SP -> .)
    DO              reduce using rule 17 (SP -> .)
    END             reduce using rule 17 (SP -> .)

    SP                             shift and go to state 135

state 116

    (2) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .

    SUBPROCEDURE    reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    LET             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    PRINT           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    INPUT           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    CLS             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    IF              reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    FOR             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    GOSUB           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    WHILE           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    DO              reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    END             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)


state 117

    (11) DCLARRAY -> LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 136


state 118

    (12) DCLMATRIX -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 137


state 119

    (13) DCLCUBE -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 138


state 120

    (53) E -> E PLUS . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    T                              shift and go to state 139
    F                              shift and go to state 94
    U                              shift and go to state 91

state 121

    (54) E -> E MINUS . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    T                              shift and go to state 140
    F                              shift and go to state 94
    U                              shift and go to state 91

state 122

    (56) T -> T TIMES . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    F                              shift and go to state 141
    U                              shift and go to state 91

state 123

    (57) T -> T DIVIDE . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    F                              shift and go to state 142
    U                              shift and go to state 91

state 124

    (61) F -> LPARENT E . RPARENT
    (53) E -> E . PLUS T
    (54) E -> E . MINUS T

    RPARENT         shift and go to state 143
    PLUS            shift and go to state 120
    MINUS           shift and go to state 121


state 125

    (11) DCLARRAY -> LBRACKET Z RBRACKET .
    (12) DCLMATRIX -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET
    (13) DCLCUBE -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TO              reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DO              reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    LBRACKET        shift and go to state 144


state 126

    (48) TEXT -> LPARENT STRING H RPARENT .

    GTGT            reduce using rule 48 (TEXT -> LPARENT STRING H RPARENT .)
    SEMMICOLON      reduce using rule 48 (TEXT -> LPARENT STRING H RPARENT .)


state 127

    (50) H -> PLUS STRING . H
    (50) H -> . PLUS STRING H
    (51) H -> . PLUS U H
    (52) H -> .

    PLUS            shift and go to state 102
    RPARENT         reduce using rule 52 (H -> .)

    H                              shift and go to state 145

state 128

    (51) H -> PLUS U . H
    (50) H -> . PLUS STRING H
    (51) H -> . PLUS U H
    (52) H -> .

    PLUS            shift and go to state 102
    RPARENT         reduce using rule 52 (H -> .)

    H                              shift and go to state 146

state 129

    (28) STATEMENTS -> IF EL THEN1 X ELSE1 . X ENDIF
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    X                              shift and go to state 147
    STATEMENTS                     shift and go to state 11
    WHILE1                         shift and go to state 17
    DO2                            shift and go to state 18

state 130

    (29) ELSE1 -> ELSE .

    LET             reduce using rule 29 (ELSE1 -> ELSE .)
    PRINT           reduce using rule 29 (ELSE1 -> ELSE .)
    INPUT           reduce using rule 29 (ELSE1 -> ELSE .)
    CLS             reduce using rule 29 (ELSE1 -> ELSE .)
    IF              reduce using rule 29 (ELSE1 -> ELSE .)
    FOR             reduce using rule 29 (ELSE1 -> ELSE .)
    GOSUB           reduce using rule 29 (ELSE1 -> ELSE .)
    WHILE           reduce using rule 29 (ELSE1 -> ELSE .)
    DO              reduce using rule 29 (ELSE1 -> ELSE .)
    ENDIF           reduce using rule 29 (ELSE1 -> ELSE .)


state 131

    (32) STATEMENTS -> WHILE1 EL DO1 X WHEND .

    SEMMICOLON      reduce using rule 32 (STATEMENTS -> WHILE1 EL DO1 X WHEND .)


state 132

    (35) STATEMENTS -> DO2 X LOOPUNTIL EL ENDO .

    SEMMICOLON      reduce using rule 35 (STATEMENTS -> DO2 X LOOPUNTIL EL ENDO .)


state 133

    (37) STATEMENTS -> FOR ID1 ASSIGN E TO1 . E DO3 X NEXT
    (53) E -> . E PLUS T
    (54) E -> . E MINUS T
    (55) E -> . T
    (56) T -> . T TIMES F
    (57) T -> . T DIVIDE F
    (58) T -> . F
    (59) F -> . NUMBER
    (60) F -> . U
    (61) F -> . LPARENT E RPARENT
    (42) U -> . ID
    (43) U -> . ID DCLARRAY
    (44) U -> . ID DCLMATRIX
    (45) U -> . ID DCLCUBE

    NUMBER          shift and go to state 95
    LPARENT         shift and go to state 96
    ID              shift and go to state 29

    E                              shift and go to state 148
    T                              shift and go to state 93
    F                              shift and go to state 94
    U                              shift and go to state 91

state 134

    (39) TO1 -> TO .

    NUMBER          reduce using rule 39 (TO1 -> TO .)
    ID              reduce using rule 39 (TO1 -> TO .)
    LPARENT         reduce using rule 39 (TO1 -> TO .)


state 135

    (16) SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .

    LET             reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    PRINT           reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    INPUT           reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    CLS             reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    IF              reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    FOR             reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    GOSUB           reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    WHILE           reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    DO              reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    END             reduce using rule 16 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)


state 136

    (11) DCLARRAY -> LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TO              reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DO              reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 11 (DCLARRAY -> LBRACKET Z RBRACKET .)


state 137

    (12) DCLMATRIX -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 149


state 138

    (13) DCLCUBE -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 150


state 139

    (53) E -> E PLUS T .
    (56) T -> T . TIMES F
    (57) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 53 (E -> E PLUS T .)
    TO              reduce using rule 53 (E -> E PLUS T .)
    DO              reduce using rule 53 (E -> E PLUS T .)
    PLUS            reduce using rule 53 (E -> E PLUS T .)
    MINUS           reduce using rule 53 (E -> E PLUS T .)
    RPARENT         reduce using rule 53 (E -> E PLUS T .)
    TIMES           shift and go to state 122
    DIVIDE          shift and go to state 123


state 140

    (54) E -> E MINUS T .
    (56) T -> T . TIMES F
    (57) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 54 (E -> E MINUS T .)
    TO              reduce using rule 54 (E -> E MINUS T .)
    DO              reduce using rule 54 (E -> E MINUS T .)
    PLUS            reduce using rule 54 (E -> E MINUS T .)
    MINUS           reduce using rule 54 (E -> E MINUS T .)
    RPARENT         reduce using rule 54 (E -> E MINUS T .)
    TIMES           shift and go to state 122
    DIVIDE          shift and go to state 123


state 141

    (56) T -> T TIMES F .

    SEMMICOLON      reduce using rule 56 (T -> T TIMES F .)
    TO              reduce using rule 56 (T -> T TIMES F .)
    DO              reduce using rule 56 (T -> T TIMES F .)
    PLUS            reduce using rule 56 (T -> T TIMES F .)
    MINUS           reduce using rule 56 (T -> T TIMES F .)
    TIMES           reduce using rule 56 (T -> T TIMES F .)
    DIVIDE          reduce using rule 56 (T -> T TIMES F .)
    RPARENT         reduce using rule 56 (T -> T TIMES F .)


state 142

    (57) T -> T DIVIDE F .

    SEMMICOLON      reduce using rule 57 (T -> T DIVIDE F .)
    TO              reduce using rule 57 (T -> T DIVIDE F .)
    DO              reduce using rule 57 (T -> T DIVIDE F .)
    PLUS            reduce using rule 57 (T -> T DIVIDE F .)
    MINUS           reduce using rule 57 (T -> T DIVIDE F .)
    TIMES           reduce using rule 57 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 57 (T -> T DIVIDE F .)
    RPARENT         reduce using rule 57 (T -> T DIVIDE F .)


state 143

    (61) F -> LPARENT E RPARENT .

    SEMMICOLON      reduce using rule 61 (F -> LPARENT E RPARENT .)
    TO              reduce using rule 61 (F -> LPARENT E RPARENT .)
    DO              reduce using rule 61 (F -> LPARENT E RPARENT .)
    PLUS            reduce using rule 61 (F -> LPARENT E RPARENT .)
    MINUS           reduce using rule 61 (F -> LPARENT E RPARENT .)
    TIMES           reduce using rule 61 (F -> LPARENT E RPARENT .)
    DIVIDE          reduce using rule 61 (F -> LPARENT E RPARENT .)
    RPARENT         reduce using rule 61 (F -> LPARENT E RPARENT .)


state 144

    (12) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 151

state 145

    (50) H -> PLUS STRING H .

    RPARENT         reduce using rule 50 (H -> PLUS STRING H .)


state 146

    (51) H -> PLUS U H .

    RPARENT         reduce using rule 51 (H -> PLUS U H .)


state 147

    (28) STATEMENTS -> IF EL THEN1 X ELSE1 X . ENDIF

    ENDIF           shift and go to state 152


state 148

    (37) STATEMENTS -> FOR ID1 ASSIGN E TO1 E . DO3 X NEXT
    (53) E -> E . PLUS T
    (54) E -> E . MINUS T
    (40) DO3 -> . DO

    PLUS            shift and go to state 120
    MINUS           shift and go to state 121
    DO              shift and go to state 154

    DO3                            shift and go to state 153

state 149

    (12) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 155

state 150

    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 156

state 151

    (12) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET
    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 157


state 152

    (28) STATEMENTS -> IF EL THEN1 X ELSE1 X ENDIF .

    SEMMICOLON      reduce using rule 28 (STATEMENTS -> IF EL THEN1 X ELSE1 X ENDIF .)


state 153

    (37) STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 . X NEXT
    (18) X -> . STATEMENTS SEMMICOLON X
    (19) X -> .
    (20) STATEMENTS -> . LET U ASSIGN E
    (21) STATEMENTS -> . PRINT Q
    (22) STATEMENTS -> . INPUT TEXT GTGT VAR
    (27) STATEMENTS -> . CLS
    (28) STATEMENTS -> . IF EL THEN1 X ELSE1 X ENDIF
    (32) STATEMENTS -> . WHILE1 EL DO1 X WHEND
    (35) STATEMENTS -> . DO2 X LOOPUNTIL EL ENDO
    (37) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 X NEXT
    (41) STATEMENTS -> . GOSUB ID
    (33) WHILE1 -> . WHILE
    (36) DO2 -> . DO

  ! shift/reduce conflict for LET resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for INPUT resolved as shift
  ! shift/reduce conflict for CLS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for GOSUB resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for DO resolved as shift
    END             reduce using rule 19 (X -> .)
    ENDSUB          reduce using rule 19 (X -> .)
    ELSE            reduce using rule 19 (X -> .)
    ENDIF           reduce using rule 19 (X -> .)
    WHEND           reduce using rule 19 (X -> .)
    LOOPUNTIL       reduce using rule 19 (X -> .)
    NEXT            reduce using rule 19 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20
    WHILE           shift and go to state 21
    DO              shift and go to state 22

  ! LET             [ reduce using rule 19 (X -> .) ]
  ! PRINT           [ reduce using rule 19 (X -> .) ]
  ! INPUT           [ reduce using rule 19 (X -> .) ]
  ! CLS             [ reduce using rule 19 (X -> .) ]
  ! IF              [ reduce using rule 19 (X -> .) ]
  ! FOR             [ reduce using rule 19 (X -> .) ]
  ! GOSUB           [ reduce using rule 19 (X -> .) ]
  ! WHILE           [ reduce using rule 19 (X -> .) ]
  ! DO              [ reduce using rule 19 (X -> .) ]

    X                              shift and go to state 158
    STATEMENTS                     shift and go to state 11
    WHILE1                         shift and go to state 17
    DO2                            shift and go to state 18

state 154

    (40) DO3 -> DO .

    LET             reduce using rule 40 (DO3 -> DO .)
    PRINT           reduce using rule 40 (DO3 -> DO .)
    INPUT           reduce using rule 40 (DO3 -> DO .)
    CLS             reduce using rule 40 (DO3 -> DO .)
    IF              reduce using rule 40 (DO3 -> DO .)
    FOR             reduce using rule 40 (DO3 -> DO .)
    GOSUB           reduce using rule 40 (DO3 -> DO .)
    WHILE           reduce using rule 40 (DO3 -> DO .)
    DO              reduce using rule 40 (DO3 -> DO .)
    NEXT            reduce using rule 40 (DO3 -> DO .)


state 155

    (12) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 159


state 156

    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 160


state 157

    (12) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .
    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TO              reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LBRACKET        shift and go to state 161


state 158

    (37) STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 X . NEXT

    NEXT            shift and go to state 162


state 159

    (12) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TO              reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 12 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)


state 160

    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 161


state 161

    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (14) Z -> . NUMBER
    (15) Z -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    Z                              shift and go to state 163

state 162

    (37) STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 X NEXT .

    SEMMICOLON      reduce using rule 37 (STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 X NEXT .)


state 163

    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 164


state 164

    (13) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TO              reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 13 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LET in state 6 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 6 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 6 resolved as shift
WARNING: shift/reduce conflict for CLS in state 6 resolved as shift
WARNING: shift/reduce conflict for IF in state 6 resolved as shift
WARNING: shift/reduce conflict for FOR in state 6 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 6 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 6 resolved as shift
WARNING: shift/reduce conflict for DO in state 6 resolved as shift
WARNING: shift/reduce conflict for LET in state 18 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 18 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 18 resolved as shift
WARNING: shift/reduce conflict for CLS in state 18 resolved as shift
WARNING: shift/reduce conflict for IF in state 18 resolved as shift
WARNING: shift/reduce conflict for FOR in state 18 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 18 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 18 resolved as shift
WARNING: shift/reduce conflict for DO in state 18 resolved as shift
WARNING: shift/reduce conflict for LET in state 23 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 23 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 23 resolved as shift
WARNING: shift/reduce conflict for CLS in state 23 resolved as shift
WARNING: shift/reduce conflict for IF in state 23 resolved as shift
WARNING: shift/reduce conflict for FOR in state 23 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 23 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 23 resolved as shift
WARNING: shift/reduce conflict for DO in state 23 resolved as shift
WARNING: shift/reduce conflict for LET in state 27 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 27 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 27 resolved as shift
WARNING: shift/reduce conflict for CLS in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for FOR in state 27 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 27 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 27 resolved as shift
WARNING: shift/reduce conflict for DO in state 27 resolved as shift
WARNING: shift/reduce conflict for LET in state 66 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 66 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 66 resolved as shift
WARNING: shift/reduce conflict for CLS in state 66 resolved as shift
WARNING: shift/reduce conflict for IF in state 66 resolved as shift
WARNING: shift/reduce conflict for FOR in state 66 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 66 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 66 resolved as shift
WARNING: shift/reduce conflict for DO in state 66 resolved as shift
WARNING: shift/reduce conflict for LET in state 79 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 79 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 79 resolved as shift
WARNING: shift/reduce conflict for CLS in state 79 resolved as shift
WARNING: shift/reduce conflict for IF in state 79 resolved as shift
WARNING: shift/reduce conflict for FOR in state 79 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 79 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 79 resolved as shift
WARNING: shift/reduce conflict for DO in state 79 resolved as shift
WARNING: shift/reduce conflict for LET in state 129 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 129 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 129 resolved as shift
WARNING: shift/reduce conflict for CLS in state 129 resolved as shift
WARNING: shift/reduce conflict for IF in state 129 resolved as shift
WARNING: shift/reduce conflict for FOR in state 129 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 129 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 129 resolved as shift
WARNING: shift/reduce conflict for DO in state 129 resolved as shift
WARNING: shift/reduce conflict for LET in state 153 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 153 resolved as shift
WARNING: shift/reduce conflict for INPUT in state 153 resolved as shift
WARNING: shift/reduce conflict for CLS in state 153 resolved as shift
WARNING: shift/reduce conflict for IF in state 153 resolved as shift
WARNING: shift/reduce conflict for FOR in state 153 resolved as shift
WARNING: shift/reduce conflict for GOSUB in state 153 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 153 resolved as shift
WARNING: shift/reduce conflict for DO in state 153 resolved as shift
