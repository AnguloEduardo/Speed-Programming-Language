
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'AND ARRAY AS ASSIGN CLS COMMA CUBE DIM DIVIDE DO ELSE END ENDIF ENDO ENDSUB EQUAL FLOAT FOR GOSUB GT GTE GTGT ID IF INPUT LBRACKET LET LOOPUNTIL LPARENT LT LTE MATRIX MINUS NE NEXT NOT NUMBER OR PLUS PRINT PROGRAM RBRACKET RPARENT SEMMICOLON STRING SUBPROCEDURE THEN TIMES TO WHEND WHILE WORD\n\tprogram : PROGRAM ID VARIABLE SP X END SEMMICOLON\n\t\n\tVARIABLE : DIM IDLIST AS TIPO SEMMICOLON VARIABLE\n\t|\n\t\n\tIDLIST : ID\n\t\n\tIDLIST : IDLIST COMMA ID\n\t\n\tTIPO : WORD\n\t| FLOAT\n\t| ARRAY DCLARRAY\n\t| MATRIX DCLMATRIX\n\t| CUBE DCLCUBE\n\t\n\tDCLARRAY : LBRACKET Z RBRACKET\n\t\n\tDCLMATRIX : LBRACKET Z RBRACKET LBRACKET Z RBRACKET\n\t\n\tDCLCUBE : LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET\n\t\n\tZ : NUMBER\n\t| ID\n\t\n\tSP : SUBPROCEDURE ID X ENDSUB SEMMICOLON SP\n\t|\n\t\n\tX : STATEMENTS SEMMICOLON X\n\t|\n\t\n\tSTATEMENTS : LET U ASSIGN E\n\t\n\tSTATEMENTS : PRINT Q\n\t\n\tSTATEMENTS : INPUT TEXT GTGT VAR\n\t\n\tVAR : ID\n\t| ID DCLARRAY\n\t| ID DCLMATRIX\n\t| ID DCLCUBE\n\t\n\tSTATEMENTS : CLS\n\t\n\tSTATEMENTS : IF EL THEN1 X ELSE1 X ENDIF\n\t\n\tELSE1 : ELSE\n\t\n\tELSE1 :\n\t\n\tTHEN1 : THEN\n\t\n\tSTATEMENTS : WHILE1 EL DO1 X WHEND\n\t\n\tWHILE1 : WHILE\n\t\n\tDO1 : DO\n\t\n\tSTATEMENTS : DO2 X LOOPUNTIL EL ENDO\n\t\n\tDO2 : DO\n\t\n\tSTATEMENTS : FOR ID1 ASSIGN E TO1 E DO3 X NEXT\n\t\n\tID1 : ID\n\t\n\tTO1 : TO\n\t\n\tDO3 : DO\n\t\n\tSTATEMENTS : GOSUB ID\n\t\n\tU : ID\n\t\n\tU : ID DCLARRAY\n\t\n\tU : ID DCLMATRIX\n\t\n\tU : ID DCLCUBE\n\t\n\tQ : LPARENT VAR RPARENT\n\t\n\tQ : TEXT\n\t\n    TEXT : LPARENT STRING H RPARENT\n    \n\tTEXT :\n\t\n\tH : PLUS STRING H\n\t\n\tH : PLUS U H\n\t\n\tH :\n\t\n\tE : E PLUS T\n\t| E MINUS T\n\t\n\tE : T\n\t\n\tT : T TIMES F\n\t| T DIVIDE F\n\t\n\tT : F\n\t\n\tF : NUMBER\n\t\n\tF : U\n\t\n\tF : LPARENT E RPARENT\n\t\n\tEL : EL OR TL\n\t\n\tEL : TL NOT\n\t| TL\n\t\n\tTL : TL AND FL\n\t\n\tTL : FL\n\t\n\tFL : K OPREL K\n\t\n\tFL : LPARENT EL RPARENT\n\t\n\tOPREL : LT\n\t| LTE\n\t| GT\n\t| GTE\n\t| NE\n\t| EQUAL\n\t\n\tK : ID\n\t\n\tK : NUMBER\n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,55,],[0,-1,]),'ID':([2,5,7,12,16,17,19,20,21,25,31,39,57,61,65,67,70,71,72,73,74,75,76,77,81,82,86,88,90,96,102,120,121,122,123,133,134,144,149,150,161,],[3,9,23,29,40,40,45,46,-33,54,64,40,29,99,64,40,40,40,-69,-70,-71,-72,-73,-74,40,29,99,99,99,29,29,29,29,29,29,29,-39,99,99,99,99,]),'DIM':([3,84,],[5,5,]),'SUBPROCEDURE':([3,4,84,115,116,],[-3,7,-3,7,-2,]),'LET':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,12,12,-36,12,12,-18,12,-31,12,-34,-3,-30,-17,-2,12,-29,-16,12,-40,]),'PRINT':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,13,13,-36,13,13,-18,13,-31,13,-34,-3,-30,-17,-2,13,-29,-16,13,-40,]),'INPUT':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,14,14,-36,14,14,-18,14,-31,14,-34,-3,-30,-17,-2,14,-29,-16,14,-40,]),'CLS':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,15,15,-36,15,15,-18,15,-31,15,-34,-3,-30,-17,-2,15,-29,-16,15,-40,]),'IF':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,16,16,-36,16,16,-18,16,-31,16,-34,-3,-30,-17,-2,16,-29,-16,16,-40,]),'FOR':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,19,19,-36,19,19,-18,19,-31,19,-34,-3,-30,-17,-2,19,-29,-16,19,-40,]),'GOSUB':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,20,20,-36,20,20,-18,20,-31,20,-34,-3,-30,-17,-2,20,-29,-16,20,-40,]),'WHILE':([3,4,6,18,22,23,27,56,66,68,79,80,84,107,115,116,129,130,135,153,154,],[-3,-17,21,21,-36,21,21,-18,21,-31,21,-34,-3,-30,-17,-2,21,-29,-16,21,-40,]),'DO':([3,4,6,18,22,23,27,29,36,37,40,41,42,56,58,59,60,66,68,69,79,80,84,91,93,94,95,107,108,109,110,111,115,116,125,129,130,135,136,139,140,141,142,143,148,153,154,157,159,164,],[-3,-17,22,22,-36,22,22,-42,-64,-66,-75,-76,80,-18,-43,-44,-45,22,-31,-63,22,-34,-3,-60,-55,-58,-59,-30,-62,-65,-67,-68,-17,-2,-11,22,-29,-16,-11,-53,-54,-56,-57,-61,154,22,-40,-12,-12,-13,]),'END':([3,4,6,10,18,23,27,56,66,79,84,115,116,129,135,153,],[-3,-17,-19,26,-19,-19,-19,-18,-19,-19,-3,-17,-2,-19,-16,-19,]),'ENDSUB':([6,18,23,27,47,56,66,79,129,153,],[-19,-19,-19,-19,83,-18,-19,-19,-19,-19,]),'ELSE':([6,18,23,27,56,66,68,79,107,129,153,],[-19,-19,-19,-19,-18,-19,-31,-19,130,-19,-19,]),'ENDIF':([6,18,23,27,56,66,68,79,107,129,130,147,153,],[-19,-19,-19,-19,-18,-19,-31,-19,-30,-19,-29,152,-19,]),'WHEND':([6,18,23,27,56,66,79,80,112,129,153,],[-19,-19,-19,-19,-18,-19,-19,-34,131,-19,-19,]),'LOOPUNTIL':([6,18,22,23,27,43,56,66,79,129,153,],[-19,-19,-36,-19,-19,81,-18,-19,-19,-19,-19,]),'NEXT':([6,18,23,27,56,66,79,129,153,154,158,],[-19,-19,-19,-19,-18,-19,-19,-19,-19,-40,162,]),'AS':([8,9,54,],[24,-4,-5,]),'COMMA':([8,9,54,],[25,-4,-5,]),'SEMMICOLON':([11,13,14,15,26,29,30,32,46,48,49,50,58,59,60,64,83,85,87,89,91,92,93,94,95,100,103,104,105,106,125,126,131,132,136,139,140,141,142,143,152,157,159,162,164,],[27,-49,-49,-27,55,-42,-21,-47,-41,84,-6,-7,-43,-44,-45,-23,115,-8,-9,-10,-60,-20,-55,-58,-59,-46,-24,-25,-26,-22,-11,-48,-32,-35,-11,-53,-54,-56,-57,-61,-28,-12,-12,-37,-13,]),'LPARENT':([13,14,16,17,21,39,57,67,70,81,82,96,120,121,122,123,133,134,],[31,34,39,39,-33,39,96,39,39,39,96,96,96,96,96,96,96,-39,]),'GTGT':([13,14,33,126,],[-49,-49,65,-48,]),'NUMBER':([16,17,21,39,57,61,67,70,71,72,73,74,75,76,77,81,82,86,88,90,96,120,121,122,123,133,134,144,149,150,161,],[41,41,-33,41,95,98,41,41,41,-69,-70,-71,-72,-73,-74,41,95,98,98,98,95,95,95,95,95,95,-39,98,98,98,98,]),'WORD':([24,],[49,]),'FLOAT':([24,],[50,]),'ARRAY':([24,],[51,]),'MATRIX':([24,],[52,]),'CUBE':([24,],[53,]),'ASSIGN':([28,29,44,45,58,59,60,125,136,157,159,164,],[57,-42,82,-38,-43,-44,-45,-11,-11,-12,-12,-13,]),'PLUS':([29,58,59,60,63,91,92,93,94,95,114,124,125,127,128,136,139,140,141,142,143,148,157,159,164,],[-42,-43,-44,-45,102,-60,120,-55,-58,-59,120,120,-11,102,102,-11,-53,-54,-56,-57,-61,120,-12,-12,-13,]),'RPARENT':([29,36,37,40,41,58,59,60,62,63,64,69,78,91,93,94,95,101,103,104,105,108,109,110,111,124,125,127,128,136,139,140,141,142,143,145,146,157,159,164,],[-42,-64,-66,-75,-76,-43,-44,-45,100,-52,-23,-63,111,-60,-55,-58,-59,126,-24,-25,-26,-62,-65,-67,-68,143,-11,-52,-52,-11,-53,-54,-56,-57,-61,-50,-51,-12,-12,-13,]),'TO':([29,58,59,60,91,93,94,95,114,125,136,139,140,141,142,143,157,159,164,],[-42,-43,-44,-45,-60,-55,-58,-59,134,-11,-11,-53,-54,-56,-57,-61,-12,-12,-13,]),'MINUS':([29,58,59,60,91,92,93,94,95,114,124,125,136,139,140,141,142,143,148,157,159,164,],[-42,-43,-44,-45,-60,121,-55,-58,-59,121,121,-11,-11,-53,-54,-56,-57,-61,121,-12,-12,-13,]),'TIMES':([29,58,59,60,91,93,94,95,125,136,139,140,141,142,143,157,159,164,],[-42,-43,-44,-45,-60,122,-58,-59,-11,-11,122,122,-56,-57,-61,-12,-12,-13,]),'DIVIDE':([29,58,59,60,91,93,94,95,125,136,139,140,141,142,143,157,159,164,],[-42,-43,-44,-45,-60,123,-58,-59,-11,-11,123,123,-56,-57,-61,-12,-12,-13,]),'LBRACKET':([29,51,52,53,64,125,137,138,157,160,],[61,86,88,90,61,144,149,150,161,161,]),'STRING':([31,34,102,],[63,63,127,]),'OR':([35,36,37,40,41,42,69,78,108,109,110,111,113,],[67,-64,-66,-75,-76,67,-63,67,-62,-65,-67,-68,67,]),'THEN':([35,36,37,40,41,69,108,109,110,111,],[68,-64,-66,-75,-76,-63,-62,-65,-67,-68,]),'NOT':([36,37,40,41,109,110,111,],[69,-66,-75,-76,-65,-67,-68,]),'ENDO':([36,37,40,41,69,108,109,110,111,113,],[-64,-66,-75,-76,-63,-62,-65,-67,-68,132,]),'AND':([36,37,40,41,108,109,110,111,],[70,-66,-75,-76,70,-65,-67,-68,]),'LT':([38,40,41,],[72,-75,-76,]),'LTE':([38,40,41,],[73,-75,-76,]),'GT':([38,40,41,],[74,-75,-76,]),'GTE':([38,40,41,],[75,-75,-76,]),'NE':([38,40,41,],[76,-75,-76,]),'EQUAL':([38,40,41,],[77,-75,-76,]),'RBRACKET':([97,98,99,117,118,119,151,155,156,163,],[125,-14,-15,136,137,138,157,159,160,164,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'VARIABLE':([3,84,],[4,116,]),'SP':([4,115,],[6,135,]),'IDLIST':([5,],[8,]),'X':([6,18,23,27,66,79,129,153,],[10,43,47,56,107,112,147,158,]),'STATEMENTS':([6,18,23,27,66,79,129,153,],[11,11,11,11,11,11,11,11,]),'WHILE1':([6,18,23,27,66,79,129,153,],[17,17,17,17,17,17,17,17,]),'DO2':([6,18,23,27,66,79,129,153,],[18,18,18,18,18,18,18,18,]),'U':([12,57,82,96,102,120,121,122,123,133,],[28,91,91,91,128,91,91,91,91,91,]),'Q':([13,],[30,]),'TEXT':([13,14,],[32,33,]),'EL':([16,17,39,81,],[35,42,78,113,]),'TL':([16,17,39,67,81,],[36,36,36,108,36,]),'FL':([16,17,39,67,70,81,],[37,37,37,37,109,37,]),'K':([16,17,39,67,70,71,81,],[38,38,38,38,38,110,38,]),'ID1':([19,],[44,]),'TIPO':([24,],[48,]),'DCLARRAY':([29,51,64,],[58,85,103,]),'DCLMATRIX':([29,52,64,],[59,87,104,]),'DCLCUBE':([29,53,64,],[60,89,105,]),'VAR':([31,65,],[62,106,]),'THEN1':([35,],[66,]),'OPREL':([38,],[71,]),'DO1':([42,],[79,]),'E':([57,82,96,133,],[92,114,124,148,]),'T':([57,82,96,120,121,133,],[93,93,93,139,140,93,]),'F':([57,82,96,120,121,122,123,133,],[94,94,94,94,94,141,142,94,]),'Z':([61,86,88,90,144,149,150,161,],[97,117,118,119,151,155,156,163,]),'H':([63,127,128,],[101,145,146,]),'ELSE1':([107,],[129,]),'TO1':([114,],[133,]),'DO3':([148,],[153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID VARIABLE SP X END SEMMICOLON','program',7,'p_PROGRAM','syntactic_analyser.py',22),
  ('VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE','VARIABLE',6,'p_VARIABLE','syntactic_analyser.py',27),
  ('VARIABLE -> <empty>','VARIABLE',0,'p_VARIABLE','syntactic_analyser.py',28),
  ('IDLIST -> ID','IDLIST',1,'p_IDLIST','syntactic_analyser.py',33),
  ('IDLIST -> IDLIST COMMA ID','IDLIST',3,'p_IDLIST2','syntactic_analyser.py',39),
  ('TIPO -> WORD','TIPO',1,'p_TIPO_WORD','syntactic_analyser.py',45),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO_WORD','syntactic_analyser.py',46),
  ('TIPO -> ARRAY DCLARRAY','TIPO',2,'p_TIPO_WORD','syntactic_analyser.py',47),
  ('TIPO -> MATRIX DCLMATRIX','TIPO',2,'p_TIPO_WORD','syntactic_analyser.py',48),
  ('TIPO -> CUBE DCLCUBE','TIPO',2,'p_TIPO_WORD','syntactic_analyser.py',49),
  ('DCLARRAY -> LBRACKET Z RBRACKET','DCLARRAY',3,'p_DCLARRAY','syntactic_analyser.py',55),
  ('DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET','DCLMATRIX',6,'p_DCLMATRIX','syntactic_analyser.py',60),
  ('DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET','DCLCUBE',9,'p_DCLCUBE','syntactic_analyser.py',65),
  ('Z -> NUMBER','Z',1,'p_Z','syntactic_analyser.py',70),
  ('Z -> ID','Z',1,'p_Z','syntactic_analyser.py',71),
  ('SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP','SP',6,'p_SP','syntactic_analyser.py',76),
  ('SP -> <empty>','SP',0,'p_SP','syntactic_analyser.py',77),
  ('X -> STATEMENTS SEMMICOLON X','X',3,'p_X','syntactic_analyser.py',82),
  ('X -> <empty>','X',0,'p_X','syntactic_analyser.py',83),
  ('STATEMENTS -> LET U ASSIGN E','STATEMENTS',4,'p_STATEMENTS_LET','syntactic_analyser.py',88),
  ('STATEMENTS -> PRINT Q','STATEMENTS',2,'p_STATEMENTS_PRINT','syntactic_analyser.py',94),
  ('STATEMENTS -> INPUT TEXT GTGT VAR','STATEMENTS',4,'p_STATEMENTS_INPUT','syntactic_analyser.py',99),
  ('VAR -> ID','VAR',1,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',104),
  ('VAR -> ID DCLARRAY','VAR',2,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',105),
  ('VAR -> ID DCLMATRIX','VAR',2,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',106),
  ('VAR -> ID DCLCUBE','VAR',2,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',107),
  ('STATEMENTS -> CLS','STATEMENTS',1,'p_STATEMENTS_CLS','syntactic_analyser.py',111),
  ('STATEMENTS -> IF EL THEN1 X ELSE1 X ENDIF','STATEMENTS',7,'p_STATEMENTS_IF','syntactic_analyser.py',117),
  ('ELSE1 -> ELSE','ELSE1',1,'p_STATEMENTS_IF_ELSE1','syntactic_analyser.py',123),
  ('ELSE1 -> <empty>','ELSE1',0,'p_STATEMENTS_IF_ELSE1_EMPTY','syntactic_analyser.py',129),
  ('THEN1 -> THEN','THEN1',1,'p_STATEMENTS_IF_THEN1','syntactic_analyser.py',134),
  ('STATEMENTS -> WHILE1 EL DO1 X WHEND','STATEMENTS',5,'p_STATEMENTS_WHILE','syntactic_analyser.py',140),
  ('WHILE1 -> WHILE','WHILE1',1,'p_STATEMENTS_WHILE_WHILE1','syntactic_analyser.py',146),
  ('DO1 -> DO','DO1',1,'p_STATEMENTS_WHILE_DO1','syntactic_analyser.py',152),
  ('STATEMENTS -> DO2 X LOOPUNTIL EL ENDO','STATEMENTS',5,'p_STATEMENTS_DO','syntactic_analyser.py',158),
  ('DO2 -> DO','DO2',1,'p_STATEMENTS_DO_DO2','syntactic_analyser.py',164),
  ('STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 X NEXT','STATEMENTS',9,'p_STATEMENTS_FOR','syntactic_analyser.py',170),
  ('ID1 -> ID','ID1',1,'p_STATEMENTS_FOR_ID','syntactic_analyser.py',176),
  ('TO1 -> TO','TO1',1,'p_STATEMENTS_FOR_TO','syntactic_analyser.py',182),
  ('DO3 -> DO','DO3',1,'p_STATEMENTS_FOR_DO','syntactic_analyser.py',188),
  ('STATEMENTS -> GOSUB ID','STATEMENTS',2,'p_STATEMENTS_GOSUB','syntactic_analyser.py',194),
  ('U -> ID','U',1,'p_U','syntactic_analyser.py',199),
  ('U -> ID DCLARRAY','U',2,'p_U1','syntactic_analyser.py',206),
  ('U -> ID DCLMATRIX','U',2,'p_U2','syntactic_analyser.py',212),
  ('U -> ID DCLCUBE','U',2,'p_U3','syntactic_analyser.py',218),
  ('Q -> LPARENT VAR RPARENT','Q',3,'p_Q','syntactic_analyser.py',224),
  ('Q -> TEXT','Q',1,'p_Q1','syntactic_analyser.py',229),
  ('TEXT -> LPARENT STRING H RPARENT','TEXT',4,'p_TEXT','syntactic_analyser.py',234),
  ('TEXT -> <empty>','TEXT',0,'p_TEXT_EMPTY','syntactic_analyser.py',239),
  ('H -> PLUS STRING H','H',3,'p_H','syntactic_analyser.py',244),
  ('H -> PLUS U H','H',3,'p_H1','syntactic_analyser.py',249),
  ('H -> <empty>','H',0,'p_H_EMPTY','syntactic_analyser.py',254),
  ('E -> E PLUS T','E',3,'p_E','syntactic_analyser.py',259),
  ('E -> E MINUS T','E',3,'p_E','syntactic_analyser.py',260),
  ('E -> T','E',1,'p_E1','syntactic_analyser.py',266),
  ('T -> T TIMES F','T',3,'p_T','syntactic_analyser.py',271),
  ('T -> T DIVIDE F','T',3,'p_T','syntactic_analyser.py',272),
  ('T -> F','T',1,'p_T1','syntactic_analyser.py',277),
  ('F -> NUMBER','F',1,'p_F','syntactic_analyser.py',282),
  ('F -> U','F',1,'p_F1','syntactic_analyser.py',288),
  ('F -> LPARENT E RPARENT','F',3,'p_F2','syntactic_analyser.py',293),
  ('EL -> EL OR TL','EL',3,'p_EL','syntactic_analyser.py',298),
  ('EL -> TL NOT','EL',2,'p_EL1','syntactic_analyser.py',304),
  ('EL -> TL','EL',1,'p_EL1','syntactic_analyser.py',305),
  ('TL -> TL AND FL','TL',3,'p_TL','syntactic_analyser.py',310),
  ('TL -> FL','TL',1,'p_TL1','syntactic_analyser.py',316),
  ('FL -> K OPREL K','FL',3,'p_FL','syntactic_analyser.py',321),
  ('FL -> LPARENT EL RPARENT','FL',3,'p_FL1','syntactic_analyser.py',327),
  ('OPREL -> LT','OPREL',1,'p_OPREL','syntactic_analyser.py',332),
  ('OPREL -> LTE','OPREL',1,'p_OPREL','syntactic_analyser.py',333),
  ('OPREL -> GT','OPREL',1,'p_OPREL','syntactic_analyser.py',334),
  ('OPREL -> GTE','OPREL',1,'p_OPREL','syntactic_analyser.py',335),
  ('OPREL -> NE','OPREL',1,'p_OPREL','syntactic_analyser.py',336),
  ('OPREL -> EQUAL','OPREL',1,'p_OPREL','syntactic_analyser.py',337),
  ('K -> ID','K',1,'p_K','syntactic_analyser.py',343),
  ('K -> NUMBER','K',1,'p_K1','syntactic_analyser.py',349),
]
