Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID V SP X END
Rule 2     V -> DIM IDLIST AS TIPO SEMMICOLON V
Rule 3     V -> <empty>
Rule 4     IDLIST -> ID
Rule 5     IDLIST -> IDLIST COMMA ID
Rule 6     IDLIST -> <empty>
Rule 7     TIPO -> WORD
Rule 8     TIPO -> FLOAT
Rule 9     TIPO -> ARRAY LBRACKET E RBRACKET
Rule 10    TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 11    TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 12    SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP
Rule 13    SP -> <empty>
Rule 14    X -> S R
Rule 15    X -> <empty>
Rule 16    R -> SEMMICOLON S R
Rule 17    R -> <empty>
Rule 18    S -> LET E ASSIGN E
Rule 19    S -> PRINT Q
Rule 20    S -> INPUT H GTGT U
Rule 21    S -> CLS
Rule 22    S -> IF EL THEN X ELSE1 ENDIF
Rule 23    S -> WHILE EL X WHEND
Rule 24    S -> DO X LOOPUNTIL EL ENDO
Rule 25    S -> FOR O TO E X NEXT
Rule 26    S -> GOSUB ID
Rule 27    O -> E
Rule 28    O -> E ASSIGN E
Rule 29    U -> ID
Rule 30    U -> ID LBRACKET E RBRACKET
Rule 31    U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 32    U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 33    Q -> LPARENT U RPARENT
Rule 34    Q -> TEXT
Rule 35    H -> TEXT
Rule 36    H -> <empty>
Rule 37    TEXT -> LPARENT STRING RPARENT
Rule 38    ELSE1 -> ELSE X
Rule 39    ELSE1 -> <empty>
Rule 40    E -> E PLUS T
Rule 41    E -> E MINUS T
Rule 42    E -> T
Rule 43    T -> T TIMES F
Rule 44    T -> T DIVIDE F
Rule 45    T -> F
Rule 46    F -> NUMBER
Rule 47    F -> U
Rule 48    F -> LPARENT E RPARENT
Rule 49    EL -> EL OR TL
Rule 50    EL -> NOT TL
Rule 51    EL -> TL
Rule 52    TL -> TL AND FL
Rule 53    TL -> FL
Rule 54    FL -> K OPREL K
Rule 55    FL -> LPARENT EL RPARENT
Rule 56    OPREL -> LT
Rule 57    OPREL -> LTE
Rule 58    OPREL -> GT
Rule 59    OPREL -> GTE
Rule 60    OPREL -> NE
Rule 61    OPREL -> EQUAL
Rule 62    K -> ID
Rule 63    K -> NUMBER

Terminals, with rules where they appear

AND                  : 52
ARRAY                : 9
AS                   : 2
ASSIGN               : 18 28
CLS                  : 21
COMMA                : 5
CUBE                 : 11
DIM                  : 2
DIVIDE               : 44
DO                   : 24
ELSE                 : 38
END                  : 1
ENDIF                : 22
ENDO                 : 24
ENDSUB               : 12
EQUAL                : 61
FLOAT                : 8
FOR                  : 25
GOSUB                : 26
GT                   : 58
GTE                  : 59
GTGT                 : 20
ID                   : 1 4 5 12 26 29 30 31 32 62
IF                   : 22
INPUT                : 20
LBRACKET             : 9 10 10 11 11 11 30 31 31 32 32 32
LET                  : 18
LOOPUNTIL            : 24
LPARENT              : 33 37 48 55
LT                   : 56
LTE                  : 57
MATRIX               : 10
MINUS                : 41
NE                   : 60
NEXT                 : 25
NOT                  : 50
NUMBER               : 46 63
OR                   : 49
PLUS                 : 40
PRINT                : 19
PROGRAM              : 1
RBRACKET             : 9 10 10 11 11 11 30 31 31 32 32 32
RPARENT              : 33 37 48 55
SEMMICOLON           : 2 12 16
STRING               : 37
SUBPROCEDURE         : 12
THEN                 : 22
TIMES                : 43
TO                   : 25
WHEND                : 23
WHILE                : 23
WORD                 : 7
error                : 

Nonterminals, with rules where they appear

E                    : 9 10 10 11 11 11 18 18 25 27 28 28 30 31 31 32 32 32 40 41 48
EL                   : 22 23 24 49 55
ELSE1                : 22
F                    : 43 44 45
FL                   : 52 53
H                    : 20
IDLIST               : 2 5
K                    : 54 54
O                    : 25
OPREL                : 54
Q                    : 19
R                    : 14 16
S                    : 14 16
SP                   : 1 12
T                    : 40 41 42 43 44
TEXT                 : 34 35
TIPO                 : 2
TL                   : 49 50 51 52
U                    : 20 33 47
V                    : 1 2 12
X                    : 1 12 22 23 24 25 38
program              : 0

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID V SP X END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID V SP X END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . V SP X END
    (2) V -> . DIM IDLIST AS TIPO SEMMICOLON V
    (3) V -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (V -> .)
    LET             reduce using rule 3 (V -> .)
    PRINT           reduce using rule 3 (V -> .)
    INPUT           reduce using rule 3 (V -> .)
    CLS             reduce using rule 3 (V -> .)
    IF              reduce using rule 3 (V -> .)
    WHILE           reduce using rule 3 (V -> .)
    DO              reduce using rule 3 (V -> .)
    FOR             reduce using rule 3 (V -> .)
    GOSUB           reduce using rule 3 (V -> .)
    END             reduce using rule 3 (V -> .)
    ENDSUB          reduce using rule 3 (V -> .)

    V                              shift and go to state 4

state 4

    (1) program -> PROGRAM ID V . SP X END
    (12) SP -> . SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP
    (13) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 13 (SP -> .)
    PRINT           reduce using rule 13 (SP -> .)
    INPUT           reduce using rule 13 (SP -> .)
    CLS             reduce using rule 13 (SP -> .)
    IF              reduce using rule 13 (SP -> .)
    WHILE           reduce using rule 13 (SP -> .)
    DO              reduce using rule 13 (SP -> .)
    FOR             reduce using rule 13 (SP -> .)
    GOSUB           reduce using rule 13 (SP -> .)
    END             reduce using rule 13 (SP -> .)

    SP                             shift and go to state 6

state 5

    (2) V -> DIM . IDLIST AS TIPO SEMMICOLON V
    (4) IDLIST -> . ID
    (5) IDLIST -> . IDLIST COMMA ID
    (6) IDLIST -> .

    ID              shift and go to state 9
    AS              reduce using rule 6 (IDLIST -> .)
    COMMA           reduce using rule 6 (IDLIST -> .)

    IDLIST                         shift and go to state 8

state 6

    (1) program -> PROGRAM ID V SP . X END
    (14) X -> . S R
    (15) X -> .
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 10
    S                              shift and go to state 11

state 7

    (12) SP -> SUBPROCEDURE . ID V X ENDSUB SEMMICOLON SP

    ID              shift and go to state 21


state 8

    (2) V -> DIM IDLIST . AS TIPO SEMMICOLON V
    (5) IDLIST -> IDLIST . COMMA ID

    AS              shift and go to state 22
    COMMA           shift and go to state 23


state 9

    (4) IDLIST -> ID .

    AS              reduce using rule 4 (IDLIST -> ID .)
    COMMA           reduce using rule 4 (IDLIST -> ID .)


state 10

    (1) program -> PROGRAM ID V SP X . END

    END             shift and go to state 24


state 11

    (14) X -> S . R
    (16) R -> . SEMMICOLON S R
    (17) R -> .

    SEMMICOLON      shift and go to state 26
    END             reduce using rule 17 (R -> .)
    ENDSUB          reduce using rule 17 (R -> .)
    ELSE            reduce using rule 17 (R -> .)
    ENDIF           reduce using rule 17 (R -> .)
    WHEND           reduce using rule 17 (R -> .)
    LOOPUNTIL       reduce using rule 17 (R -> .)
    NEXT            reduce using rule 17 (R -> .)

    R                              shift and go to state 25

state 12

    (18) S -> LET . E ASSIGN E
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 27
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 13

    (19) S -> PRINT . Q
    (33) Q -> . LPARENT U RPARENT
    (34) Q -> . TEXT
    (37) TEXT -> . LPARENT STRING RPARENT

    LPARENT         shift and go to state 35

    Q                              shift and go to state 34
    TEXT                           shift and go to state 36

state 14

    (20) S -> INPUT . H GTGT U
    (35) H -> . TEXT
    (36) H -> .
    (37) TEXT -> . LPARENT STRING RPARENT

    GTGT            reduce using rule 36 (H -> .)
    LPARENT         shift and go to state 39

    H                              shift and go to state 37
    TEXT                           shift and go to state 38

state 15

    (21) S -> CLS .

    SEMMICOLON      reduce using rule 21 (S -> CLS .)
    END             reduce using rule 21 (S -> CLS .)
    ENDSUB          reduce using rule 21 (S -> CLS .)
    ELSE            reduce using rule 21 (S -> CLS .)
    ENDIF           reduce using rule 21 (S -> CLS .)
    WHEND           reduce using rule 21 (S -> CLS .)
    LOOPUNTIL       reduce using rule 21 (S -> CLS .)
    NEXT            reduce using rule 21 (S -> CLS .)


state 16

    (22) S -> IF . EL THEN X ELSE1 ENDIF
    (49) EL -> . EL OR TL
    (50) EL -> . NOT TL
    (51) EL -> . TL
    (52) TL -> . TL AND FL
    (53) TL -> . FL
    (54) FL -> . K OPREL K
    (55) FL -> . LPARENT EL RPARENT
    (62) K -> . ID
    (63) K -> . NUMBER

    NOT             shift and go to state 42
    LPARENT         shift and go to state 45
    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    EL                             shift and go to state 40
    TL                             shift and go to state 41
    FL                             shift and go to state 43
    K                              shift and go to state 44

state 17

    (23) S -> WHILE . EL X WHEND
    (49) EL -> . EL OR TL
    (50) EL -> . NOT TL
    (51) EL -> . TL
    (52) TL -> . TL AND FL
    (53) TL -> . FL
    (54) FL -> . K OPREL K
    (55) FL -> . LPARENT EL RPARENT
    (62) K -> . ID
    (63) K -> . NUMBER

    NOT             shift and go to state 42
    LPARENT         shift and go to state 45
    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    EL                             shift and go to state 48
    TL                             shift and go to state 41
    FL                             shift and go to state 43
    K                              shift and go to state 44

state 18

    (24) S -> DO . X LOOPUNTIL EL ENDO
    (14) X -> . S R
    (15) X -> .
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 49
    S                              shift and go to state 11

state 19

    (25) S -> FOR . O TO E X NEXT
    (27) O -> . E
    (28) O -> . E ASSIGN E
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    O                              shift and go to state 50
    E                              shift and go to state 51
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 20

    (26) S -> GOSUB . ID

    ID              shift and go to state 52


state 21

    (12) SP -> SUBPROCEDURE ID . V X ENDSUB SEMMICOLON SP
    (2) V -> . DIM IDLIST AS TIPO SEMMICOLON V
    (3) V -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (V -> .)
    LET             reduce using rule 3 (V -> .)
    PRINT           reduce using rule 3 (V -> .)
    INPUT           reduce using rule 3 (V -> .)
    CLS             reduce using rule 3 (V -> .)
    IF              reduce using rule 3 (V -> .)
    WHILE           reduce using rule 3 (V -> .)
    DO              reduce using rule 3 (V -> .)
    FOR             reduce using rule 3 (V -> .)
    GOSUB           reduce using rule 3 (V -> .)
    END             reduce using rule 3 (V -> .)
    ENDSUB          reduce using rule 3 (V -> .)

    V                              shift and go to state 53

state 22

    (2) V -> DIM IDLIST AS . TIPO SEMMICOLON V
    (7) TIPO -> . WORD
    (8) TIPO -> . FLOAT
    (9) TIPO -> . ARRAY LBRACKET E RBRACKET
    (10) TIPO -> . MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET
    (11) TIPO -> . CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    WORD            shift and go to state 55
    FLOAT           shift and go to state 56
    ARRAY           shift and go to state 57
    MATRIX          shift and go to state 58
    CUBE            shift and go to state 59

    TIPO                           shift and go to state 54

state 23

    (5) IDLIST -> IDLIST COMMA . ID

    ID              shift and go to state 60


state 24

    (1) program -> PROGRAM ID V SP X END .

    $end            reduce using rule 1 (program -> PROGRAM ID V SP X END .)


state 25

    (14) X -> S R .

    END             reduce using rule 14 (X -> S R .)
    ENDSUB          reduce using rule 14 (X -> S R .)
    ELSE            reduce using rule 14 (X -> S R .)
    ENDIF           reduce using rule 14 (X -> S R .)
    WHEND           reduce using rule 14 (X -> S R .)
    LOOPUNTIL       reduce using rule 14 (X -> S R .)
    NEXT            reduce using rule 14 (X -> S R .)


state 26

    (16) R -> SEMMICOLON . S R
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    S                              shift and go to state 61

state 27

    (18) S -> LET E . ASSIGN E
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    ASSIGN          shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 28

    (42) E -> T .
    (43) T -> T . TIMES F
    (44) T -> T . DIVIDE F

    RBRACKET        reduce using rule 42 (E -> T .)
    ASSIGN          reduce using rule 42 (E -> T .)
    SEMMICOLON      reduce using rule 42 (E -> T .)
    END             reduce using rule 42 (E -> T .)
    ENDSUB          reduce using rule 42 (E -> T .)
    LET             reduce using rule 42 (E -> T .)
    PRINT           reduce using rule 42 (E -> T .)
    INPUT           reduce using rule 42 (E -> T .)
    CLS             reduce using rule 42 (E -> T .)
    IF              reduce using rule 42 (E -> T .)
    WHILE           reduce using rule 42 (E -> T .)
    DO              reduce using rule 42 (E -> T .)
    FOR             reduce using rule 42 (E -> T .)
    GOSUB           reduce using rule 42 (E -> T .)
    NEXT            reduce using rule 42 (E -> T .)
    TO              reduce using rule 42 (E -> T .)
    PLUS            reduce using rule 42 (E -> T .)
    MINUS           reduce using rule 42 (E -> T .)
    RPARENT         reduce using rule 42 (E -> T .)
    ELSE            reduce using rule 42 (E -> T .)
    ENDIF           reduce using rule 42 (E -> T .)
    WHEND           reduce using rule 42 (E -> T .)
    LOOPUNTIL       reduce using rule 42 (E -> T .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 29

    (45) T -> F .

    RBRACKET        reduce using rule 45 (T -> F .)
    ASSIGN          reduce using rule 45 (T -> F .)
    SEMMICOLON      reduce using rule 45 (T -> F .)
    END             reduce using rule 45 (T -> F .)
    ENDSUB          reduce using rule 45 (T -> F .)
    LET             reduce using rule 45 (T -> F .)
    PRINT           reduce using rule 45 (T -> F .)
    INPUT           reduce using rule 45 (T -> F .)
    CLS             reduce using rule 45 (T -> F .)
    IF              reduce using rule 45 (T -> F .)
    WHILE           reduce using rule 45 (T -> F .)
    DO              reduce using rule 45 (T -> F .)
    FOR             reduce using rule 45 (T -> F .)
    GOSUB           reduce using rule 45 (T -> F .)
    NEXT            reduce using rule 45 (T -> F .)
    TO              reduce using rule 45 (T -> F .)
    PLUS            reduce using rule 45 (T -> F .)
    MINUS           reduce using rule 45 (T -> F .)
    TIMES           reduce using rule 45 (T -> F .)
    DIVIDE          reduce using rule 45 (T -> F .)
    RPARENT         reduce using rule 45 (T -> F .)
    ELSE            reduce using rule 45 (T -> F .)
    ENDIF           reduce using rule 45 (T -> F .)
    WHEND           reduce using rule 45 (T -> F .)
    LOOPUNTIL       reduce using rule 45 (T -> F .)


state 30

    (46) F -> NUMBER .

    RBRACKET        reduce using rule 46 (F -> NUMBER .)
    ASSIGN          reduce using rule 46 (F -> NUMBER .)
    SEMMICOLON      reduce using rule 46 (F -> NUMBER .)
    END             reduce using rule 46 (F -> NUMBER .)
    ENDSUB          reduce using rule 46 (F -> NUMBER .)
    LET             reduce using rule 46 (F -> NUMBER .)
    PRINT           reduce using rule 46 (F -> NUMBER .)
    INPUT           reduce using rule 46 (F -> NUMBER .)
    CLS             reduce using rule 46 (F -> NUMBER .)
    IF              reduce using rule 46 (F -> NUMBER .)
    WHILE           reduce using rule 46 (F -> NUMBER .)
    DO              reduce using rule 46 (F -> NUMBER .)
    FOR             reduce using rule 46 (F -> NUMBER .)
    GOSUB           reduce using rule 46 (F -> NUMBER .)
    NEXT            reduce using rule 46 (F -> NUMBER .)
    TO              reduce using rule 46 (F -> NUMBER .)
    PLUS            reduce using rule 46 (F -> NUMBER .)
    MINUS           reduce using rule 46 (F -> NUMBER .)
    TIMES           reduce using rule 46 (F -> NUMBER .)
    DIVIDE          reduce using rule 46 (F -> NUMBER .)
    RPARENT         reduce using rule 46 (F -> NUMBER .)
    ELSE            reduce using rule 46 (F -> NUMBER .)
    ENDIF           reduce using rule 46 (F -> NUMBER .)
    WHEND           reduce using rule 46 (F -> NUMBER .)
    LOOPUNTIL       reduce using rule 46 (F -> NUMBER .)


state 31

    (47) F -> U .

    RBRACKET        reduce using rule 47 (F -> U .)
    ASSIGN          reduce using rule 47 (F -> U .)
    SEMMICOLON      reduce using rule 47 (F -> U .)
    END             reduce using rule 47 (F -> U .)
    ENDSUB          reduce using rule 47 (F -> U .)
    LET             reduce using rule 47 (F -> U .)
    PRINT           reduce using rule 47 (F -> U .)
    INPUT           reduce using rule 47 (F -> U .)
    CLS             reduce using rule 47 (F -> U .)
    IF              reduce using rule 47 (F -> U .)
    WHILE           reduce using rule 47 (F -> U .)
    DO              reduce using rule 47 (F -> U .)
    FOR             reduce using rule 47 (F -> U .)
    GOSUB           reduce using rule 47 (F -> U .)
    NEXT            reduce using rule 47 (F -> U .)
    TO              reduce using rule 47 (F -> U .)
    PLUS            reduce using rule 47 (F -> U .)
    MINUS           reduce using rule 47 (F -> U .)
    TIMES           reduce using rule 47 (F -> U .)
    DIVIDE          reduce using rule 47 (F -> U .)
    RPARENT         reduce using rule 47 (F -> U .)
    ELSE            reduce using rule 47 (F -> U .)
    ENDIF           reduce using rule 47 (F -> U .)
    WHEND           reduce using rule 47 (F -> U .)
    LOOPUNTIL       reduce using rule 47 (F -> U .)


state 32

    (48) F -> LPARENT . E RPARENT
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 67
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 33

    (29) U -> ID .
    (30) U -> ID . LBRACKET E RBRACKET
    (31) U -> ID . LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> ID . LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    SEMMICOLON      reduce using rule 29 (U -> ID .)
    END             reduce using rule 29 (U -> ID .)
    ENDSUB          reduce using rule 29 (U -> ID .)
    RPARENT         reduce using rule 29 (U -> ID .)
    RBRACKET        reduce using rule 29 (U -> ID .)
    ASSIGN          reduce using rule 29 (U -> ID .)
    LET             reduce using rule 29 (U -> ID .)
    PRINT           reduce using rule 29 (U -> ID .)
    INPUT           reduce using rule 29 (U -> ID .)
    CLS             reduce using rule 29 (U -> ID .)
    IF              reduce using rule 29 (U -> ID .)
    WHILE           reduce using rule 29 (U -> ID .)
    DO              reduce using rule 29 (U -> ID .)
    FOR             reduce using rule 29 (U -> ID .)
    GOSUB           reduce using rule 29 (U -> ID .)
    NEXT            reduce using rule 29 (U -> ID .)
    TO              reduce using rule 29 (U -> ID .)
    PLUS            reduce using rule 29 (U -> ID .)
    MINUS           reduce using rule 29 (U -> ID .)
    TIMES           reduce using rule 29 (U -> ID .)
    DIVIDE          reduce using rule 29 (U -> ID .)
    ELSE            reduce using rule 29 (U -> ID .)
    ENDIF           reduce using rule 29 (U -> ID .)
    WHEND           reduce using rule 29 (U -> ID .)
    LOOPUNTIL       reduce using rule 29 (U -> ID .)
    LBRACKET        shift and go to state 68


state 34

    (19) S -> PRINT Q .

    SEMMICOLON      reduce using rule 19 (S -> PRINT Q .)
    END             reduce using rule 19 (S -> PRINT Q .)
    ENDSUB          reduce using rule 19 (S -> PRINT Q .)
    ELSE            reduce using rule 19 (S -> PRINT Q .)
    ENDIF           reduce using rule 19 (S -> PRINT Q .)
    WHEND           reduce using rule 19 (S -> PRINT Q .)
    LOOPUNTIL       reduce using rule 19 (S -> PRINT Q .)
    NEXT            reduce using rule 19 (S -> PRINT Q .)


state 35

    (33) Q -> LPARENT . U RPARENT
    (37) TEXT -> LPARENT . STRING RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    STRING          shift and go to state 70
    ID              shift and go to state 33

    U                              shift and go to state 69

state 36

    (34) Q -> TEXT .

    SEMMICOLON      reduce using rule 34 (Q -> TEXT .)
    END             reduce using rule 34 (Q -> TEXT .)
    ENDSUB          reduce using rule 34 (Q -> TEXT .)
    ELSE            reduce using rule 34 (Q -> TEXT .)
    ENDIF           reduce using rule 34 (Q -> TEXT .)
    WHEND           reduce using rule 34 (Q -> TEXT .)
    LOOPUNTIL       reduce using rule 34 (Q -> TEXT .)
    NEXT            reduce using rule 34 (Q -> TEXT .)


state 37

    (20) S -> INPUT H . GTGT U

    GTGT            shift and go to state 71


state 38

    (35) H -> TEXT .

    GTGT            reduce using rule 35 (H -> TEXT .)


state 39

    (37) TEXT -> LPARENT . STRING RPARENT

    STRING          shift and go to state 70


state 40

    (22) S -> IF EL . THEN X ELSE1 ENDIF
    (49) EL -> EL . OR TL

    THEN            shift and go to state 72
    OR              shift and go to state 73


state 41

    (51) EL -> TL .
    (52) TL -> TL . AND FL

    THEN            reduce using rule 51 (EL -> TL .)
    LET             reduce using rule 51 (EL -> TL .)
    PRINT           reduce using rule 51 (EL -> TL .)
    INPUT           reduce using rule 51 (EL -> TL .)
    CLS             reduce using rule 51 (EL -> TL .)
    IF              reduce using rule 51 (EL -> TL .)
    WHILE           reduce using rule 51 (EL -> TL .)
    DO              reduce using rule 51 (EL -> TL .)
    FOR             reduce using rule 51 (EL -> TL .)
    GOSUB           reduce using rule 51 (EL -> TL .)
    WHEND           reduce using rule 51 (EL -> TL .)
    ENDO            reduce using rule 51 (EL -> TL .)
    OR              reduce using rule 51 (EL -> TL .)
    RPARENT         reduce using rule 51 (EL -> TL .)
    AND             shift and go to state 74


state 42

    (50) EL -> NOT . TL
    (52) TL -> . TL AND FL
    (53) TL -> . FL
    (54) FL -> . K OPREL K
    (55) FL -> . LPARENT EL RPARENT
    (62) K -> . ID
    (63) K -> . NUMBER

    LPARENT         shift and go to state 45
    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    TL                             shift and go to state 75
    FL                             shift and go to state 43
    K                              shift and go to state 44

state 43

    (53) TL -> FL .

    THEN            reduce using rule 53 (TL -> FL .)
    LET             reduce using rule 53 (TL -> FL .)
    PRINT           reduce using rule 53 (TL -> FL .)
    INPUT           reduce using rule 53 (TL -> FL .)
    CLS             reduce using rule 53 (TL -> FL .)
    IF              reduce using rule 53 (TL -> FL .)
    WHILE           reduce using rule 53 (TL -> FL .)
    DO              reduce using rule 53 (TL -> FL .)
    FOR             reduce using rule 53 (TL -> FL .)
    GOSUB           reduce using rule 53 (TL -> FL .)
    WHEND           reduce using rule 53 (TL -> FL .)
    ENDO            reduce using rule 53 (TL -> FL .)
    OR              reduce using rule 53 (TL -> FL .)
    AND             reduce using rule 53 (TL -> FL .)
    RPARENT         reduce using rule 53 (TL -> FL .)


state 44

    (54) FL -> K . OPREL K
    (56) OPREL -> . LT
    (57) OPREL -> . LTE
    (58) OPREL -> . GT
    (59) OPREL -> . GTE
    (60) OPREL -> . NE
    (61) OPREL -> . EQUAL

    LT              shift and go to state 77
    LTE             shift and go to state 78
    GT              shift and go to state 79
    GTE             shift and go to state 80
    NE              shift and go to state 81
    EQUAL           shift and go to state 82

    OPREL                          shift and go to state 76

state 45

    (55) FL -> LPARENT . EL RPARENT
    (49) EL -> . EL OR TL
    (50) EL -> . NOT TL
    (51) EL -> . TL
    (52) TL -> . TL AND FL
    (53) TL -> . FL
    (54) FL -> . K OPREL K
    (55) FL -> . LPARENT EL RPARENT
    (62) K -> . ID
    (63) K -> . NUMBER

    NOT             shift and go to state 42
    LPARENT         shift and go to state 45
    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    EL                             shift and go to state 83
    TL                             shift and go to state 41
    FL                             shift and go to state 43
    K                              shift and go to state 44

state 46

    (62) K -> ID .

    LT              reduce using rule 62 (K -> ID .)
    LTE             reduce using rule 62 (K -> ID .)
    GT              reduce using rule 62 (K -> ID .)
    GTE             reduce using rule 62 (K -> ID .)
    NE              reduce using rule 62 (K -> ID .)
    EQUAL           reduce using rule 62 (K -> ID .)
    THEN            reduce using rule 62 (K -> ID .)
    LET             reduce using rule 62 (K -> ID .)
    PRINT           reduce using rule 62 (K -> ID .)
    INPUT           reduce using rule 62 (K -> ID .)
    CLS             reduce using rule 62 (K -> ID .)
    IF              reduce using rule 62 (K -> ID .)
    WHILE           reduce using rule 62 (K -> ID .)
    DO              reduce using rule 62 (K -> ID .)
    FOR             reduce using rule 62 (K -> ID .)
    GOSUB           reduce using rule 62 (K -> ID .)
    WHEND           reduce using rule 62 (K -> ID .)
    ENDO            reduce using rule 62 (K -> ID .)
    OR              reduce using rule 62 (K -> ID .)
    AND             reduce using rule 62 (K -> ID .)
    RPARENT         reduce using rule 62 (K -> ID .)


state 47

    (63) K -> NUMBER .

    LT              reduce using rule 63 (K -> NUMBER .)
    LTE             reduce using rule 63 (K -> NUMBER .)
    GT              reduce using rule 63 (K -> NUMBER .)
    GTE             reduce using rule 63 (K -> NUMBER .)
    NE              reduce using rule 63 (K -> NUMBER .)
    EQUAL           reduce using rule 63 (K -> NUMBER .)
    THEN            reduce using rule 63 (K -> NUMBER .)
    LET             reduce using rule 63 (K -> NUMBER .)
    PRINT           reduce using rule 63 (K -> NUMBER .)
    INPUT           reduce using rule 63 (K -> NUMBER .)
    CLS             reduce using rule 63 (K -> NUMBER .)
    IF              reduce using rule 63 (K -> NUMBER .)
    WHILE           reduce using rule 63 (K -> NUMBER .)
    DO              reduce using rule 63 (K -> NUMBER .)
    FOR             reduce using rule 63 (K -> NUMBER .)
    GOSUB           reduce using rule 63 (K -> NUMBER .)
    WHEND           reduce using rule 63 (K -> NUMBER .)
    ENDO            reduce using rule 63 (K -> NUMBER .)
    OR              reduce using rule 63 (K -> NUMBER .)
    AND             reduce using rule 63 (K -> NUMBER .)
    RPARENT         reduce using rule 63 (K -> NUMBER .)


state 48

    (23) S -> WHILE EL . X WHEND
    (49) EL -> EL . OR TL
    (14) X -> . S R
    (15) X -> .
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    OR              shift and go to state 73
    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 84
    S                              shift and go to state 11

state 49

    (24) S -> DO X . LOOPUNTIL EL ENDO

    LOOPUNTIL       shift and go to state 85


state 50

    (25) S -> FOR O . TO E X NEXT

    TO              shift and go to state 86


state 51

    (27) O -> E .
    (28) O -> E . ASSIGN E
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    TO              reduce using rule 27 (O -> E .)
    ASSIGN          shift and go to state 87
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 52

    (26) S -> GOSUB ID .

    SEMMICOLON      reduce using rule 26 (S -> GOSUB ID .)
    END             reduce using rule 26 (S -> GOSUB ID .)
    ENDSUB          reduce using rule 26 (S -> GOSUB ID .)
    ELSE            reduce using rule 26 (S -> GOSUB ID .)
    ENDIF           reduce using rule 26 (S -> GOSUB ID .)
    WHEND           reduce using rule 26 (S -> GOSUB ID .)
    LOOPUNTIL       reduce using rule 26 (S -> GOSUB ID .)
    NEXT            reduce using rule 26 (S -> GOSUB ID .)


state 53

    (12) SP -> SUBPROCEDURE ID V . X ENDSUB SEMMICOLON SP
    (14) X -> . S R
    (15) X -> .
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 88
    S                              shift and go to state 11

state 54

    (2) V -> DIM IDLIST AS TIPO . SEMMICOLON V

    SEMMICOLON      shift and go to state 89


state 55

    (7) TIPO -> WORD .

    SEMMICOLON      reduce using rule 7 (TIPO -> WORD .)


state 56

    (8) TIPO -> FLOAT .

    SEMMICOLON      reduce using rule 8 (TIPO -> FLOAT .)


state 57

    (9) TIPO -> ARRAY . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 90


state 58

    (10) TIPO -> MATRIX . LBRACKET E RBRACKET LBRACKET E RBRACKET

    LBRACKET        shift and go to state 91


state 59

    (11) TIPO -> CUBE . LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    LBRACKET        shift and go to state 92


state 60

    (5) IDLIST -> IDLIST COMMA ID .

    AS              reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)
    COMMA           reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)


state 61

    (16) R -> SEMMICOLON S . R
    (16) R -> . SEMMICOLON S R
    (17) R -> .

    SEMMICOLON      shift and go to state 26
    END             reduce using rule 17 (R -> .)
    ENDSUB          reduce using rule 17 (R -> .)
    ELSE            reduce using rule 17 (R -> .)
    ENDIF           reduce using rule 17 (R -> .)
    WHEND           reduce using rule 17 (R -> .)
    LOOPUNTIL       reduce using rule 17 (R -> .)
    NEXT            reduce using rule 17 (R -> .)

    R                              shift and go to state 93

state 62

    (18) S -> LET E ASSIGN . E
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 94
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 63

    (40) E -> E PLUS . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    T                              shift and go to state 95
    F                              shift and go to state 29
    U                              shift and go to state 31

state 64

    (41) E -> E MINUS . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    T                              shift and go to state 96
    F                              shift and go to state 29
    U                              shift and go to state 31

state 65

    (43) T -> T TIMES . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    F                              shift and go to state 97
    U                              shift and go to state 31

state 66

    (44) T -> T DIVIDE . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    F                              shift and go to state 98
    U                              shift and go to state 31

state 67

    (48) F -> LPARENT E . RPARENT
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RPARENT         shift and go to state 99
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 68

    (30) U -> ID LBRACKET . E RBRACKET
    (31) U -> ID LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (32) U -> ID LBRACKET . E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 100
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 69

    (33) Q -> LPARENT U . RPARENT

    RPARENT         shift and go to state 101


state 70

    (37) TEXT -> LPARENT STRING . RPARENT

    RPARENT         shift and go to state 102


state 71

    (20) S -> INPUT H GTGT . U
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    ID              shift and go to state 33

    U                              shift and go to state 103

state 72

    (22) S -> IF EL THEN . X ELSE1 ENDIF
    (14) X -> . S R
    (15) X -> .
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 104
    S                              shift and go to state 11

state 73

    (49) EL -> EL OR . TL
    (52) TL -> . TL AND FL
    (53) TL -> . FL
    (54) FL -> . K OPREL K
    (55) FL -> . LPARENT EL RPARENT
    (62) K -> . ID
    (63) K -> . NUMBER

    LPARENT         shift and go to state 45
    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    TL                             shift and go to state 105
    FL                             shift and go to state 43
    K                              shift and go to state 44

state 74

    (52) TL -> TL AND . FL
    (54) FL -> . K OPREL K
    (55) FL -> . LPARENT EL RPARENT
    (62) K -> . ID
    (63) K -> . NUMBER

    LPARENT         shift and go to state 45
    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    FL                             shift and go to state 106
    K                              shift and go to state 44

state 75

    (50) EL -> NOT TL .
    (52) TL -> TL . AND FL

    THEN            reduce using rule 50 (EL -> NOT TL .)
    LET             reduce using rule 50 (EL -> NOT TL .)
    PRINT           reduce using rule 50 (EL -> NOT TL .)
    INPUT           reduce using rule 50 (EL -> NOT TL .)
    CLS             reduce using rule 50 (EL -> NOT TL .)
    IF              reduce using rule 50 (EL -> NOT TL .)
    WHILE           reduce using rule 50 (EL -> NOT TL .)
    DO              reduce using rule 50 (EL -> NOT TL .)
    FOR             reduce using rule 50 (EL -> NOT TL .)
    GOSUB           reduce using rule 50 (EL -> NOT TL .)
    WHEND           reduce using rule 50 (EL -> NOT TL .)
    ENDO            reduce using rule 50 (EL -> NOT TL .)
    OR              reduce using rule 50 (EL -> NOT TL .)
    RPARENT         reduce using rule 50 (EL -> NOT TL .)
    AND             shift and go to state 74


state 76

    (54) FL -> K OPREL . K
    (62) K -> . ID
    (63) K -> . NUMBER

    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    K                              shift and go to state 107

state 77

    (56) OPREL -> LT .

    ID              reduce using rule 56 (OPREL -> LT .)
    NUMBER          reduce using rule 56 (OPREL -> LT .)


state 78

    (57) OPREL -> LTE .

    ID              reduce using rule 57 (OPREL -> LTE .)
    NUMBER          reduce using rule 57 (OPREL -> LTE .)


state 79

    (58) OPREL -> GT .

    ID              reduce using rule 58 (OPREL -> GT .)
    NUMBER          reduce using rule 58 (OPREL -> GT .)


state 80

    (59) OPREL -> GTE .

    ID              reduce using rule 59 (OPREL -> GTE .)
    NUMBER          reduce using rule 59 (OPREL -> GTE .)


state 81

    (60) OPREL -> NE .

    ID              reduce using rule 60 (OPREL -> NE .)
    NUMBER          reduce using rule 60 (OPREL -> NE .)


state 82

    (61) OPREL -> EQUAL .

    ID              reduce using rule 61 (OPREL -> EQUAL .)
    NUMBER          reduce using rule 61 (OPREL -> EQUAL .)


state 83

    (55) FL -> LPARENT EL . RPARENT
    (49) EL -> EL . OR TL

    RPARENT         shift and go to state 108
    OR              shift and go to state 73


state 84

    (23) S -> WHILE EL X . WHEND

    WHEND           shift and go to state 109


state 85

    (24) S -> DO X LOOPUNTIL . EL ENDO
    (49) EL -> . EL OR TL
    (50) EL -> . NOT TL
    (51) EL -> . TL
    (52) TL -> . TL AND FL
    (53) TL -> . FL
    (54) FL -> . K OPREL K
    (55) FL -> . LPARENT EL RPARENT
    (62) K -> . ID
    (63) K -> . NUMBER

    NOT             shift and go to state 42
    LPARENT         shift and go to state 45
    ID              shift and go to state 46
    NUMBER          shift and go to state 47

    EL                             shift and go to state 110
    TL                             shift and go to state 41
    FL                             shift and go to state 43
    K                              shift and go to state 44

state 86

    (25) S -> FOR O TO . E X NEXT
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 111
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 87

    (28) O -> E ASSIGN . E
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 112
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 88

    (12) SP -> SUBPROCEDURE ID V X . ENDSUB SEMMICOLON SP

    ENDSUB          shift and go to state 113


state 89

    (2) V -> DIM IDLIST AS TIPO SEMMICOLON . V
    (2) V -> . DIM IDLIST AS TIPO SEMMICOLON V
    (3) V -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (V -> .)
    LET             reduce using rule 3 (V -> .)
    PRINT           reduce using rule 3 (V -> .)
    INPUT           reduce using rule 3 (V -> .)
    CLS             reduce using rule 3 (V -> .)
    IF              reduce using rule 3 (V -> .)
    WHILE           reduce using rule 3 (V -> .)
    DO              reduce using rule 3 (V -> .)
    FOR             reduce using rule 3 (V -> .)
    GOSUB           reduce using rule 3 (V -> .)
    END             reduce using rule 3 (V -> .)
    ENDSUB          reduce using rule 3 (V -> .)

    V                              shift and go to state 114

state 90

    (9) TIPO -> ARRAY LBRACKET . E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 115
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 91

    (10) TIPO -> MATRIX LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 116
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 92

    (11) TIPO -> CUBE LBRACKET . E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 117
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 93

    (16) R -> SEMMICOLON S R .

    END             reduce using rule 16 (R -> SEMMICOLON S R .)
    ENDSUB          reduce using rule 16 (R -> SEMMICOLON S R .)
    ELSE            reduce using rule 16 (R -> SEMMICOLON S R .)
    ENDIF           reduce using rule 16 (R -> SEMMICOLON S R .)
    WHEND           reduce using rule 16 (R -> SEMMICOLON S R .)
    LOOPUNTIL       reduce using rule 16 (R -> SEMMICOLON S R .)
    NEXT            reduce using rule 16 (R -> SEMMICOLON S R .)


state 94

    (18) S -> LET E ASSIGN E .
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    SEMMICOLON      reduce using rule 18 (S -> LET E ASSIGN E .)
    END             reduce using rule 18 (S -> LET E ASSIGN E .)
    ENDSUB          reduce using rule 18 (S -> LET E ASSIGN E .)
    ELSE            reduce using rule 18 (S -> LET E ASSIGN E .)
    ENDIF           reduce using rule 18 (S -> LET E ASSIGN E .)
    WHEND           reduce using rule 18 (S -> LET E ASSIGN E .)
    LOOPUNTIL       reduce using rule 18 (S -> LET E ASSIGN E .)
    NEXT            reduce using rule 18 (S -> LET E ASSIGN E .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 95

    (40) E -> E PLUS T .
    (43) T -> T . TIMES F
    (44) T -> T . DIVIDE F

    RBRACKET        reduce using rule 40 (E -> E PLUS T .)
    ASSIGN          reduce using rule 40 (E -> E PLUS T .)
    SEMMICOLON      reduce using rule 40 (E -> E PLUS T .)
    END             reduce using rule 40 (E -> E PLUS T .)
    ENDSUB          reduce using rule 40 (E -> E PLUS T .)
    LET             reduce using rule 40 (E -> E PLUS T .)
    PRINT           reduce using rule 40 (E -> E PLUS T .)
    INPUT           reduce using rule 40 (E -> E PLUS T .)
    CLS             reduce using rule 40 (E -> E PLUS T .)
    IF              reduce using rule 40 (E -> E PLUS T .)
    WHILE           reduce using rule 40 (E -> E PLUS T .)
    DO              reduce using rule 40 (E -> E PLUS T .)
    FOR             reduce using rule 40 (E -> E PLUS T .)
    GOSUB           reduce using rule 40 (E -> E PLUS T .)
    NEXT            reduce using rule 40 (E -> E PLUS T .)
    TO              reduce using rule 40 (E -> E PLUS T .)
    PLUS            reduce using rule 40 (E -> E PLUS T .)
    MINUS           reduce using rule 40 (E -> E PLUS T .)
    RPARENT         reduce using rule 40 (E -> E PLUS T .)
    ELSE            reduce using rule 40 (E -> E PLUS T .)
    ENDIF           reduce using rule 40 (E -> E PLUS T .)
    WHEND           reduce using rule 40 (E -> E PLUS T .)
    LOOPUNTIL       reduce using rule 40 (E -> E PLUS T .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 96

    (41) E -> E MINUS T .
    (43) T -> T . TIMES F
    (44) T -> T . DIVIDE F

    RBRACKET        reduce using rule 41 (E -> E MINUS T .)
    ASSIGN          reduce using rule 41 (E -> E MINUS T .)
    SEMMICOLON      reduce using rule 41 (E -> E MINUS T .)
    END             reduce using rule 41 (E -> E MINUS T .)
    ENDSUB          reduce using rule 41 (E -> E MINUS T .)
    LET             reduce using rule 41 (E -> E MINUS T .)
    PRINT           reduce using rule 41 (E -> E MINUS T .)
    INPUT           reduce using rule 41 (E -> E MINUS T .)
    CLS             reduce using rule 41 (E -> E MINUS T .)
    IF              reduce using rule 41 (E -> E MINUS T .)
    WHILE           reduce using rule 41 (E -> E MINUS T .)
    DO              reduce using rule 41 (E -> E MINUS T .)
    FOR             reduce using rule 41 (E -> E MINUS T .)
    GOSUB           reduce using rule 41 (E -> E MINUS T .)
    NEXT            reduce using rule 41 (E -> E MINUS T .)
    TO              reduce using rule 41 (E -> E MINUS T .)
    PLUS            reduce using rule 41 (E -> E MINUS T .)
    MINUS           reduce using rule 41 (E -> E MINUS T .)
    RPARENT         reduce using rule 41 (E -> E MINUS T .)
    ELSE            reduce using rule 41 (E -> E MINUS T .)
    ENDIF           reduce using rule 41 (E -> E MINUS T .)
    WHEND           reduce using rule 41 (E -> E MINUS T .)
    LOOPUNTIL       reduce using rule 41 (E -> E MINUS T .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66


state 97

    (43) T -> T TIMES F .

    RBRACKET        reduce using rule 43 (T -> T TIMES F .)
    ASSIGN          reduce using rule 43 (T -> T TIMES F .)
    SEMMICOLON      reduce using rule 43 (T -> T TIMES F .)
    END             reduce using rule 43 (T -> T TIMES F .)
    ENDSUB          reduce using rule 43 (T -> T TIMES F .)
    LET             reduce using rule 43 (T -> T TIMES F .)
    PRINT           reduce using rule 43 (T -> T TIMES F .)
    INPUT           reduce using rule 43 (T -> T TIMES F .)
    CLS             reduce using rule 43 (T -> T TIMES F .)
    IF              reduce using rule 43 (T -> T TIMES F .)
    WHILE           reduce using rule 43 (T -> T TIMES F .)
    DO              reduce using rule 43 (T -> T TIMES F .)
    FOR             reduce using rule 43 (T -> T TIMES F .)
    GOSUB           reduce using rule 43 (T -> T TIMES F .)
    NEXT            reduce using rule 43 (T -> T TIMES F .)
    TO              reduce using rule 43 (T -> T TIMES F .)
    PLUS            reduce using rule 43 (T -> T TIMES F .)
    MINUS           reduce using rule 43 (T -> T TIMES F .)
    TIMES           reduce using rule 43 (T -> T TIMES F .)
    DIVIDE          reduce using rule 43 (T -> T TIMES F .)
    RPARENT         reduce using rule 43 (T -> T TIMES F .)
    ELSE            reduce using rule 43 (T -> T TIMES F .)
    ENDIF           reduce using rule 43 (T -> T TIMES F .)
    WHEND           reduce using rule 43 (T -> T TIMES F .)
    LOOPUNTIL       reduce using rule 43 (T -> T TIMES F .)


state 98

    (44) T -> T DIVIDE F .

    RBRACKET        reduce using rule 44 (T -> T DIVIDE F .)
    ASSIGN          reduce using rule 44 (T -> T DIVIDE F .)
    SEMMICOLON      reduce using rule 44 (T -> T DIVIDE F .)
    END             reduce using rule 44 (T -> T DIVIDE F .)
    ENDSUB          reduce using rule 44 (T -> T DIVIDE F .)
    LET             reduce using rule 44 (T -> T DIVIDE F .)
    PRINT           reduce using rule 44 (T -> T DIVIDE F .)
    INPUT           reduce using rule 44 (T -> T DIVIDE F .)
    CLS             reduce using rule 44 (T -> T DIVIDE F .)
    IF              reduce using rule 44 (T -> T DIVIDE F .)
    WHILE           reduce using rule 44 (T -> T DIVIDE F .)
    DO              reduce using rule 44 (T -> T DIVIDE F .)
    FOR             reduce using rule 44 (T -> T DIVIDE F .)
    GOSUB           reduce using rule 44 (T -> T DIVIDE F .)
    NEXT            reduce using rule 44 (T -> T DIVIDE F .)
    TO              reduce using rule 44 (T -> T DIVIDE F .)
    PLUS            reduce using rule 44 (T -> T DIVIDE F .)
    MINUS           reduce using rule 44 (T -> T DIVIDE F .)
    TIMES           reduce using rule 44 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 44 (T -> T DIVIDE F .)
    RPARENT         reduce using rule 44 (T -> T DIVIDE F .)
    ELSE            reduce using rule 44 (T -> T DIVIDE F .)
    ENDIF           reduce using rule 44 (T -> T DIVIDE F .)
    WHEND           reduce using rule 44 (T -> T DIVIDE F .)
    LOOPUNTIL       reduce using rule 44 (T -> T DIVIDE F .)


state 99

    (48) F -> LPARENT E RPARENT .

    RBRACKET        reduce using rule 48 (F -> LPARENT E RPARENT .)
    ASSIGN          reduce using rule 48 (F -> LPARENT E RPARENT .)
    SEMMICOLON      reduce using rule 48 (F -> LPARENT E RPARENT .)
    END             reduce using rule 48 (F -> LPARENT E RPARENT .)
    ENDSUB          reduce using rule 48 (F -> LPARENT E RPARENT .)
    LET             reduce using rule 48 (F -> LPARENT E RPARENT .)
    PRINT           reduce using rule 48 (F -> LPARENT E RPARENT .)
    INPUT           reduce using rule 48 (F -> LPARENT E RPARENT .)
    CLS             reduce using rule 48 (F -> LPARENT E RPARENT .)
    IF              reduce using rule 48 (F -> LPARENT E RPARENT .)
    WHILE           reduce using rule 48 (F -> LPARENT E RPARENT .)
    DO              reduce using rule 48 (F -> LPARENT E RPARENT .)
    FOR             reduce using rule 48 (F -> LPARENT E RPARENT .)
    GOSUB           reduce using rule 48 (F -> LPARENT E RPARENT .)
    NEXT            reduce using rule 48 (F -> LPARENT E RPARENT .)
    TO              reduce using rule 48 (F -> LPARENT E RPARENT .)
    PLUS            reduce using rule 48 (F -> LPARENT E RPARENT .)
    MINUS           reduce using rule 48 (F -> LPARENT E RPARENT .)
    TIMES           reduce using rule 48 (F -> LPARENT E RPARENT .)
    DIVIDE          reduce using rule 48 (F -> LPARENT E RPARENT .)
    RPARENT         reduce using rule 48 (F -> LPARENT E RPARENT .)
    ELSE            reduce using rule 48 (F -> LPARENT E RPARENT .)
    ENDIF           reduce using rule 48 (F -> LPARENT E RPARENT .)
    WHEND           reduce using rule 48 (F -> LPARENT E RPARENT .)
    LOOPUNTIL       reduce using rule 48 (F -> LPARENT E RPARENT .)


state 100

    (30) U -> ID LBRACKET E . RBRACKET
    (31) U -> ID LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (32) U -> ID LBRACKET E . RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 118
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 101

    (33) Q -> LPARENT U RPARENT .

    SEMMICOLON      reduce using rule 33 (Q -> LPARENT U RPARENT .)
    END             reduce using rule 33 (Q -> LPARENT U RPARENT .)
    ENDSUB          reduce using rule 33 (Q -> LPARENT U RPARENT .)
    ELSE            reduce using rule 33 (Q -> LPARENT U RPARENT .)
    ENDIF           reduce using rule 33 (Q -> LPARENT U RPARENT .)
    WHEND           reduce using rule 33 (Q -> LPARENT U RPARENT .)
    LOOPUNTIL       reduce using rule 33 (Q -> LPARENT U RPARENT .)
    NEXT            reduce using rule 33 (Q -> LPARENT U RPARENT .)


state 102

    (37) TEXT -> LPARENT STRING RPARENT .

    SEMMICOLON      reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    END             reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    ENDSUB          reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    GTGT            reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    ELSE            reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    ENDIF           reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    WHEND           reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    LOOPUNTIL       reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)
    NEXT            reduce using rule 37 (TEXT -> LPARENT STRING RPARENT .)


state 103

    (20) S -> INPUT H GTGT U .

    SEMMICOLON      reduce using rule 20 (S -> INPUT H GTGT U .)
    END             reduce using rule 20 (S -> INPUT H GTGT U .)
    ENDSUB          reduce using rule 20 (S -> INPUT H GTGT U .)
    ELSE            reduce using rule 20 (S -> INPUT H GTGT U .)
    ENDIF           reduce using rule 20 (S -> INPUT H GTGT U .)
    WHEND           reduce using rule 20 (S -> INPUT H GTGT U .)
    LOOPUNTIL       reduce using rule 20 (S -> INPUT H GTGT U .)
    NEXT            reduce using rule 20 (S -> INPUT H GTGT U .)


state 104

    (22) S -> IF EL THEN X . ELSE1 ENDIF
    (38) ELSE1 -> . ELSE X
    (39) ELSE1 -> .

    ELSE            shift and go to state 120
    ENDIF           reduce using rule 39 (ELSE1 -> .)

    ELSE1                          shift and go to state 119

state 105

    (49) EL -> EL OR TL .
    (52) TL -> TL . AND FL

    THEN            reduce using rule 49 (EL -> EL OR TL .)
    LET             reduce using rule 49 (EL -> EL OR TL .)
    PRINT           reduce using rule 49 (EL -> EL OR TL .)
    INPUT           reduce using rule 49 (EL -> EL OR TL .)
    CLS             reduce using rule 49 (EL -> EL OR TL .)
    IF              reduce using rule 49 (EL -> EL OR TL .)
    WHILE           reduce using rule 49 (EL -> EL OR TL .)
    DO              reduce using rule 49 (EL -> EL OR TL .)
    FOR             reduce using rule 49 (EL -> EL OR TL .)
    GOSUB           reduce using rule 49 (EL -> EL OR TL .)
    WHEND           reduce using rule 49 (EL -> EL OR TL .)
    ENDO            reduce using rule 49 (EL -> EL OR TL .)
    OR              reduce using rule 49 (EL -> EL OR TL .)
    RPARENT         reduce using rule 49 (EL -> EL OR TL .)
    AND             shift and go to state 74


state 106

    (52) TL -> TL AND FL .

    THEN            reduce using rule 52 (TL -> TL AND FL .)
    LET             reduce using rule 52 (TL -> TL AND FL .)
    PRINT           reduce using rule 52 (TL -> TL AND FL .)
    INPUT           reduce using rule 52 (TL -> TL AND FL .)
    CLS             reduce using rule 52 (TL -> TL AND FL .)
    IF              reduce using rule 52 (TL -> TL AND FL .)
    WHILE           reduce using rule 52 (TL -> TL AND FL .)
    DO              reduce using rule 52 (TL -> TL AND FL .)
    FOR             reduce using rule 52 (TL -> TL AND FL .)
    GOSUB           reduce using rule 52 (TL -> TL AND FL .)
    WHEND           reduce using rule 52 (TL -> TL AND FL .)
    ENDO            reduce using rule 52 (TL -> TL AND FL .)
    OR              reduce using rule 52 (TL -> TL AND FL .)
    AND             reduce using rule 52 (TL -> TL AND FL .)
    RPARENT         reduce using rule 52 (TL -> TL AND FL .)


state 107

    (54) FL -> K OPREL K .

    THEN            reduce using rule 54 (FL -> K OPREL K .)
    LET             reduce using rule 54 (FL -> K OPREL K .)
    PRINT           reduce using rule 54 (FL -> K OPREL K .)
    INPUT           reduce using rule 54 (FL -> K OPREL K .)
    CLS             reduce using rule 54 (FL -> K OPREL K .)
    IF              reduce using rule 54 (FL -> K OPREL K .)
    WHILE           reduce using rule 54 (FL -> K OPREL K .)
    DO              reduce using rule 54 (FL -> K OPREL K .)
    FOR             reduce using rule 54 (FL -> K OPREL K .)
    GOSUB           reduce using rule 54 (FL -> K OPREL K .)
    WHEND           reduce using rule 54 (FL -> K OPREL K .)
    ENDO            reduce using rule 54 (FL -> K OPREL K .)
    OR              reduce using rule 54 (FL -> K OPREL K .)
    AND             reduce using rule 54 (FL -> K OPREL K .)
    RPARENT         reduce using rule 54 (FL -> K OPREL K .)


state 108

    (55) FL -> LPARENT EL RPARENT .

    THEN            reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    LET             reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    PRINT           reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    INPUT           reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    CLS             reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    IF              reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    WHILE           reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    DO              reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    FOR             reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    GOSUB           reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    WHEND           reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    ENDO            reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    OR              reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    AND             reduce using rule 55 (FL -> LPARENT EL RPARENT .)
    RPARENT         reduce using rule 55 (FL -> LPARENT EL RPARENT .)


state 109

    (23) S -> WHILE EL X WHEND .

    SEMMICOLON      reduce using rule 23 (S -> WHILE EL X WHEND .)
    END             reduce using rule 23 (S -> WHILE EL X WHEND .)
    ENDSUB          reduce using rule 23 (S -> WHILE EL X WHEND .)
    ELSE            reduce using rule 23 (S -> WHILE EL X WHEND .)
    ENDIF           reduce using rule 23 (S -> WHILE EL X WHEND .)
    WHEND           reduce using rule 23 (S -> WHILE EL X WHEND .)
    LOOPUNTIL       reduce using rule 23 (S -> WHILE EL X WHEND .)
    NEXT            reduce using rule 23 (S -> WHILE EL X WHEND .)


state 110

    (24) S -> DO X LOOPUNTIL EL . ENDO
    (49) EL -> EL . OR TL

    ENDO            shift and go to state 121
    OR              shift and go to state 73


state 111

    (25) S -> FOR O TO E . X NEXT
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T
    (14) X -> . S R
    (15) X -> .
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 122
    S                              shift and go to state 11

state 112

    (28) O -> E ASSIGN E .
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    TO              reduce using rule 28 (O -> E ASSIGN E .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 113

    (12) SP -> SUBPROCEDURE ID V X ENDSUB . SEMMICOLON SP

    SEMMICOLON      shift and go to state 123


state 114

    (2) V -> DIM IDLIST AS TIPO SEMMICOLON V .

    SUBPROCEDURE    reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    LET             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    PRINT           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    INPUT           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    CLS             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    IF              reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    WHILE           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    DO              reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    FOR             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    GOSUB           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    END             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    ENDSUB          reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)


state 115

    (9) TIPO -> ARRAY LBRACKET E . RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 124
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 116

    (10) TIPO -> MATRIX LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 125
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 117

    (11) TIPO -> CUBE LBRACKET E . RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 126
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 118

    (30) U -> ID LBRACKET E RBRACKET .
    (31) U -> ID LBRACKET E RBRACKET . LBRACKET E RBRACKET
    (32) U -> ID LBRACKET E RBRACKET . LBRACKET E RBRACKET LBRACKET E RBRACKET

    SEMMICOLON      reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    END             reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    ENDSUB          reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    RPARENT         reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    ASSIGN          reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    LET             reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    PRINT           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    INPUT           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    CLS             reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    IF              reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    WHILE           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    DO              reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    FOR             reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    GOSUB           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    NEXT            reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    TO              reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    PLUS            reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    MINUS           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    TIMES           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    DIVIDE          reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    ELSE            reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    ENDIF           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    WHEND           reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    LOOPUNTIL       reduce using rule 30 (U -> ID LBRACKET E RBRACKET .)
    LBRACKET        shift and go to state 127


state 119

    (22) S -> IF EL THEN X ELSE1 . ENDIF

    ENDIF           shift and go to state 128


state 120

    (38) ELSE1 -> ELSE . X
    (14) X -> . S R
    (15) X -> .
    (18) S -> . LET E ASSIGN E
    (19) S -> . PRINT Q
    (20) S -> . INPUT H GTGT U
    (21) S -> . CLS
    (22) S -> . IF EL THEN X ELSE1 ENDIF
    (23) S -> . WHILE EL X WHEND
    (24) S -> . DO X LOOPUNTIL EL ENDO
    (25) S -> . FOR O TO E X NEXT
    (26) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 129
    S                              shift and go to state 11

state 121

    (24) S -> DO X LOOPUNTIL EL ENDO .

    SEMMICOLON      reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)
    END             reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)
    ENDSUB          reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)
    ELSE            reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)
    ENDIF           reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)
    WHEND           reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)
    LOOPUNTIL       reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)
    NEXT            reduce using rule 24 (S -> DO X LOOPUNTIL EL ENDO .)


state 122

    (25) S -> FOR O TO E X . NEXT

    NEXT            shift and go to state 130


state 123

    (12) SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON . SP
    (12) SP -> . SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP
    (13) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 13 (SP -> .)
    PRINT           reduce using rule 13 (SP -> .)
    INPUT           reduce using rule 13 (SP -> .)
    CLS             reduce using rule 13 (SP -> .)
    IF              reduce using rule 13 (SP -> .)
    WHILE           reduce using rule 13 (SP -> .)
    DO              reduce using rule 13 (SP -> .)
    FOR             reduce using rule 13 (SP -> .)
    GOSUB           reduce using rule 13 (SP -> .)
    END             reduce using rule 13 (SP -> .)

    SP                             shift and go to state 131

state 124

    (9) TIPO -> ARRAY LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 9 (TIPO -> ARRAY LBRACKET E RBRACKET .)


state 125

    (10) TIPO -> MATRIX LBRACKET E RBRACKET . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 132


state 126

    (11) TIPO -> CUBE LBRACKET E RBRACKET . LBRACKET E RBRACKET LBRACKET E RBRACKET

    LBRACKET        shift and go to state 133


state 127

    (31) U -> ID LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (32) U -> ID LBRACKET E RBRACKET LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 134
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 128

    (22) S -> IF EL THEN X ELSE1 ENDIF .

    SEMMICOLON      reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)
    END             reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)
    ENDSUB          reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)
    ELSE            reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)
    ENDIF           reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)
    WHEND           reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)
    LOOPUNTIL       reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)
    NEXT            reduce using rule 22 (S -> IF EL THEN X ELSE1 ENDIF .)


state 129

    (38) ELSE1 -> ELSE X .

    ENDIF           reduce using rule 38 (ELSE1 -> ELSE X .)


state 130

    (25) S -> FOR O TO E X NEXT .

    SEMMICOLON      reduce using rule 25 (S -> FOR O TO E X NEXT .)
    END             reduce using rule 25 (S -> FOR O TO E X NEXT .)
    ENDSUB          reduce using rule 25 (S -> FOR O TO E X NEXT .)
    ELSE            reduce using rule 25 (S -> FOR O TO E X NEXT .)
    ENDIF           reduce using rule 25 (S -> FOR O TO E X NEXT .)
    WHEND           reduce using rule 25 (S -> FOR O TO E X NEXT .)
    LOOPUNTIL       reduce using rule 25 (S -> FOR O TO E X NEXT .)
    NEXT            reduce using rule 25 (S -> FOR O TO E X NEXT .)


state 131

    (12) SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .

    LET             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    PRINT           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    INPUT           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    CLS             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    IF              reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    WHILE           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    DO              reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    FOR             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    GOSUB           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    END             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)


state 132

    (10) TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 135
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 133

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 136
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 134

    (31) U -> ID LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (32) U -> ID LBRACKET E RBRACKET LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 137
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 135

    (10) TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 138
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 136

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 139
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 137

    (31) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .
    (32) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET . LBRACKET E RBRACKET

    SEMMICOLON      reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    END             reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ENDSUB          reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RPARENT         reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ASSIGN          reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LET             reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PRINT           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    INPUT           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    CLS             reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    IF              reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    WHILE           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DO              reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    FOR             reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    GOSUB           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    NEXT            reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TO              reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PLUS            reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    MINUS           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TIMES           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DIVIDE          reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ELSE            reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ENDIF           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    WHEND           reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LOOPUNTIL       reduce using rule 31 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LBRACKET        shift and go to state 140


state 138

    (10) TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 10 (TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET .)


state 139

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 141


state 140

    (32) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 142
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 141

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (40) E -> . E PLUS T
    (41) E -> . E MINUS T
    (42) E -> . T
    (43) T -> . T TIMES F
    (44) T -> . T DIVIDE F
    (45) T -> . F
    (46) F -> . NUMBER
    (47) F -> . U
    (48) F -> . LPARENT E RPARENT
    (29) U -> . ID
    (30) U -> . ID LBRACKET E RBRACKET
    (31) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (32) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 30
    LPARENT         shift and go to state 32
    ID              shift and go to state 33

    E                              shift and go to state 143
    T                              shift and go to state 28
    F                              shift and go to state 29
    U                              shift and go to state 31

state 142

    (32) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 144
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 143

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (40) E -> E . PLUS T
    (41) E -> E . MINUS T

    RBRACKET        shift and go to state 145
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64


state 144

    (32) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    END             reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ENDSUB          reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RPARENT         reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ASSIGN          reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LET             reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PRINT           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    INPUT           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    CLS             reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    IF              reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    WHILE           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DO              reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    FOR             reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    GOSUB           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    NEXT            reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TO              reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PLUS            reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    MINUS           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TIMES           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DIVIDE          reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ELSE            reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ENDIF           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    WHEND           reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LOOPUNTIL       reduce using rule 32 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)


state 145

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 11 (TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)

