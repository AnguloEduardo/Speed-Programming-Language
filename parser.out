Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID V SP X END
Rule 2     V -> DIM IDLIST AS TIPO SEMMICOLON V
Rule 3     V -> <empty>
Rule 4     IDLIST -> ID
Rule 5     IDLIST -> IDLIST COMMA ID
Rule 6     IDLIST -> <empty>
Rule 7     TIPO -> WORD
Rule 8     TIPO -> FLOAT
Rule 9     TIPO -> ARRAY LBRACKET E RBRACKET
Rule 10    TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 11    TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 12    SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP
Rule 13    SP -> <empty>
Rule 14    X -> S SEMMICOLON X
Rule 15    X -> <empty>
Rule 16    S -> LET E ASSIGN E
Rule 17    S -> PRINT Q
Rule 18    S -> INPUT H GTGT U
Rule 19    S -> CLS
Rule 20    S -> IF EL THEN X ELSE1 ENDIF
Rule 21    S -> WHILE EL X WHEND
Rule 22    S -> DO X LOOPUNTIL EL ENDO
Rule 23    S -> FOR O TO E X NEXT
Rule 24    S -> GOSUB ID
Rule 25    O -> E
Rule 26    O -> E ASSIGN E
Rule 27    U -> ID
Rule 28    U -> ID LBRACKET E RBRACKET
Rule 29    U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 30    U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
Rule 31    Q -> LPARENT U RPARENT
Rule 32    Q -> TEXT
Rule 33    H -> TEXT
Rule 34    H -> <empty>
Rule 35    TEXT -> LPARENT STRING RPARENT
Rule 36    ELSE1 -> ELSE X
Rule 37    ELSE1 -> <empty>
Rule 38    E -> E PLUS T
Rule 39    E -> E MINUS T
Rule 40    E -> T
Rule 41    T -> T TIMES F
Rule 42    T -> T DIVIDE F
Rule 43    T -> F
Rule 44    F -> NUMBER
Rule 45    F -> U
Rule 46    F -> LPARENT E RPARENT
Rule 47    EL -> EL OR TL
Rule 48    EL -> NOT TL
Rule 49    EL -> TL
Rule 50    TL -> TL AND FL
Rule 51    TL -> FL
Rule 52    FL -> K OPREL K
Rule 53    FL -> LPARENT EL RPARENT
Rule 54    OPREL -> LT
Rule 55    OPREL -> LTE
Rule 56    OPREL -> GT
Rule 57    OPREL -> GTE
Rule 58    OPREL -> NE
Rule 59    OPREL -> EQUAL
Rule 60    K -> ID
Rule 61    K -> NUMBER

Terminals, with rules where they appear

AND                  : 50
ARRAY                : 9
AS                   : 2
ASSIGN               : 16 26
CLS                  : 19
COMMA                : 5
CUBE                 : 11
DIM                  : 2
DIVIDE               : 42
DO                   : 22
ELSE                 : 36
END                  : 1
ENDIF                : 20
ENDO                 : 22
ENDSUB               : 12
EQUAL                : 59
FLOAT                : 8
FOR                  : 23
GOSUB                : 24
GT                   : 56
GTE                  : 57
GTGT                 : 18
ID                   : 1 4 5 12 24 27 28 29 30 60
IF                   : 20
INPUT                : 18
LBRACKET             : 9 10 10 11 11 11 28 29 29 30 30 30
LET                  : 16
LOOPUNTIL            : 22
LPARENT              : 31 35 46 53
LT                   : 54
LTE                  : 55
MATRIX               : 10
MINUS                : 39
NE                   : 58
NEXT                 : 23
NOT                  : 48
NUMBER               : 44 61
OR                   : 47
PLUS                 : 38
PRINT                : 17
PROGRAM              : 1
RBRACKET             : 9 10 10 11 11 11 28 29 29 30 30 30
RPARENT              : 31 35 46 53
SEMMICOLON           : 2 12 14
STRING               : 35
SUBPROCEDURE         : 12
THEN                 : 20
TIMES                : 41
TO                   : 23
WHEND                : 21
WHILE                : 21
WORD                 : 7
error                : 

Nonterminals, with rules where they appear

E                    : 9 10 10 11 11 11 16 16 23 25 26 26 28 29 29 30 30 30 38 39 46
EL                   : 20 21 22 47 53
ELSE1                : 20
F                    : 41 42 43
FL                   : 50 51
H                    : 18
IDLIST               : 2 5
K                    : 52 52
O                    : 23
OPREL                : 52
Q                    : 17
S                    : 14
SP                   : 1 12
T                    : 38 39 40 41 42
TEXT                 : 32 33
TIPO                 : 2
TL                   : 47 48 49 50
U                    : 18 31 45
V                    : 1 2 12
X                    : 1 12 14 20 21 22 23 36
program              : 0

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID V SP X END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID V SP X END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . V SP X END
    (2) V -> . DIM IDLIST AS TIPO SEMMICOLON V
    (3) V -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (V -> .)
    LET             reduce using rule 3 (V -> .)
    PRINT           reduce using rule 3 (V -> .)
    INPUT           reduce using rule 3 (V -> .)
    CLS             reduce using rule 3 (V -> .)
    IF              reduce using rule 3 (V -> .)
    WHILE           reduce using rule 3 (V -> .)
    DO              reduce using rule 3 (V -> .)
    FOR             reduce using rule 3 (V -> .)
    GOSUB           reduce using rule 3 (V -> .)
    END             reduce using rule 3 (V -> .)
    ENDSUB          reduce using rule 3 (V -> .)

    V                              shift and go to state 4

state 4

    (1) program -> PROGRAM ID V . SP X END
    (12) SP -> . SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP
    (13) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 13 (SP -> .)
    PRINT           reduce using rule 13 (SP -> .)
    INPUT           reduce using rule 13 (SP -> .)
    CLS             reduce using rule 13 (SP -> .)
    IF              reduce using rule 13 (SP -> .)
    WHILE           reduce using rule 13 (SP -> .)
    DO              reduce using rule 13 (SP -> .)
    FOR             reduce using rule 13 (SP -> .)
    GOSUB           reduce using rule 13 (SP -> .)
    END             reduce using rule 13 (SP -> .)

    SP                             shift and go to state 6

state 5

    (2) V -> DIM . IDLIST AS TIPO SEMMICOLON V
    (4) IDLIST -> . ID
    (5) IDLIST -> . IDLIST COMMA ID
    (6) IDLIST -> .

    ID              shift and go to state 9
    AS              reduce using rule 6 (IDLIST -> .)
    COMMA           reduce using rule 6 (IDLIST -> .)

    IDLIST                         shift and go to state 8

state 6

    (1) program -> PROGRAM ID V SP . X END
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 10
    S                              shift and go to state 11

state 7

    (12) SP -> SUBPROCEDURE . ID V X ENDSUB SEMMICOLON SP

    ID              shift and go to state 21


state 8

    (2) V -> DIM IDLIST . AS TIPO SEMMICOLON V
    (5) IDLIST -> IDLIST . COMMA ID

    AS              shift and go to state 22
    COMMA           shift and go to state 23


state 9

    (4) IDLIST -> ID .

    AS              reduce using rule 4 (IDLIST -> ID .)
    COMMA           reduce using rule 4 (IDLIST -> ID .)


state 10

    (1) program -> PROGRAM ID V SP X . END

    END             shift and go to state 24


state 11

    (14) X -> S . SEMMICOLON X

    SEMMICOLON      shift and go to state 25


state 12

    (16) S -> LET . E ASSIGN E
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 26
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 13

    (17) S -> PRINT . Q
    (31) Q -> . LPARENT U RPARENT
    (32) Q -> . TEXT
    (35) TEXT -> . LPARENT STRING RPARENT

    LPARENT         shift and go to state 34

    Q                              shift and go to state 33
    TEXT                           shift and go to state 35

state 14

    (18) S -> INPUT . H GTGT U
    (33) H -> . TEXT
    (34) H -> .
    (35) TEXT -> . LPARENT STRING RPARENT

    GTGT            reduce using rule 34 (H -> .)
    LPARENT         shift and go to state 38

    H                              shift and go to state 36
    TEXT                           shift and go to state 37

state 15

    (19) S -> CLS .

    SEMMICOLON      reduce using rule 19 (S -> CLS .)


state 16

    (20) S -> IF . EL THEN X ELSE1 ENDIF
    (47) EL -> . EL OR TL
    (48) EL -> . NOT TL
    (49) EL -> . TL
    (50) TL -> . TL AND FL
    (51) TL -> . FL
    (52) FL -> . K OPREL K
    (53) FL -> . LPARENT EL RPARENT
    (60) K -> . ID
    (61) K -> . NUMBER

    NOT             shift and go to state 41
    LPARENT         shift and go to state 44
    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    EL                             shift and go to state 39
    TL                             shift and go to state 40
    FL                             shift and go to state 42
    K                              shift and go to state 43

state 17

    (21) S -> WHILE . EL X WHEND
    (47) EL -> . EL OR TL
    (48) EL -> . NOT TL
    (49) EL -> . TL
    (50) TL -> . TL AND FL
    (51) TL -> . FL
    (52) FL -> . K OPREL K
    (53) FL -> . LPARENT EL RPARENT
    (60) K -> . ID
    (61) K -> . NUMBER

    NOT             shift and go to state 41
    LPARENT         shift and go to state 44
    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    EL                             shift and go to state 47
    TL                             shift and go to state 40
    FL                             shift and go to state 42
    K                              shift and go to state 43

state 18

    (22) S -> DO . X LOOPUNTIL EL ENDO
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 48
    S                              shift and go to state 11

state 19

    (23) S -> FOR . O TO E X NEXT
    (25) O -> . E
    (26) O -> . E ASSIGN E
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    O                              shift and go to state 49
    E                              shift and go to state 50
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 20

    (24) S -> GOSUB . ID

    ID              shift and go to state 51


state 21

    (12) SP -> SUBPROCEDURE ID . V X ENDSUB SEMMICOLON SP
    (2) V -> . DIM IDLIST AS TIPO SEMMICOLON V
    (3) V -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (V -> .)
    LET             reduce using rule 3 (V -> .)
    PRINT           reduce using rule 3 (V -> .)
    INPUT           reduce using rule 3 (V -> .)
    CLS             reduce using rule 3 (V -> .)
    IF              reduce using rule 3 (V -> .)
    WHILE           reduce using rule 3 (V -> .)
    DO              reduce using rule 3 (V -> .)
    FOR             reduce using rule 3 (V -> .)
    GOSUB           reduce using rule 3 (V -> .)
    END             reduce using rule 3 (V -> .)
    ENDSUB          reduce using rule 3 (V -> .)

    V                              shift and go to state 52

state 22

    (2) V -> DIM IDLIST AS . TIPO SEMMICOLON V
    (7) TIPO -> . WORD
    (8) TIPO -> . FLOAT
    (9) TIPO -> . ARRAY LBRACKET E RBRACKET
    (10) TIPO -> . MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET
    (11) TIPO -> . CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    WORD            shift and go to state 54
    FLOAT           shift and go to state 55
    ARRAY           shift and go to state 56
    MATRIX          shift and go to state 57
    CUBE            shift and go to state 58

    TIPO                           shift and go to state 53

state 23

    (5) IDLIST -> IDLIST COMMA . ID

    ID              shift and go to state 59


state 24

    (1) program -> PROGRAM ID V SP X END .

    $end            reduce using rule 1 (program -> PROGRAM ID V SP X END .)


state 25

    (14) X -> S SEMMICOLON . X
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    S                              shift and go to state 11
    X                              shift and go to state 60

state 26

    (16) S -> LET E . ASSIGN E
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    ASSIGN          shift and go to state 61
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 27

    (40) E -> T .
    (41) T -> T . TIMES F
    (42) T -> T . DIVIDE F

    RBRACKET        reduce using rule 40 (E -> T .)
    ASSIGN          reduce using rule 40 (E -> T .)
    SEMMICOLON      reduce using rule 40 (E -> T .)
    LET             reduce using rule 40 (E -> T .)
    PRINT           reduce using rule 40 (E -> T .)
    INPUT           reduce using rule 40 (E -> T .)
    CLS             reduce using rule 40 (E -> T .)
    IF              reduce using rule 40 (E -> T .)
    WHILE           reduce using rule 40 (E -> T .)
    DO              reduce using rule 40 (E -> T .)
    FOR             reduce using rule 40 (E -> T .)
    GOSUB           reduce using rule 40 (E -> T .)
    NEXT            reduce using rule 40 (E -> T .)
    TO              reduce using rule 40 (E -> T .)
    PLUS            reduce using rule 40 (E -> T .)
    MINUS           reduce using rule 40 (E -> T .)
    RPARENT         reduce using rule 40 (E -> T .)
    TIMES           shift and go to state 64
    DIVIDE          shift and go to state 65


state 28

    (43) T -> F .

    RBRACKET        reduce using rule 43 (T -> F .)
    ASSIGN          reduce using rule 43 (T -> F .)
    SEMMICOLON      reduce using rule 43 (T -> F .)
    LET             reduce using rule 43 (T -> F .)
    PRINT           reduce using rule 43 (T -> F .)
    INPUT           reduce using rule 43 (T -> F .)
    CLS             reduce using rule 43 (T -> F .)
    IF              reduce using rule 43 (T -> F .)
    WHILE           reduce using rule 43 (T -> F .)
    DO              reduce using rule 43 (T -> F .)
    FOR             reduce using rule 43 (T -> F .)
    GOSUB           reduce using rule 43 (T -> F .)
    NEXT            reduce using rule 43 (T -> F .)
    TO              reduce using rule 43 (T -> F .)
    PLUS            reduce using rule 43 (T -> F .)
    MINUS           reduce using rule 43 (T -> F .)
    TIMES           reduce using rule 43 (T -> F .)
    DIVIDE          reduce using rule 43 (T -> F .)
    RPARENT         reduce using rule 43 (T -> F .)


state 29

    (44) F -> NUMBER .

    RBRACKET        reduce using rule 44 (F -> NUMBER .)
    ASSIGN          reduce using rule 44 (F -> NUMBER .)
    SEMMICOLON      reduce using rule 44 (F -> NUMBER .)
    LET             reduce using rule 44 (F -> NUMBER .)
    PRINT           reduce using rule 44 (F -> NUMBER .)
    INPUT           reduce using rule 44 (F -> NUMBER .)
    CLS             reduce using rule 44 (F -> NUMBER .)
    IF              reduce using rule 44 (F -> NUMBER .)
    WHILE           reduce using rule 44 (F -> NUMBER .)
    DO              reduce using rule 44 (F -> NUMBER .)
    FOR             reduce using rule 44 (F -> NUMBER .)
    GOSUB           reduce using rule 44 (F -> NUMBER .)
    NEXT            reduce using rule 44 (F -> NUMBER .)
    TO              reduce using rule 44 (F -> NUMBER .)
    PLUS            reduce using rule 44 (F -> NUMBER .)
    MINUS           reduce using rule 44 (F -> NUMBER .)
    TIMES           reduce using rule 44 (F -> NUMBER .)
    DIVIDE          reduce using rule 44 (F -> NUMBER .)
    RPARENT         reduce using rule 44 (F -> NUMBER .)


state 30

    (45) F -> U .

    RBRACKET        reduce using rule 45 (F -> U .)
    ASSIGN          reduce using rule 45 (F -> U .)
    SEMMICOLON      reduce using rule 45 (F -> U .)
    LET             reduce using rule 45 (F -> U .)
    PRINT           reduce using rule 45 (F -> U .)
    INPUT           reduce using rule 45 (F -> U .)
    CLS             reduce using rule 45 (F -> U .)
    IF              reduce using rule 45 (F -> U .)
    WHILE           reduce using rule 45 (F -> U .)
    DO              reduce using rule 45 (F -> U .)
    FOR             reduce using rule 45 (F -> U .)
    GOSUB           reduce using rule 45 (F -> U .)
    NEXT            reduce using rule 45 (F -> U .)
    TO              reduce using rule 45 (F -> U .)
    PLUS            reduce using rule 45 (F -> U .)
    MINUS           reduce using rule 45 (F -> U .)
    TIMES           reduce using rule 45 (F -> U .)
    DIVIDE          reduce using rule 45 (F -> U .)
    RPARENT         reduce using rule 45 (F -> U .)


state 31

    (46) F -> LPARENT . E RPARENT
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 66
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 32

    (27) U -> ID .
    (28) U -> ID . LBRACKET E RBRACKET
    (29) U -> ID . LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> ID . LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    SEMMICOLON      reduce using rule 27 (U -> ID .)
    RPARENT         reduce using rule 27 (U -> ID .)
    RBRACKET        reduce using rule 27 (U -> ID .)
    ASSIGN          reduce using rule 27 (U -> ID .)
    LET             reduce using rule 27 (U -> ID .)
    PRINT           reduce using rule 27 (U -> ID .)
    INPUT           reduce using rule 27 (U -> ID .)
    CLS             reduce using rule 27 (U -> ID .)
    IF              reduce using rule 27 (U -> ID .)
    WHILE           reduce using rule 27 (U -> ID .)
    DO              reduce using rule 27 (U -> ID .)
    FOR             reduce using rule 27 (U -> ID .)
    GOSUB           reduce using rule 27 (U -> ID .)
    NEXT            reduce using rule 27 (U -> ID .)
    TO              reduce using rule 27 (U -> ID .)
    PLUS            reduce using rule 27 (U -> ID .)
    MINUS           reduce using rule 27 (U -> ID .)
    TIMES           reduce using rule 27 (U -> ID .)
    DIVIDE          reduce using rule 27 (U -> ID .)
    LBRACKET        shift and go to state 67


state 33

    (17) S -> PRINT Q .

    SEMMICOLON      reduce using rule 17 (S -> PRINT Q .)


state 34

    (31) Q -> LPARENT . U RPARENT
    (35) TEXT -> LPARENT . STRING RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    STRING          shift and go to state 69
    ID              shift and go to state 32

    U                              shift and go to state 68

state 35

    (32) Q -> TEXT .

    SEMMICOLON      reduce using rule 32 (Q -> TEXT .)


state 36

    (18) S -> INPUT H . GTGT U

    GTGT            shift and go to state 70


state 37

    (33) H -> TEXT .

    GTGT            reduce using rule 33 (H -> TEXT .)


state 38

    (35) TEXT -> LPARENT . STRING RPARENT

    STRING          shift and go to state 69


state 39

    (20) S -> IF EL . THEN X ELSE1 ENDIF
    (47) EL -> EL . OR TL

    THEN            shift and go to state 71
    OR              shift and go to state 72


state 40

    (49) EL -> TL .
    (50) TL -> TL . AND FL

    THEN            reduce using rule 49 (EL -> TL .)
    LET             reduce using rule 49 (EL -> TL .)
    PRINT           reduce using rule 49 (EL -> TL .)
    INPUT           reduce using rule 49 (EL -> TL .)
    CLS             reduce using rule 49 (EL -> TL .)
    IF              reduce using rule 49 (EL -> TL .)
    WHILE           reduce using rule 49 (EL -> TL .)
    DO              reduce using rule 49 (EL -> TL .)
    FOR             reduce using rule 49 (EL -> TL .)
    GOSUB           reduce using rule 49 (EL -> TL .)
    WHEND           reduce using rule 49 (EL -> TL .)
    ENDO            reduce using rule 49 (EL -> TL .)
    OR              reduce using rule 49 (EL -> TL .)
    RPARENT         reduce using rule 49 (EL -> TL .)
    AND             shift and go to state 73


state 41

    (48) EL -> NOT . TL
    (50) TL -> . TL AND FL
    (51) TL -> . FL
    (52) FL -> . K OPREL K
    (53) FL -> . LPARENT EL RPARENT
    (60) K -> . ID
    (61) K -> . NUMBER

    LPARENT         shift and go to state 44
    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    TL                             shift and go to state 74
    FL                             shift and go to state 42
    K                              shift and go to state 43

state 42

    (51) TL -> FL .

    THEN            reduce using rule 51 (TL -> FL .)
    LET             reduce using rule 51 (TL -> FL .)
    PRINT           reduce using rule 51 (TL -> FL .)
    INPUT           reduce using rule 51 (TL -> FL .)
    CLS             reduce using rule 51 (TL -> FL .)
    IF              reduce using rule 51 (TL -> FL .)
    WHILE           reduce using rule 51 (TL -> FL .)
    DO              reduce using rule 51 (TL -> FL .)
    FOR             reduce using rule 51 (TL -> FL .)
    GOSUB           reduce using rule 51 (TL -> FL .)
    WHEND           reduce using rule 51 (TL -> FL .)
    ENDO            reduce using rule 51 (TL -> FL .)
    OR              reduce using rule 51 (TL -> FL .)
    AND             reduce using rule 51 (TL -> FL .)
    RPARENT         reduce using rule 51 (TL -> FL .)


state 43

    (52) FL -> K . OPREL K
    (54) OPREL -> . LT
    (55) OPREL -> . LTE
    (56) OPREL -> . GT
    (57) OPREL -> . GTE
    (58) OPREL -> . NE
    (59) OPREL -> . EQUAL

    LT              shift and go to state 76
    LTE             shift and go to state 77
    GT              shift and go to state 78
    GTE             shift and go to state 79
    NE              shift and go to state 80
    EQUAL           shift and go to state 81

    OPREL                          shift and go to state 75

state 44

    (53) FL -> LPARENT . EL RPARENT
    (47) EL -> . EL OR TL
    (48) EL -> . NOT TL
    (49) EL -> . TL
    (50) TL -> . TL AND FL
    (51) TL -> . FL
    (52) FL -> . K OPREL K
    (53) FL -> . LPARENT EL RPARENT
    (60) K -> . ID
    (61) K -> . NUMBER

    NOT             shift and go to state 41
    LPARENT         shift and go to state 44
    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    EL                             shift and go to state 82
    TL                             shift and go to state 40
    FL                             shift and go to state 42
    K                              shift and go to state 43

state 45

    (60) K -> ID .

    LT              reduce using rule 60 (K -> ID .)
    LTE             reduce using rule 60 (K -> ID .)
    GT              reduce using rule 60 (K -> ID .)
    GTE             reduce using rule 60 (K -> ID .)
    NE              reduce using rule 60 (K -> ID .)
    EQUAL           reduce using rule 60 (K -> ID .)
    THEN            reduce using rule 60 (K -> ID .)
    LET             reduce using rule 60 (K -> ID .)
    PRINT           reduce using rule 60 (K -> ID .)
    INPUT           reduce using rule 60 (K -> ID .)
    CLS             reduce using rule 60 (K -> ID .)
    IF              reduce using rule 60 (K -> ID .)
    WHILE           reduce using rule 60 (K -> ID .)
    DO              reduce using rule 60 (K -> ID .)
    FOR             reduce using rule 60 (K -> ID .)
    GOSUB           reduce using rule 60 (K -> ID .)
    WHEND           reduce using rule 60 (K -> ID .)
    ENDO            reduce using rule 60 (K -> ID .)
    OR              reduce using rule 60 (K -> ID .)
    AND             reduce using rule 60 (K -> ID .)
    RPARENT         reduce using rule 60 (K -> ID .)


state 46

    (61) K -> NUMBER .

    LT              reduce using rule 61 (K -> NUMBER .)
    LTE             reduce using rule 61 (K -> NUMBER .)
    GT              reduce using rule 61 (K -> NUMBER .)
    GTE             reduce using rule 61 (K -> NUMBER .)
    NE              reduce using rule 61 (K -> NUMBER .)
    EQUAL           reduce using rule 61 (K -> NUMBER .)
    THEN            reduce using rule 61 (K -> NUMBER .)
    LET             reduce using rule 61 (K -> NUMBER .)
    PRINT           reduce using rule 61 (K -> NUMBER .)
    INPUT           reduce using rule 61 (K -> NUMBER .)
    CLS             reduce using rule 61 (K -> NUMBER .)
    IF              reduce using rule 61 (K -> NUMBER .)
    WHILE           reduce using rule 61 (K -> NUMBER .)
    DO              reduce using rule 61 (K -> NUMBER .)
    FOR             reduce using rule 61 (K -> NUMBER .)
    GOSUB           reduce using rule 61 (K -> NUMBER .)
    WHEND           reduce using rule 61 (K -> NUMBER .)
    ENDO            reduce using rule 61 (K -> NUMBER .)
    OR              reduce using rule 61 (K -> NUMBER .)
    AND             reduce using rule 61 (K -> NUMBER .)
    RPARENT         reduce using rule 61 (K -> NUMBER .)


state 47

    (21) S -> WHILE EL . X WHEND
    (47) EL -> EL . OR TL
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    OR              shift and go to state 72
    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 83
    S                              shift and go to state 11

state 48

    (22) S -> DO X . LOOPUNTIL EL ENDO

    LOOPUNTIL       shift and go to state 84


state 49

    (23) S -> FOR O . TO E X NEXT

    TO              shift and go to state 85


state 50

    (25) O -> E .
    (26) O -> E . ASSIGN E
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    TO              reduce using rule 25 (O -> E .)
    ASSIGN          shift and go to state 86
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 51

    (24) S -> GOSUB ID .

    SEMMICOLON      reduce using rule 24 (S -> GOSUB ID .)


state 52

    (12) SP -> SUBPROCEDURE ID V . X ENDSUB SEMMICOLON SP
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 87
    S                              shift and go to state 11

state 53

    (2) V -> DIM IDLIST AS TIPO . SEMMICOLON V

    SEMMICOLON      shift and go to state 88


state 54

    (7) TIPO -> WORD .

    SEMMICOLON      reduce using rule 7 (TIPO -> WORD .)


state 55

    (8) TIPO -> FLOAT .

    SEMMICOLON      reduce using rule 8 (TIPO -> FLOAT .)


state 56

    (9) TIPO -> ARRAY . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 89


state 57

    (10) TIPO -> MATRIX . LBRACKET E RBRACKET LBRACKET E RBRACKET

    LBRACKET        shift and go to state 90


state 58

    (11) TIPO -> CUBE . LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    LBRACKET        shift and go to state 91


state 59

    (5) IDLIST -> IDLIST COMMA ID .

    AS              reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)
    COMMA           reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)


state 60

    (14) X -> S SEMMICOLON X .

    END             reduce using rule 14 (X -> S SEMMICOLON X .)
    ENDSUB          reduce using rule 14 (X -> S SEMMICOLON X .)
    ELSE            reduce using rule 14 (X -> S SEMMICOLON X .)
    ENDIF           reduce using rule 14 (X -> S SEMMICOLON X .)
    WHEND           reduce using rule 14 (X -> S SEMMICOLON X .)
    LOOPUNTIL       reduce using rule 14 (X -> S SEMMICOLON X .)
    NEXT            reduce using rule 14 (X -> S SEMMICOLON X .)


state 61

    (16) S -> LET E ASSIGN . E
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 92
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 62

    (38) E -> E PLUS . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    T                              shift and go to state 93
    F                              shift and go to state 28
    U                              shift and go to state 30

state 63

    (39) E -> E MINUS . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    T                              shift and go to state 94
    F                              shift and go to state 28
    U                              shift and go to state 30

state 64

    (41) T -> T TIMES . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    F                              shift and go to state 95
    U                              shift and go to state 30

state 65

    (42) T -> T DIVIDE . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    F                              shift and go to state 96
    U                              shift and go to state 30

state 66

    (46) F -> LPARENT E . RPARENT
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RPARENT         shift and go to state 97
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 67

    (28) U -> ID LBRACKET . E RBRACKET
    (29) U -> ID LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (30) U -> ID LBRACKET . E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 98
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 68

    (31) Q -> LPARENT U . RPARENT

    RPARENT         shift and go to state 99


state 69

    (35) TEXT -> LPARENT STRING . RPARENT

    RPARENT         shift and go to state 100


state 70

    (18) S -> INPUT H GTGT . U
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    ID              shift and go to state 32

    U                              shift and go to state 101

state 71

    (20) S -> IF EL THEN . X ELSE1 ENDIF
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 102
    S                              shift and go to state 11

state 72

    (47) EL -> EL OR . TL
    (50) TL -> . TL AND FL
    (51) TL -> . FL
    (52) FL -> . K OPREL K
    (53) FL -> . LPARENT EL RPARENT
    (60) K -> . ID
    (61) K -> . NUMBER

    LPARENT         shift and go to state 44
    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    TL                             shift and go to state 103
    FL                             shift and go to state 42
    K                              shift and go to state 43

state 73

    (50) TL -> TL AND . FL
    (52) FL -> . K OPREL K
    (53) FL -> . LPARENT EL RPARENT
    (60) K -> . ID
    (61) K -> . NUMBER

    LPARENT         shift and go to state 44
    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    FL                             shift and go to state 104
    K                              shift and go to state 43

state 74

    (48) EL -> NOT TL .
    (50) TL -> TL . AND FL

    THEN            reduce using rule 48 (EL -> NOT TL .)
    LET             reduce using rule 48 (EL -> NOT TL .)
    PRINT           reduce using rule 48 (EL -> NOT TL .)
    INPUT           reduce using rule 48 (EL -> NOT TL .)
    CLS             reduce using rule 48 (EL -> NOT TL .)
    IF              reduce using rule 48 (EL -> NOT TL .)
    WHILE           reduce using rule 48 (EL -> NOT TL .)
    DO              reduce using rule 48 (EL -> NOT TL .)
    FOR             reduce using rule 48 (EL -> NOT TL .)
    GOSUB           reduce using rule 48 (EL -> NOT TL .)
    WHEND           reduce using rule 48 (EL -> NOT TL .)
    ENDO            reduce using rule 48 (EL -> NOT TL .)
    OR              reduce using rule 48 (EL -> NOT TL .)
    RPARENT         reduce using rule 48 (EL -> NOT TL .)
    AND             shift and go to state 73


state 75

    (52) FL -> K OPREL . K
    (60) K -> . ID
    (61) K -> . NUMBER

    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    K                              shift and go to state 105

state 76

    (54) OPREL -> LT .

    ID              reduce using rule 54 (OPREL -> LT .)
    NUMBER          reduce using rule 54 (OPREL -> LT .)


state 77

    (55) OPREL -> LTE .

    ID              reduce using rule 55 (OPREL -> LTE .)
    NUMBER          reduce using rule 55 (OPREL -> LTE .)


state 78

    (56) OPREL -> GT .

    ID              reduce using rule 56 (OPREL -> GT .)
    NUMBER          reduce using rule 56 (OPREL -> GT .)


state 79

    (57) OPREL -> GTE .

    ID              reduce using rule 57 (OPREL -> GTE .)
    NUMBER          reduce using rule 57 (OPREL -> GTE .)


state 80

    (58) OPREL -> NE .

    ID              reduce using rule 58 (OPREL -> NE .)
    NUMBER          reduce using rule 58 (OPREL -> NE .)


state 81

    (59) OPREL -> EQUAL .

    ID              reduce using rule 59 (OPREL -> EQUAL .)
    NUMBER          reduce using rule 59 (OPREL -> EQUAL .)


state 82

    (53) FL -> LPARENT EL . RPARENT
    (47) EL -> EL . OR TL

    RPARENT         shift and go to state 106
    OR              shift and go to state 72


state 83

    (21) S -> WHILE EL X . WHEND

    WHEND           shift and go to state 107


state 84

    (22) S -> DO X LOOPUNTIL . EL ENDO
    (47) EL -> . EL OR TL
    (48) EL -> . NOT TL
    (49) EL -> . TL
    (50) TL -> . TL AND FL
    (51) TL -> . FL
    (52) FL -> . K OPREL K
    (53) FL -> . LPARENT EL RPARENT
    (60) K -> . ID
    (61) K -> . NUMBER

    NOT             shift and go to state 41
    LPARENT         shift and go to state 44
    ID              shift and go to state 45
    NUMBER          shift and go to state 46

    EL                             shift and go to state 108
    TL                             shift and go to state 40
    FL                             shift and go to state 42
    K                              shift and go to state 43

state 85

    (23) S -> FOR O TO . E X NEXT
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 109
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 86

    (26) O -> E ASSIGN . E
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 110
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 87

    (12) SP -> SUBPROCEDURE ID V X . ENDSUB SEMMICOLON SP

    ENDSUB          shift and go to state 111


state 88

    (2) V -> DIM IDLIST AS TIPO SEMMICOLON . V
    (2) V -> . DIM IDLIST AS TIPO SEMMICOLON V
    (3) V -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (V -> .)
    LET             reduce using rule 3 (V -> .)
    PRINT           reduce using rule 3 (V -> .)
    INPUT           reduce using rule 3 (V -> .)
    CLS             reduce using rule 3 (V -> .)
    IF              reduce using rule 3 (V -> .)
    WHILE           reduce using rule 3 (V -> .)
    DO              reduce using rule 3 (V -> .)
    FOR             reduce using rule 3 (V -> .)
    GOSUB           reduce using rule 3 (V -> .)
    END             reduce using rule 3 (V -> .)
    ENDSUB          reduce using rule 3 (V -> .)

    V                              shift and go to state 112

state 89

    (9) TIPO -> ARRAY LBRACKET . E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 113
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 90

    (10) TIPO -> MATRIX LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 114
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 91

    (11) TIPO -> CUBE LBRACKET . E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 115
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 92

    (16) S -> LET E ASSIGN E .
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    SEMMICOLON      reduce using rule 16 (S -> LET E ASSIGN E .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 93

    (38) E -> E PLUS T .
    (41) T -> T . TIMES F
    (42) T -> T . DIVIDE F

    RBRACKET        reduce using rule 38 (E -> E PLUS T .)
    ASSIGN          reduce using rule 38 (E -> E PLUS T .)
    SEMMICOLON      reduce using rule 38 (E -> E PLUS T .)
    LET             reduce using rule 38 (E -> E PLUS T .)
    PRINT           reduce using rule 38 (E -> E PLUS T .)
    INPUT           reduce using rule 38 (E -> E PLUS T .)
    CLS             reduce using rule 38 (E -> E PLUS T .)
    IF              reduce using rule 38 (E -> E PLUS T .)
    WHILE           reduce using rule 38 (E -> E PLUS T .)
    DO              reduce using rule 38 (E -> E PLUS T .)
    FOR             reduce using rule 38 (E -> E PLUS T .)
    GOSUB           reduce using rule 38 (E -> E PLUS T .)
    NEXT            reduce using rule 38 (E -> E PLUS T .)
    TO              reduce using rule 38 (E -> E PLUS T .)
    PLUS            reduce using rule 38 (E -> E PLUS T .)
    MINUS           reduce using rule 38 (E -> E PLUS T .)
    RPARENT         reduce using rule 38 (E -> E PLUS T .)
    TIMES           shift and go to state 64
    DIVIDE          shift and go to state 65


state 94

    (39) E -> E MINUS T .
    (41) T -> T . TIMES F
    (42) T -> T . DIVIDE F

    RBRACKET        reduce using rule 39 (E -> E MINUS T .)
    ASSIGN          reduce using rule 39 (E -> E MINUS T .)
    SEMMICOLON      reduce using rule 39 (E -> E MINUS T .)
    LET             reduce using rule 39 (E -> E MINUS T .)
    PRINT           reduce using rule 39 (E -> E MINUS T .)
    INPUT           reduce using rule 39 (E -> E MINUS T .)
    CLS             reduce using rule 39 (E -> E MINUS T .)
    IF              reduce using rule 39 (E -> E MINUS T .)
    WHILE           reduce using rule 39 (E -> E MINUS T .)
    DO              reduce using rule 39 (E -> E MINUS T .)
    FOR             reduce using rule 39 (E -> E MINUS T .)
    GOSUB           reduce using rule 39 (E -> E MINUS T .)
    NEXT            reduce using rule 39 (E -> E MINUS T .)
    TO              reduce using rule 39 (E -> E MINUS T .)
    PLUS            reduce using rule 39 (E -> E MINUS T .)
    MINUS           reduce using rule 39 (E -> E MINUS T .)
    RPARENT         reduce using rule 39 (E -> E MINUS T .)
    TIMES           shift and go to state 64
    DIVIDE          shift and go to state 65


state 95

    (41) T -> T TIMES F .

    RBRACKET        reduce using rule 41 (T -> T TIMES F .)
    ASSIGN          reduce using rule 41 (T -> T TIMES F .)
    SEMMICOLON      reduce using rule 41 (T -> T TIMES F .)
    LET             reduce using rule 41 (T -> T TIMES F .)
    PRINT           reduce using rule 41 (T -> T TIMES F .)
    INPUT           reduce using rule 41 (T -> T TIMES F .)
    CLS             reduce using rule 41 (T -> T TIMES F .)
    IF              reduce using rule 41 (T -> T TIMES F .)
    WHILE           reduce using rule 41 (T -> T TIMES F .)
    DO              reduce using rule 41 (T -> T TIMES F .)
    FOR             reduce using rule 41 (T -> T TIMES F .)
    GOSUB           reduce using rule 41 (T -> T TIMES F .)
    NEXT            reduce using rule 41 (T -> T TIMES F .)
    TO              reduce using rule 41 (T -> T TIMES F .)
    PLUS            reduce using rule 41 (T -> T TIMES F .)
    MINUS           reduce using rule 41 (T -> T TIMES F .)
    TIMES           reduce using rule 41 (T -> T TIMES F .)
    DIVIDE          reduce using rule 41 (T -> T TIMES F .)
    RPARENT         reduce using rule 41 (T -> T TIMES F .)


state 96

    (42) T -> T DIVIDE F .

    RBRACKET        reduce using rule 42 (T -> T DIVIDE F .)
    ASSIGN          reduce using rule 42 (T -> T DIVIDE F .)
    SEMMICOLON      reduce using rule 42 (T -> T DIVIDE F .)
    LET             reduce using rule 42 (T -> T DIVIDE F .)
    PRINT           reduce using rule 42 (T -> T DIVIDE F .)
    INPUT           reduce using rule 42 (T -> T DIVIDE F .)
    CLS             reduce using rule 42 (T -> T DIVIDE F .)
    IF              reduce using rule 42 (T -> T DIVIDE F .)
    WHILE           reduce using rule 42 (T -> T DIVIDE F .)
    DO              reduce using rule 42 (T -> T DIVIDE F .)
    FOR             reduce using rule 42 (T -> T DIVIDE F .)
    GOSUB           reduce using rule 42 (T -> T DIVIDE F .)
    NEXT            reduce using rule 42 (T -> T DIVIDE F .)
    TO              reduce using rule 42 (T -> T DIVIDE F .)
    PLUS            reduce using rule 42 (T -> T DIVIDE F .)
    MINUS           reduce using rule 42 (T -> T DIVIDE F .)
    TIMES           reduce using rule 42 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 42 (T -> T DIVIDE F .)
    RPARENT         reduce using rule 42 (T -> T DIVIDE F .)


state 97

    (46) F -> LPARENT E RPARENT .

    RBRACKET        reduce using rule 46 (F -> LPARENT E RPARENT .)
    ASSIGN          reduce using rule 46 (F -> LPARENT E RPARENT .)
    SEMMICOLON      reduce using rule 46 (F -> LPARENT E RPARENT .)
    LET             reduce using rule 46 (F -> LPARENT E RPARENT .)
    PRINT           reduce using rule 46 (F -> LPARENT E RPARENT .)
    INPUT           reduce using rule 46 (F -> LPARENT E RPARENT .)
    CLS             reduce using rule 46 (F -> LPARENT E RPARENT .)
    IF              reduce using rule 46 (F -> LPARENT E RPARENT .)
    WHILE           reduce using rule 46 (F -> LPARENT E RPARENT .)
    DO              reduce using rule 46 (F -> LPARENT E RPARENT .)
    FOR             reduce using rule 46 (F -> LPARENT E RPARENT .)
    GOSUB           reduce using rule 46 (F -> LPARENT E RPARENT .)
    NEXT            reduce using rule 46 (F -> LPARENT E RPARENT .)
    TO              reduce using rule 46 (F -> LPARENT E RPARENT .)
    PLUS            reduce using rule 46 (F -> LPARENT E RPARENT .)
    MINUS           reduce using rule 46 (F -> LPARENT E RPARENT .)
    TIMES           reduce using rule 46 (F -> LPARENT E RPARENT .)
    DIVIDE          reduce using rule 46 (F -> LPARENT E RPARENT .)
    RPARENT         reduce using rule 46 (F -> LPARENT E RPARENT .)


state 98

    (28) U -> ID LBRACKET E . RBRACKET
    (29) U -> ID LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (30) U -> ID LBRACKET E . RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 116
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 99

    (31) Q -> LPARENT U RPARENT .

    SEMMICOLON      reduce using rule 31 (Q -> LPARENT U RPARENT .)


state 100

    (35) TEXT -> LPARENT STRING RPARENT .

    SEMMICOLON      reduce using rule 35 (TEXT -> LPARENT STRING RPARENT .)
    GTGT            reduce using rule 35 (TEXT -> LPARENT STRING RPARENT .)


state 101

    (18) S -> INPUT H GTGT U .

    SEMMICOLON      reduce using rule 18 (S -> INPUT H GTGT U .)


state 102

    (20) S -> IF EL THEN X . ELSE1 ENDIF
    (36) ELSE1 -> . ELSE X
    (37) ELSE1 -> .

    ELSE            shift and go to state 118
    ENDIF           reduce using rule 37 (ELSE1 -> .)

    ELSE1                          shift and go to state 117

state 103

    (47) EL -> EL OR TL .
    (50) TL -> TL . AND FL

    THEN            reduce using rule 47 (EL -> EL OR TL .)
    LET             reduce using rule 47 (EL -> EL OR TL .)
    PRINT           reduce using rule 47 (EL -> EL OR TL .)
    INPUT           reduce using rule 47 (EL -> EL OR TL .)
    CLS             reduce using rule 47 (EL -> EL OR TL .)
    IF              reduce using rule 47 (EL -> EL OR TL .)
    WHILE           reduce using rule 47 (EL -> EL OR TL .)
    DO              reduce using rule 47 (EL -> EL OR TL .)
    FOR             reduce using rule 47 (EL -> EL OR TL .)
    GOSUB           reduce using rule 47 (EL -> EL OR TL .)
    WHEND           reduce using rule 47 (EL -> EL OR TL .)
    ENDO            reduce using rule 47 (EL -> EL OR TL .)
    OR              reduce using rule 47 (EL -> EL OR TL .)
    RPARENT         reduce using rule 47 (EL -> EL OR TL .)
    AND             shift and go to state 73


state 104

    (50) TL -> TL AND FL .

    THEN            reduce using rule 50 (TL -> TL AND FL .)
    LET             reduce using rule 50 (TL -> TL AND FL .)
    PRINT           reduce using rule 50 (TL -> TL AND FL .)
    INPUT           reduce using rule 50 (TL -> TL AND FL .)
    CLS             reduce using rule 50 (TL -> TL AND FL .)
    IF              reduce using rule 50 (TL -> TL AND FL .)
    WHILE           reduce using rule 50 (TL -> TL AND FL .)
    DO              reduce using rule 50 (TL -> TL AND FL .)
    FOR             reduce using rule 50 (TL -> TL AND FL .)
    GOSUB           reduce using rule 50 (TL -> TL AND FL .)
    WHEND           reduce using rule 50 (TL -> TL AND FL .)
    ENDO            reduce using rule 50 (TL -> TL AND FL .)
    OR              reduce using rule 50 (TL -> TL AND FL .)
    AND             reduce using rule 50 (TL -> TL AND FL .)
    RPARENT         reduce using rule 50 (TL -> TL AND FL .)


state 105

    (52) FL -> K OPREL K .

    THEN            reduce using rule 52 (FL -> K OPREL K .)
    LET             reduce using rule 52 (FL -> K OPREL K .)
    PRINT           reduce using rule 52 (FL -> K OPREL K .)
    INPUT           reduce using rule 52 (FL -> K OPREL K .)
    CLS             reduce using rule 52 (FL -> K OPREL K .)
    IF              reduce using rule 52 (FL -> K OPREL K .)
    WHILE           reduce using rule 52 (FL -> K OPREL K .)
    DO              reduce using rule 52 (FL -> K OPREL K .)
    FOR             reduce using rule 52 (FL -> K OPREL K .)
    GOSUB           reduce using rule 52 (FL -> K OPREL K .)
    WHEND           reduce using rule 52 (FL -> K OPREL K .)
    ENDO            reduce using rule 52 (FL -> K OPREL K .)
    OR              reduce using rule 52 (FL -> K OPREL K .)
    AND             reduce using rule 52 (FL -> K OPREL K .)
    RPARENT         reduce using rule 52 (FL -> K OPREL K .)


state 106

    (53) FL -> LPARENT EL RPARENT .

    THEN            reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    LET             reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    PRINT           reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    INPUT           reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    CLS             reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    IF              reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    WHILE           reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    DO              reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    FOR             reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    GOSUB           reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    WHEND           reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    ENDO            reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    OR              reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    AND             reduce using rule 53 (FL -> LPARENT EL RPARENT .)
    RPARENT         reduce using rule 53 (FL -> LPARENT EL RPARENT .)


state 107

    (21) S -> WHILE EL X WHEND .

    SEMMICOLON      reduce using rule 21 (S -> WHILE EL X WHEND .)


state 108

    (22) S -> DO X LOOPUNTIL EL . ENDO
    (47) EL -> EL . OR TL

    ENDO            shift and go to state 119
    OR              shift and go to state 72


state 109

    (23) S -> FOR O TO E . X NEXT
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    PLUS            shift and go to state 62
    MINUS           shift and go to state 63
    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 120
    S                              shift and go to state 11

state 110

    (26) O -> E ASSIGN E .
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    TO              reduce using rule 26 (O -> E ASSIGN E .)
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 111

    (12) SP -> SUBPROCEDURE ID V X ENDSUB . SEMMICOLON SP

    SEMMICOLON      shift and go to state 121


state 112

    (2) V -> DIM IDLIST AS TIPO SEMMICOLON V .

    SUBPROCEDURE    reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    LET             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    PRINT           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    INPUT           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    CLS             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    IF              reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    WHILE           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    DO              reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    FOR             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    GOSUB           reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    END             reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)
    ENDSUB          reduce using rule 2 (V -> DIM IDLIST AS TIPO SEMMICOLON V .)


state 113

    (9) TIPO -> ARRAY LBRACKET E . RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 122
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 114

    (10) TIPO -> MATRIX LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 123
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 115

    (11) TIPO -> CUBE LBRACKET E . RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 124
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 116

    (28) U -> ID LBRACKET E RBRACKET .
    (29) U -> ID LBRACKET E RBRACKET . LBRACKET E RBRACKET
    (30) U -> ID LBRACKET E RBRACKET . LBRACKET E RBRACKET LBRACKET E RBRACKET

    SEMMICOLON      reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    RPARENT         reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    ASSIGN          reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    LET             reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    PRINT           reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    INPUT           reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    CLS             reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    IF              reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    WHILE           reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    DO              reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    FOR             reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    GOSUB           reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    NEXT            reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    TO              reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    PLUS            reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    MINUS           reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    TIMES           reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    DIVIDE          reduce using rule 28 (U -> ID LBRACKET E RBRACKET .)
    LBRACKET        shift and go to state 125


state 117

    (20) S -> IF EL THEN X ELSE1 . ENDIF

    ENDIF           shift and go to state 126


state 118

    (36) ELSE1 -> ELSE . X
    (14) X -> . S SEMMICOLON X
    (15) X -> .
    (16) S -> . LET E ASSIGN E
    (17) S -> . PRINT Q
    (18) S -> . INPUT H GTGT U
    (19) S -> . CLS
    (20) S -> . IF EL THEN X ELSE1 ENDIF
    (21) S -> . WHILE EL X WHEND
    (22) S -> . DO X LOOPUNTIL EL ENDO
    (23) S -> . FOR O TO E X NEXT
    (24) S -> . GOSUB ID

    END             reduce using rule 15 (X -> .)
    ENDSUB          reduce using rule 15 (X -> .)
    ELSE            reduce using rule 15 (X -> .)
    ENDIF           reduce using rule 15 (X -> .)
    WHEND           reduce using rule 15 (X -> .)
    LOOPUNTIL       reduce using rule 15 (X -> .)
    NEXT            reduce using rule 15 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 127
    S                              shift and go to state 11

state 119

    (22) S -> DO X LOOPUNTIL EL ENDO .

    SEMMICOLON      reduce using rule 22 (S -> DO X LOOPUNTIL EL ENDO .)


state 120

    (23) S -> FOR O TO E X . NEXT

    NEXT            shift and go to state 128


state 121

    (12) SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON . SP
    (12) SP -> . SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP
    (13) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 13 (SP -> .)
    PRINT           reduce using rule 13 (SP -> .)
    INPUT           reduce using rule 13 (SP -> .)
    CLS             reduce using rule 13 (SP -> .)
    IF              reduce using rule 13 (SP -> .)
    WHILE           reduce using rule 13 (SP -> .)
    DO              reduce using rule 13 (SP -> .)
    FOR             reduce using rule 13 (SP -> .)
    GOSUB           reduce using rule 13 (SP -> .)
    END             reduce using rule 13 (SP -> .)

    SP                             shift and go to state 129

state 122

    (9) TIPO -> ARRAY LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 9 (TIPO -> ARRAY LBRACKET E RBRACKET .)


state 123

    (10) TIPO -> MATRIX LBRACKET E RBRACKET . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 130


state 124

    (11) TIPO -> CUBE LBRACKET E RBRACKET . LBRACKET E RBRACKET LBRACKET E RBRACKET

    LBRACKET        shift and go to state 131


state 125

    (29) U -> ID LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (30) U -> ID LBRACKET E RBRACKET LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 132
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 126

    (20) S -> IF EL THEN X ELSE1 ENDIF .

    SEMMICOLON      reduce using rule 20 (S -> IF EL THEN X ELSE1 ENDIF .)


state 127

    (36) ELSE1 -> ELSE X .

    ENDIF           reduce using rule 36 (ELSE1 -> ELSE X .)


state 128

    (23) S -> FOR O TO E X NEXT .

    SEMMICOLON      reduce using rule 23 (S -> FOR O TO E X NEXT .)


state 129

    (12) SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .

    LET             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    PRINT           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    INPUT           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    CLS             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    IF              reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    WHILE           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    DO              reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    FOR             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    GOSUB           reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)
    END             reduce using rule 12 (SP -> SUBPROCEDURE ID V X ENDSUB SEMMICOLON SP .)


state 130

    (10) TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 133
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 131

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET . E RBRACKET LBRACKET E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 134
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 132

    (29) U -> ID LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (30) U -> ID LBRACKET E RBRACKET LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 135
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 133

    (10) TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 136
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 134

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E . RBRACKET LBRACKET E RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 137
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 135

    (29) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .
    (30) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET . LBRACKET E RBRACKET

    SEMMICOLON      reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RPARENT         reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ASSIGN          reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LET             reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PRINT           reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    INPUT           reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    CLS             reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    IF              reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    WHILE           reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DO              reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    FOR             reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    GOSUB           reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    NEXT            reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TO              reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PLUS            reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    MINUS           reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TIMES           reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DIVIDE          reduce using rule 29 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LBRACKET        shift and go to state 138


state 136

    (10) TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 10 (TIPO -> MATRIX LBRACKET E RBRACKET LBRACKET E RBRACKET .)


state 137

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET . LBRACKET E RBRACKET

    LBRACKET        shift and go to state 139


state 138

    (30) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 140
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 139

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET . E RBRACKET
    (38) E -> . E PLUS T
    (39) E -> . E MINUS T
    (40) E -> . T
    (41) T -> . T TIMES F
    (42) T -> . T DIVIDE F
    (43) T -> . F
    (44) F -> . NUMBER
    (45) F -> . U
    (46) F -> . LPARENT E RPARENT
    (27) U -> . ID
    (28) U -> . ID LBRACKET E RBRACKET
    (29) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET
    (30) U -> . ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET

    NUMBER          shift and go to state 29
    LPARENT         shift and go to state 31
    ID              shift and go to state 32

    E                              shift and go to state 141
    T                              shift and go to state 27
    F                              shift and go to state 28
    U                              shift and go to state 30

state 140

    (30) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 142
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 141

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E . RBRACKET
    (38) E -> E . PLUS T
    (39) E -> E . MINUS T

    RBRACKET        shift and go to state 143
    PLUS            shift and go to state 62
    MINUS           shift and go to state 63


state 142

    (30) U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RPARENT         reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    RBRACKET        reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    ASSIGN          reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    LET             reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PRINT           reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    INPUT           reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    CLS             reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    IF              reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    WHILE           reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DO              reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    FOR             reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    GOSUB           reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    NEXT            reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TO              reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    PLUS            reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    MINUS           reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    TIMES           reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)
    DIVIDE          reduce using rule 30 (U -> ID LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)


state 143

    (11) TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .

    SEMMICOLON      reduce using rule 11 (TIPO -> CUBE LBRACKET E RBRACKET LBRACKET E RBRACKET LBRACKET E RBRACKET .)

