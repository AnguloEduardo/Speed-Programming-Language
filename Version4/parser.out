Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM1 ID VARIABLE SP SALTO STATUTES END SEMMICOLON
Rule 2     PROGRAM1 -> PROGRAM
Rule 3     SALTO -> <empty>
Rule 4     VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE
Rule 5     VARIABLE -> <empty>
Rule 6     SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP
Rule 7     ID2 -> ID
Rule 8     SP -> <empty>
Rule 9     STATUTES -> STATEMENTS SEMMICOLON STATUTES
Rule 10    STATUTES -> <empty>
Rule 11    STATEMENTS -> LET VAR ASSIGN E
Rule 12    STATEMENTS -> PRINT VALUE
Rule 13    STATEMENTS -> INPUT TEXT GTGT VAR
Rule 14    STATEMENTS -> CLS
Rule 15    STATEMENTS -> IF EL THEN1 STATUTES ELSE1 ENDIF
Rule 16    STATEMENTS -> WHILE1 EL DO1 STATUTES WHEND
Rule 17    STATEMENTS -> DO2 STATUTES LOOPUNTIL EL ENDO
Rule 18    STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
Rule 19    STATEMENTS -> GOSUB POINT ID
Rule 20    E -> E PLUS T
Rule 21    E -> E MINUS T
Rule 22    E -> T
Rule 23    T -> T TIMES F
Rule 24    T -> T DIVIDE F
Rule 25    T -> F
Rule 26    F -> NUMBER
Rule 27    F -> FLOATNUMBER
Rule 28    F -> VAR
Rule 29    F -> LPARENT E RPARENT
Rule 30    EL -> EL OR TL
Rule 31    EL -> TL NOT
Rule 32    EL -> TL
Rule 33    TL -> TL AND FL
Rule 34    TL -> FL
Rule 35    FL -> OPERATOR OPREL OPERATOR
Rule 36    FL -> LPARENT EL RPARENT
Rule 37    OPREL -> LT
Rule 38    OPREL -> LTE
Rule 39    OPREL -> GT
Rule 40    OPREL -> GTE
Rule 41    OPREL -> NE
Rule 42    OPREL -> EQUAL
Rule 43    OPERATOR -> ID
Rule 44    OPERATOR -> NUMBER
Rule 45    OPERATOR -> FLOATNUMBER
Rule 46    IDLIST -> ID
Rule 47    IDLIST -> IDLIST COMMA ID
Rule 48    TIPO -> WORD
Rule 49    TIPO -> FLOAT
Rule 50    TIPO -> ARRAY DCLARRAY
Rule 51    TIPO -> MATRIX DCLMATRIX
Rule 52    TIPO -> CUBE DCLCUBE
Rule 53    DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET
Rule 54    DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
Rule 55    DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
Rule 56    IDENTIFICATOR -> NUMBER
Rule 57    IDENTIFICATOR -> ID
Rule 58    VAR -> ID
Rule 59    VAR -> ID DCLARRAY
Rule 60    VAR -> ID DCLMATRIX
Rule 61    VAR -> ID DCLCUBE
Rule 62    ELSE1 -> ELSE STATUTES
Rule 63    ELSE1 -> <empty>
Rule 64    THEN1 -> THEN
Rule 65    WHILE1 -> WHILE
Rule 66    DO1 -> DO
Rule 67    DO2 -> DO
Rule 68    ID1 -> ID
Rule 69    TO1 -> TO
Rule 70    DO3 -> DO
Rule 71    VALUE -> LPARENT VAR RPARENT
Rule 72    VALUE -> TEXT
Rule 73    TEXT -> LPARENT STRING RPARENT

Terminals, with rules where they appear

AND                  : 33
ARRAY                : 50
AS                   : 4
ASSIGN               : 11 18
CLS                  : 14
COMMA                : 47
CUBE                 : 52
DIM                  : 4
DIVIDE               : 24
DO                   : 66 67 70
ELSE                 : 62
END                  : 1
ENDIF                : 15
ENDO                 : 17
ENDSUB               : 6
EQUAL                : 42
FLOAT                : 49
FLOATNUMBER          : 27 45
FOR                  : 18
GOSUB                : 19
GT                   : 39
GTE                  : 40
GTGT                 : 13
ID                   : 1 7 19 43 46 47 57 58 59 60 61 68
IF                   : 15
INPUT                : 13
LBRACKET             : 53 54 54 55 55 55
LET                  : 11
LOOPUNTIL            : 17
LPARENT              : 29 36 71 73
LT                   : 37
LTE                  : 38
MATRIX               : 51
MINUS                : 21
NE                   : 41
NEXT                 : 18
NOT                  : 31
NUMBER               : 26 44 56
OR                   : 30
PLUS                 : 20
POINT                : 19
PRINT                : 12
PROGRAM              : 2
RBRACKET             : 53 54 54 55 55 55
RPARENT              : 29 36 71 73
SEMMICOLON           : 1 4 6 9
STRING               : 73
SUBPROCEDURE         : 6
THEN                 : 64
TIMES                : 23
TO                   : 69
WHEND                : 16
WHILE                : 65
WORD                 : 48
error                : 

Nonterminals, with rules where they appear

DCLARRAY             : 50 59
DCLCUBE              : 52 61
DCLMATRIX            : 51 60
DO1                  : 16
DO2                  : 17
DO3                  : 18
E                    : 11 18 18 20 21 29
EL                   : 15 16 17 30 36
ELSE1                : 15
F                    : 23 24 25
FL                   : 33 34
ID1                  : 18
ID2                  : 6
IDENTIFICATOR        : 53 54 54 55 55 55
IDLIST               : 4 47
OPERATOR             : 35 35
OPREL                : 35
PROGRAM1             : 1
SALTO                : 1
SP                   : 1 6
STATEMENTS           : 9
STATUTES             : 1 6 9 15 16 17 18 62
T                    : 20 21 22 23 24
TEXT                 : 13 72
THEN1                : 15
TIPO                 : 4
TL                   : 30 31 32 33
TO1                  : 18
VALUE                : 12
VAR                  : 11 13 28 71
VARIABLE             : 1 4
WHILE1               : 16
program              : 0

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM1 ID VARIABLE SP SALTO STATUTES END SEMMICOLON
    (2) PROGRAM1 -> . PROGRAM

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    PROGRAM1                       shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM1 . ID VARIABLE SP SALTO STATUTES END SEMMICOLON

    ID              shift and go to state 4


state 3

    (2) PROGRAM1 -> PROGRAM .

    ID              reduce using rule 2 (PROGRAM1 -> PROGRAM .)


state 4

    (1) program -> PROGRAM1 ID . VARIABLE SP SALTO STATUTES END SEMMICOLON
    (4) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (5) VARIABLE -> .

    DIM             shift and go to state 6
    SUBPROCEDURE    reduce using rule 5 (VARIABLE -> .)
    LET             reduce using rule 5 (VARIABLE -> .)
    PRINT           reduce using rule 5 (VARIABLE -> .)
    INPUT           reduce using rule 5 (VARIABLE -> .)
    CLS             reduce using rule 5 (VARIABLE -> .)
    IF              reduce using rule 5 (VARIABLE -> .)
    FOR             reduce using rule 5 (VARIABLE -> .)
    GOSUB           reduce using rule 5 (VARIABLE -> .)
    WHILE           reduce using rule 5 (VARIABLE -> .)
    DO              reduce using rule 5 (VARIABLE -> .)
    END             reduce using rule 5 (VARIABLE -> .)

    VARIABLE                       shift and go to state 5

state 5

    (1) program -> PROGRAM1 ID VARIABLE . SP SALTO STATUTES END SEMMICOLON
    (6) SP -> . SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP
    (8) SP -> .

    SUBPROCEDURE    shift and go to state 8
    LET             reduce using rule 8 (SP -> .)
    PRINT           reduce using rule 8 (SP -> .)
    INPUT           reduce using rule 8 (SP -> .)
    CLS             reduce using rule 8 (SP -> .)
    IF              reduce using rule 8 (SP -> .)
    FOR             reduce using rule 8 (SP -> .)
    GOSUB           reduce using rule 8 (SP -> .)
    WHILE           reduce using rule 8 (SP -> .)
    DO              reduce using rule 8 (SP -> .)
    END             reduce using rule 8 (SP -> .)

    SP                             shift and go to state 7

state 6

    (4) VARIABLE -> DIM . IDLIST AS TIPO SEMMICOLON VARIABLE
    (46) IDLIST -> . ID
    (47) IDLIST -> . IDLIST COMMA ID

    ID              shift and go to state 10

    IDLIST                         shift and go to state 9

state 7

    (1) program -> PROGRAM1 ID VARIABLE SP . SALTO STATUTES END SEMMICOLON
    (3) SALTO -> .

    LET             reduce using rule 3 (SALTO -> .)
    PRINT           reduce using rule 3 (SALTO -> .)
    INPUT           reduce using rule 3 (SALTO -> .)
    CLS             reduce using rule 3 (SALTO -> .)
    IF              reduce using rule 3 (SALTO -> .)
    FOR             reduce using rule 3 (SALTO -> .)
    GOSUB           reduce using rule 3 (SALTO -> .)
    WHILE           reduce using rule 3 (SALTO -> .)
    DO              reduce using rule 3 (SALTO -> .)
    END             reduce using rule 3 (SALTO -> .)

    SALTO                          shift and go to state 11

state 8

    (6) SP -> SUBPROCEDURE . ID2 STATUTES ENDSUB SEMMICOLON SP
    (7) ID2 -> . ID

    ID              shift and go to state 13

    ID2                            shift and go to state 12

state 9

    (4) VARIABLE -> DIM IDLIST . AS TIPO SEMMICOLON VARIABLE
    (47) IDLIST -> IDLIST . COMMA ID

    AS              shift and go to state 14
    COMMA           shift and go to state 15


state 10

    (46) IDLIST -> ID .

    AS              reduce using rule 46 (IDLIST -> ID .)
    COMMA           reduce using rule 46 (IDLIST -> ID .)


state 11

    (1) program -> PROGRAM1 ID VARIABLE SP SALTO . STATUTES END SEMMICOLON
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    STATUTES                       shift and go to state 16
    STATEMENTS                     shift and go to state 17
    WHILE1                         shift and go to state 23
    DO2                            shift and go to state 24

state 12

    (6) SP -> SUBPROCEDURE ID2 . STATUTES ENDSUB SEMMICOLON SP
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    STATUTES                       shift and go to state 29
    STATEMENTS                     shift and go to state 17
    WHILE1                         shift and go to state 23
    DO2                            shift and go to state 24

state 13

    (7) ID2 -> ID .

    LET             reduce using rule 7 (ID2 -> ID .)
    PRINT           reduce using rule 7 (ID2 -> ID .)
    INPUT           reduce using rule 7 (ID2 -> ID .)
    CLS             reduce using rule 7 (ID2 -> ID .)
    IF              reduce using rule 7 (ID2 -> ID .)
    FOR             reduce using rule 7 (ID2 -> ID .)
    GOSUB           reduce using rule 7 (ID2 -> ID .)
    WHILE           reduce using rule 7 (ID2 -> ID .)
    DO              reduce using rule 7 (ID2 -> ID .)
    ENDSUB          reduce using rule 7 (ID2 -> ID .)


state 14

    (4) VARIABLE -> DIM IDLIST AS . TIPO SEMMICOLON VARIABLE
    (48) TIPO -> . WORD
    (49) TIPO -> . FLOAT
    (50) TIPO -> . ARRAY DCLARRAY
    (51) TIPO -> . MATRIX DCLMATRIX
    (52) TIPO -> . CUBE DCLCUBE

    WORD            shift and go to state 31
    FLOAT           shift and go to state 32
    ARRAY           shift and go to state 33
    MATRIX          shift and go to state 34
    CUBE            shift and go to state 35

    TIPO                           shift and go to state 30

state 15

    (47) IDLIST -> IDLIST COMMA . ID

    ID              shift and go to state 36


state 16

    (1) program -> PROGRAM1 ID VARIABLE SP SALTO STATUTES . END SEMMICOLON

    END             shift and go to state 37


state 17

    (9) STATUTES -> STATEMENTS . SEMMICOLON STATUTES

    SEMMICOLON      shift and go to state 38


state 18

    (11) STATEMENTS -> LET . VAR ASSIGN E
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    ID              shift and go to state 40

    VAR                            shift and go to state 39

state 19

    (12) STATEMENTS -> PRINT . VALUE
    (71) VALUE -> . LPARENT VAR RPARENT
    (72) VALUE -> . TEXT
    (73) TEXT -> . LPARENT STRING RPARENT

    LPARENT         shift and go to state 42

    VALUE                          shift and go to state 41
    TEXT                           shift and go to state 43

state 20

    (13) STATEMENTS -> INPUT . TEXT GTGT VAR
    (73) TEXT -> . LPARENT STRING RPARENT

    LPARENT         shift and go to state 45

    TEXT                           shift and go to state 44

state 21

    (14) STATEMENTS -> CLS .

    SEMMICOLON      reduce using rule 14 (STATEMENTS -> CLS .)


state 22

    (15) STATEMENTS -> IF . EL THEN1 STATUTES ELSE1 ENDIF
    (30) EL -> . EL OR TL
    (31) EL -> . TL NOT
    (32) EL -> . TL
    (33) TL -> . TL AND FL
    (34) TL -> . FL
    (35) FL -> . OPERATOR OPREL OPERATOR
    (36) FL -> . LPARENT EL RPARENT
    (43) OPERATOR -> . ID
    (44) OPERATOR -> . NUMBER
    (45) OPERATOR -> . FLOATNUMBER

    LPARENT         shift and go to state 50
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    EL                             shift and go to state 46
    TL                             shift and go to state 47
    FL                             shift and go to state 48
    OPERATOR                       shift and go to state 49

state 23

    (16) STATEMENTS -> WHILE1 . EL DO1 STATUTES WHEND
    (30) EL -> . EL OR TL
    (31) EL -> . TL NOT
    (32) EL -> . TL
    (33) TL -> . TL AND FL
    (34) TL -> . FL
    (35) FL -> . OPERATOR OPREL OPERATOR
    (36) FL -> . LPARENT EL RPARENT
    (43) OPERATOR -> . ID
    (44) OPERATOR -> . NUMBER
    (45) OPERATOR -> . FLOATNUMBER

    LPARENT         shift and go to state 50
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    EL                             shift and go to state 54
    TL                             shift and go to state 47
    FL                             shift and go to state 48
    OPERATOR                       shift and go to state 49

state 24

    (17) STATEMENTS -> DO2 . STATUTES LOOPUNTIL EL ENDO
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    DO2                            shift and go to state 24
    STATUTES                       shift and go to state 55
    STATEMENTS                     shift and go to state 17
    WHILE1                         shift and go to state 23

state 25

    (18) STATEMENTS -> FOR . ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (68) ID1 -> . ID

    ID              shift and go to state 57

    ID1                            shift and go to state 56

state 26

    (19) STATEMENTS -> GOSUB . POINT ID

    POINT           shift and go to state 58


state 27

    (65) WHILE1 -> WHILE .

    LPARENT         reduce using rule 65 (WHILE1 -> WHILE .)
    ID              reduce using rule 65 (WHILE1 -> WHILE .)
    NUMBER          reduce using rule 65 (WHILE1 -> WHILE .)
    FLOATNUMBER     reduce using rule 65 (WHILE1 -> WHILE .)


state 28

    (67) DO2 -> DO .

    LET             reduce using rule 67 (DO2 -> DO .)
    PRINT           reduce using rule 67 (DO2 -> DO .)
    INPUT           reduce using rule 67 (DO2 -> DO .)
    CLS             reduce using rule 67 (DO2 -> DO .)
    IF              reduce using rule 67 (DO2 -> DO .)
    FOR             reduce using rule 67 (DO2 -> DO .)
    GOSUB           reduce using rule 67 (DO2 -> DO .)
    WHILE           reduce using rule 67 (DO2 -> DO .)
    DO              reduce using rule 67 (DO2 -> DO .)
    LOOPUNTIL       reduce using rule 67 (DO2 -> DO .)


state 29

    (6) SP -> SUBPROCEDURE ID2 STATUTES . ENDSUB SEMMICOLON SP

    ENDSUB          shift and go to state 59


state 30

    (4) VARIABLE -> DIM IDLIST AS TIPO . SEMMICOLON VARIABLE

    SEMMICOLON      shift and go to state 60


state 31

    (48) TIPO -> WORD .

    SEMMICOLON      reduce using rule 48 (TIPO -> WORD .)


state 32

    (49) TIPO -> FLOAT .

    SEMMICOLON      reduce using rule 49 (TIPO -> FLOAT .)


state 33

    (50) TIPO -> ARRAY . DCLARRAY
    (53) DCLARRAY -> . LBRACKET IDENTIFICATOR RBRACKET

    LBRACKET        shift and go to state 62

    DCLARRAY                       shift and go to state 61

state 34

    (51) TIPO -> MATRIX . DCLMATRIX
    (54) DCLMATRIX -> . LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    LBRACKET        shift and go to state 64

    DCLMATRIX                      shift and go to state 63

state 35

    (52) TIPO -> CUBE . DCLCUBE
    (55) DCLCUBE -> . LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    LBRACKET        shift and go to state 66

    DCLCUBE                        shift and go to state 65

state 36

    (47) IDLIST -> IDLIST COMMA ID .

    AS              reduce using rule 47 (IDLIST -> IDLIST COMMA ID .)
    COMMA           reduce using rule 47 (IDLIST -> IDLIST COMMA ID .)


state 37

    (1) program -> PROGRAM1 ID VARIABLE SP SALTO STATUTES END . SEMMICOLON

    SEMMICOLON      shift and go to state 67


state 38

    (9) STATUTES -> STATEMENTS SEMMICOLON . STATUTES
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    STATEMENTS                     shift and go to state 17
    STATUTES                       shift and go to state 68
    WHILE1                         shift and go to state 23
    DO2                            shift and go to state 24

state 39

    (11) STATEMENTS -> LET VAR . ASSIGN E

    ASSIGN          shift and go to state 69


state 40

    (58) VAR -> ID .
    (59) VAR -> ID . DCLARRAY
    (60) VAR -> ID . DCLMATRIX
    (61) VAR -> ID . DCLCUBE
    (53) DCLARRAY -> . LBRACKET IDENTIFICATOR RBRACKET
    (54) DCLMATRIX -> . LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (55) DCLCUBE -> . LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    ASSIGN          reduce using rule 58 (VAR -> ID .)
    SEMMICOLON      reduce using rule 58 (VAR -> ID .)
    TO              reduce using rule 58 (VAR -> ID .)
    DO              reduce using rule 58 (VAR -> ID .)
    PLUS            reduce using rule 58 (VAR -> ID .)
    MINUS           reduce using rule 58 (VAR -> ID .)
    TIMES           reduce using rule 58 (VAR -> ID .)
    DIVIDE          reduce using rule 58 (VAR -> ID .)
    RPARENT         reduce using rule 58 (VAR -> ID .)
    LBRACKET        shift and go to state 73

    DCLARRAY                       shift and go to state 70
    DCLMATRIX                      shift and go to state 71
    DCLCUBE                        shift and go to state 72

state 41

    (12) STATEMENTS -> PRINT VALUE .

    SEMMICOLON      reduce using rule 12 (STATEMENTS -> PRINT VALUE .)


state 42

    (71) VALUE -> LPARENT . VAR RPARENT
    (73) TEXT -> LPARENT . STRING RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    STRING          shift and go to state 75
    ID              shift and go to state 40

    VAR                            shift and go to state 74

state 43

    (72) VALUE -> TEXT .

    SEMMICOLON      reduce using rule 72 (VALUE -> TEXT .)


state 44

    (13) STATEMENTS -> INPUT TEXT . GTGT VAR

    GTGT            shift and go to state 76


state 45

    (73) TEXT -> LPARENT . STRING RPARENT

    STRING          shift and go to state 75


state 46

    (15) STATEMENTS -> IF EL . THEN1 STATUTES ELSE1 ENDIF
    (30) EL -> EL . OR TL
    (64) THEN1 -> . THEN

    OR              shift and go to state 78
    THEN            shift and go to state 79

    THEN1                          shift and go to state 77

state 47

    (31) EL -> TL . NOT
    (32) EL -> TL .
    (33) TL -> TL . AND FL

    NOT             shift and go to state 80
    THEN            reduce using rule 32 (EL -> TL .)
    DO              reduce using rule 32 (EL -> TL .)
    ENDO            reduce using rule 32 (EL -> TL .)
    OR              reduce using rule 32 (EL -> TL .)
    RPARENT         reduce using rule 32 (EL -> TL .)
    AND             shift and go to state 81


state 48

    (34) TL -> FL .

    THEN            reduce using rule 34 (TL -> FL .)
    DO              reduce using rule 34 (TL -> FL .)
    ENDO            reduce using rule 34 (TL -> FL .)
    OR              reduce using rule 34 (TL -> FL .)
    NOT             reduce using rule 34 (TL -> FL .)
    AND             reduce using rule 34 (TL -> FL .)
    RPARENT         reduce using rule 34 (TL -> FL .)


state 49

    (35) FL -> OPERATOR . OPREL OPERATOR
    (37) OPREL -> . LT
    (38) OPREL -> . LTE
    (39) OPREL -> . GT
    (40) OPREL -> . GTE
    (41) OPREL -> . NE
    (42) OPREL -> . EQUAL

    LT              shift and go to state 83
    LTE             shift and go to state 84
    GT              shift and go to state 85
    GTE             shift and go to state 86
    NE              shift and go to state 87
    EQUAL           shift and go to state 88

    OPREL                          shift and go to state 82

state 50

    (36) FL -> LPARENT . EL RPARENT
    (30) EL -> . EL OR TL
    (31) EL -> . TL NOT
    (32) EL -> . TL
    (33) TL -> . TL AND FL
    (34) TL -> . FL
    (35) FL -> . OPERATOR OPREL OPERATOR
    (36) FL -> . LPARENT EL RPARENT
    (43) OPERATOR -> . ID
    (44) OPERATOR -> . NUMBER
    (45) OPERATOR -> . FLOATNUMBER

    LPARENT         shift and go to state 50
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    EL                             shift and go to state 89
    TL                             shift and go to state 47
    FL                             shift and go to state 48
    OPERATOR                       shift and go to state 49

state 51

    (43) OPERATOR -> ID .

    LT              reduce using rule 43 (OPERATOR -> ID .)
    LTE             reduce using rule 43 (OPERATOR -> ID .)
    GT              reduce using rule 43 (OPERATOR -> ID .)
    GTE             reduce using rule 43 (OPERATOR -> ID .)
    NE              reduce using rule 43 (OPERATOR -> ID .)
    EQUAL           reduce using rule 43 (OPERATOR -> ID .)
    THEN            reduce using rule 43 (OPERATOR -> ID .)
    DO              reduce using rule 43 (OPERATOR -> ID .)
    ENDO            reduce using rule 43 (OPERATOR -> ID .)
    OR              reduce using rule 43 (OPERATOR -> ID .)
    NOT             reduce using rule 43 (OPERATOR -> ID .)
    AND             reduce using rule 43 (OPERATOR -> ID .)
    RPARENT         reduce using rule 43 (OPERATOR -> ID .)


state 52

    (44) OPERATOR -> NUMBER .

    LT              reduce using rule 44 (OPERATOR -> NUMBER .)
    LTE             reduce using rule 44 (OPERATOR -> NUMBER .)
    GT              reduce using rule 44 (OPERATOR -> NUMBER .)
    GTE             reduce using rule 44 (OPERATOR -> NUMBER .)
    NE              reduce using rule 44 (OPERATOR -> NUMBER .)
    EQUAL           reduce using rule 44 (OPERATOR -> NUMBER .)
    THEN            reduce using rule 44 (OPERATOR -> NUMBER .)
    DO              reduce using rule 44 (OPERATOR -> NUMBER .)
    ENDO            reduce using rule 44 (OPERATOR -> NUMBER .)
    OR              reduce using rule 44 (OPERATOR -> NUMBER .)
    NOT             reduce using rule 44 (OPERATOR -> NUMBER .)
    AND             reduce using rule 44 (OPERATOR -> NUMBER .)
    RPARENT         reduce using rule 44 (OPERATOR -> NUMBER .)


state 53

    (45) OPERATOR -> FLOATNUMBER .

    LT              reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    LTE             reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    GT              reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    GTE             reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    NE              reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    EQUAL           reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    THEN            reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    DO              reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    ENDO            reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    OR              reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    NOT             reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    AND             reduce using rule 45 (OPERATOR -> FLOATNUMBER .)
    RPARENT         reduce using rule 45 (OPERATOR -> FLOATNUMBER .)


state 54

    (16) STATEMENTS -> WHILE1 EL . DO1 STATUTES WHEND
    (30) EL -> EL . OR TL
    (66) DO1 -> . DO

    OR              shift and go to state 78
    DO              shift and go to state 91

    DO1                            shift and go to state 90

state 55

    (17) STATEMENTS -> DO2 STATUTES . LOOPUNTIL EL ENDO

    LOOPUNTIL       shift and go to state 92


state 56

    (18) STATEMENTS -> FOR ID1 . ASSIGN E TO1 E DO3 STATUTES NEXT

    ASSIGN          shift and go to state 93


state 57

    (68) ID1 -> ID .

    ASSIGN          reduce using rule 68 (ID1 -> ID .)


state 58

    (19) STATEMENTS -> GOSUB POINT . ID

    ID              shift and go to state 94


state 59

    (6) SP -> SUBPROCEDURE ID2 STATUTES ENDSUB . SEMMICOLON SP

    SEMMICOLON      shift and go to state 95


state 60

    (4) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON . VARIABLE
    (4) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (5) VARIABLE -> .

    DIM             shift and go to state 6
    SUBPROCEDURE    reduce using rule 5 (VARIABLE -> .)
    LET             reduce using rule 5 (VARIABLE -> .)
    PRINT           reduce using rule 5 (VARIABLE -> .)
    INPUT           reduce using rule 5 (VARIABLE -> .)
    CLS             reduce using rule 5 (VARIABLE -> .)
    IF              reduce using rule 5 (VARIABLE -> .)
    FOR             reduce using rule 5 (VARIABLE -> .)
    GOSUB           reduce using rule 5 (VARIABLE -> .)
    WHILE           reduce using rule 5 (VARIABLE -> .)
    DO              reduce using rule 5 (VARIABLE -> .)
    END             reduce using rule 5 (VARIABLE -> .)

    VARIABLE                       shift and go to state 96

state 61

    (50) TIPO -> ARRAY DCLARRAY .

    SEMMICOLON      reduce using rule 50 (TIPO -> ARRAY DCLARRAY .)


state 62

    (53) DCLARRAY -> LBRACKET . IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 97

state 63

    (51) TIPO -> MATRIX DCLMATRIX .

    SEMMICOLON      reduce using rule 51 (TIPO -> MATRIX DCLMATRIX .)


state 64

    (54) DCLMATRIX -> LBRACKET . IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 100

state 65

    (52) TIPO -> CUBE DCLCUBE .

    SEMMICOLON      reduce using rule 52 (TIPO -> CUBE DCLCUBE .)


state 66

    (55) DCLCUBE -> LBRACKET . IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 101

state 67

    (1) program -> PROGRAM1 ID VARIABLE SP SALTO STATUTES END SEMMICOLON .

    $end            reduce using rule 1 (program -> PROGRAM1 ID VARIABLE SP SALTO STATUTES END SEMMICOLON .)


state 68

    (9) STATUTES -> STATEMENTS SEMMICOLON STATUTES .

    END             reduce using rule 9 (STATUTES -> STATEMENTS SEMMICOLON STATUTES .)
    ENDSUB          reduce using rule 9 (STATUTES -> STATEMENTS SEMMICOLON STATUTES .)
    ELSE            reduce using rule 9 (STATUTES -> STATEMENTS SEMMICOLON STATUTES .)
    ENDIF           reduce using rule 9 (STATUTES -> STATEMENTS SEMMICOLON STATUTES .)
    WHEND           reduce using rule 9 (STATUTES -> STATEMENTS SEMMICOLON STATUTES .)
    LOOPUNTIL       reduce using rule 9 (STATUTES -> STATEMENTS SEMMICOLON STATUTES .)
    NEXT            reduce using rule 9 (STATUTES -> STATEMENTS SEMMICOLON STATUTES .)


state 69

    (11) STATEMENTS -> LET VAR ASSIGN . E
    (20) E -> . E PLUS T
    (21) E -> . E MINUS T
    (22) E -> . T
    (23) T -> . T TIMES F
    (24) T -> . T DIVIDE F
    (25) T -> . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    VAR                            shift and go to state 102
    E                              shift and go to state 103
    T                              shift and go to state 104
    F                              shift and go to state 105

state 70

    (59) VAR -> ID DCLARRAY .

    ASSIGN          reduce using rule 59 (VAR -> ID DCLARRAY .)
    SEMMICOLON      reduce using rule 59 (VAR -> ID DCLARRAY .)
    TO              reduce using rule 59 (VAR -> ID DCLARRAY .)
    DO              reduce using rule 59 (VAR -> ID DCLARRAY .)
    PLUS            reduce using rule 59 (VAR -> ID DCLARRAY .)
    MINUS           reduce using rule 59 (VAR -> ID DCLARRAY .)
    TIMES           reduce using rule 59 (VAR -> ID DCLARRAY .)
    DIVIDE          reduce using rule 59 (VAR -> ID DCLARRAY .)
    RPARENT         reduce using rule 59 (VAR -> ID DCLARRAY .)


state 71

    (60) VAR -> ID DCLMATRIX .

    ASSIGN          reduce using rule 60 (VAR -> ID DCLMATRIX .)
    SEMMICOLON      reduce using rule 60 (VAR -> ID DCLMATRIX .)
    TO              reduce using rule 60 (VAR -> ID DCLMATRIX .)
    DO              reduce using rule 60 (VAR -> ID DCLMATRIX .)
    PLUS            reduce using rule 60 (VAR -> ID DCLMATRIX .)
    MINUS           reduce using rule 60 (VAR -> ID DCLMATRIX .)
    TIMES           reduce using rule 60 (VAR -> ID DCLMATRIX .)
    DIVIDE          reduce using rule 60 (VAR -> ID DCLMATRIX .)
    RPARENT         reduce using rule 60 (VAR -> ID DCLMATRIX .)


state 72

    (61) VAR -> ID DCLCUBE .

    ASSIGN          reduce using rule 61 (VAR -> ID DCLCUBE .)
    SEMMICOLON      reduce using rule 61 (VAR -> ID DCLCUBE .)
    TO              reduce using rule 61 (VAR -> ID DCLCUBE .)
    DO              reduce using rule 61 (VAR -> ID DCLCUBE .)
    PLUS            reduce using rule 61 (VAR -> ID DCLCUBE .)
    MINUS           reduce using rule 61 (VAR -> ID DCLCUBE .)
    TIMES           reduce using rule 61 (VAR -> ID DCLCUBE .)
    DIVIDE          reduce using rule 61 (VAR -> ID DCLCUBE .)
    RPARENT         reduce using rule 61 (VAR -> ID DCLCUBE .)


state 73

    (53) DCLARRAY -> LBRACKET . IDENTIFICATOR RBRACKET
    (54) DCLMATRIX -> LBRACKET . IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (55) DCLCUBE -> LBRACKET . IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 109

state 74

    (71) VALUE -> LPARENT VAR . RPARENT

    RPARENT         shift and go to state 110


state 75

    (73) TEXT -> LPARENT STRING . RPARENT

    RPARENT         shift and go to state 111


state 76

    (13) STATEMENTS -> INPUT TEXT GTGT . VAR
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    ID              shift and go to state 40

    VAR                            shift and go to state 112

state 77

    (15) STATEMENTS -> IF EL THEN1 . STATUTES ELSE1 ENDIF
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    STATUTES                       shift and go to state 113
    STATEMENTS                     shift and go to state 17
    WHILE1                         shift and go to state 23
    DO2                            shift and go to state 24

state 78

    (30) EL -> EL OR . TL
    (33) TL -> . TL AND FL
    (34) TL -> . FL
    (35) FL -> . OPERATOR OPREL OPERATOR
    (36) FL -> . LPARENT EL RPARENT
    (43) OPERATOR -> . ID
    (44) OPERATOR -> . NUMBER
    (45) OPERATOR -> . FLOATNUMBER

    LPARENT         shift and go to state 50
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    TL                             shift and go to state 114
    FL                             shift and go to state 48
    OPERATOR                       shift and go to state 49

state 79

    (64) THEN1 -> THEN .

    LET             reduce using rule 64 (THEN1 -> THEN .)
    PRINT           reduce using rule 64 (THEN1 -> THEN .)
    INPUT           reduce using rule 64 (THEN1 -> THEN .)
    CLS             reduce using rule 64 (THEN1 -> THEN .)
    IF              reduce using rule 64 (THEN1 -> THEN .)
    FOR             reduce using rule 64 (THEN1 -> THEN .)
    GOSUB           reduce using rule 64 (THEN1 -> THEN .)
    WHILE           reduce using rule 64 (THEN1 -> THEN .)
    DO              reduce using rule 64 (THEN1 -> THEN .)
    ELSE            reduce using rule 64 (THEN1 -> THEN .)
    ENDIF           reduce using rule 64 (THEN1 -> THEN .)


state 80

    (31) EL -> TL NOT .

    THEN            reduce using rule 31 (EL -> TL NOT .)
    DO              reduce using rule 31 (EL -> TL NOT .)
    ENDO            reduce using rule 31 (EL -> TL NOT .)
    OR              reduce using rule 31 (EL -> TL NOT .)
    RPARENT         reduce using rule 31 (EL -> TL NOT .)


state 81

    (33) TL -> TL AND . FL
    (35) FL -> . OPERATOR OPREL OPERATOR
    (36) FL -> . LPARENT EL RPARENT
    (43) OPERATOR -> . ID
    (44) OPERATOR -> . NUMBER
    (45) OPERATOR -> . FLOATNUMBER

    LPARENT         shift and go to state 50
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    FL                             shift and go to state 115
    OPERATOR                       shift and go to state 49

state 82

    (35) FL -> OPERATOR OPREL . OPERATOR
    (43) OPERATOR -> . ID
    (44) OPERATOR -> . NUMBER
    (45) OPERATOR -> . FLOATNUMBER

    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    OPERATOR                       shift and go to state 116

state 83

    (37) OPREL -> LT .

    ID              reduce using rule 37 (OPREL -> LT .)
    NUMBER          reduce using rule 37 (OPREL -> LT .)
    FLOATNUMBER     reduce using rule 37 (OPREL -> LT .)


state 84

    (38) OPREL -> LTE .

    ID              reduce using rule 38 (OPREL -> LTE .)
    NUMBER          reduce using rule 38 (OPREL -> LTE .)
    FLOATNUMBER     reduce using rule 38 (OPREL -> LTE .)


state 85

    (39) OPREL -> GT .

    ID              reduce using rule 39 (OPREL -> GT .)
    NUMBER          reduce using rule 39 (OPREL -> GT .)
    FLOATNUMBER     reduce using rule 39 (OPREL -> GT .)


state 86

    (40) OPREL -> GTE .

    ID              reduce using rule 40 (OPREL -> GTE .)
    NUMBER          reduce using rule 40 (OPREL -> GTE .)
    FLOATNUMBER     reduce using rule 40 (OPREL -> GTE .)


state 87

    (41) OPREL -> NE .

    ID              reduce using rule 41 (OPREL -> NE .)
    NUMBER          reduce using rule 41 (OPREL -> NE .)
    FLOATNUMBER     reduce using rule 41 (OPREL -> NE .)


state 88

    (42) OPREL -> EQUAL .

    ID              reduce using rule 42 (OPREL -> EQUAL .)
    NUMBER          reduce using rule 42 (OPREL -> EQUAL .)
    FLOATNUMBER     reduce using rule 42 (OPREL -> EQUAL .)


state 89

    (36) FL -> LPARENT EL . RPARENT
    (30) EL -> EL . OR TL

    RPARENT         shift and go to state 117
    OR              shift and go to state 78


state 90

    (16) STATEMENTS -> WHILE1 EL DO1 . STATUTES WHEND
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    WHILE1                         shift and go to state 23
    STATUTES                       shift and go to state 118
    STATEMENTS                     shift and go to state 17
    DO2                            shift and go to state 24

state 91

    (66) DO1 -> DO .

    LET             reduce using rule 66 (DO1 -> DO .)
    PRINT           reduce using rule 66 (DO1 -> DO .)
    INPUT           reduce using rule 66 (DO1 -> DO .)
    CLS             reduce using rule 66 (DO1 -> DO .)
    IF              reduce using rule 66 (DO1 -> DO .)
    FOR             reduce using rule 66 (DO1 -> DO .)
    GOSUB           reduce using rule 66 (DO1 -> DO .)
    WHILE           reduce using rule 66 (DO1 -> DO .)
    DO              reduce using rule 66 (DO1 -> DO .)
    WHEND           reduce using rule 66 (DO1 -> DO .)


state 92

    (17) STATEMENTS -> DO2 STATUTES LOOPUNTIL . EL ENDO
    (30) EL -> . EL OR TL
    (31) EL -> . TL NOT
    (32) EL -> . TL
    (33) TL -> . TL AND FL
    (34) TL -> . FL
    (35) FL -> . OPERATOR OPREL OPERATOR
    (36) FL -> . LPARENT EL RPARENT
    (43) OPERATOR -> . ID
    (44) OPERATOR -> . NUMBER
    (45) OPERATOR -> . FLOATNUMBER

    LPARENT         shift and go to state 50
    ID              shift and go to state 51
    NUMBER          shift and go to state 52
    FLOATNUMBER     shift and go to state 53

    EL                             shift and go to state 119
    TL                             shift and go to state 47
    FL                             shift and go to state 48
    OPERATOR                       shift and go to state 49

state 93

    (18) STATEMENTS -> FOR ID1 ASSIGN . E TO1 E DO3 STATUTES NEXT
    (20) E -> . E PLUS T
    (21) E -> . E MINUS T
    (22) E -> . T
    (23) T -> . T TIMES F
    (24) T -> . T DIVIDE F
    (25) T -> . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    E                              shift and go to state 120
    T                              shift and go to state 104
    F                              shift and go to state 105
    VAR                            shift and go to state 102

state 94

    (19) STATEMENTS -> GOSUB POINT ID .

    SEMMICOLON      reduce using rule 19 (STATEMENTS -> GOSUB POINT ID .)


state 95

    (6) SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON . SP
    (6) SP -> . SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP
    (8) SP -> .

    SUBPROCEDURE    shift and go to state 8
    LET             reduce using rule 8 (SP -> .)
    PRINT           reduce using rule 8 (SP -> .)
    INPUT           reduce using rule 8 (SP -> .)
    CLS             reduce using rule 8 (SP -> .)
    IF              reduce using rule 8 (SP -> .)
    FOR             reduce using rule 8 (SP -> .)
    GOSUB           reduce using rule 8 (SP -> .)
    WHILE           reduce using rule 8 (SP -> .)
    DO              reduce using rule 8 (SP -> .)
    END             reduce using rule 8 (SP -> .)

    SP                             shift and go to state 121

state 96

    (4) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .

    SUBPROCEDURE    reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    LET             reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    PRINT           reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    INPUT           reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    CLS             reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    IF              reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    FOR             reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    GOSUB           reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    WHILE           reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    DO              reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    END             reduce using rule 4 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)


state 97

    (53) DCLARRAY -> LBRACKET IDENTIFICATOR . RBRACKET

    RBRACKET        shift and go to state 122


state 98

    (56) IDENTIFICATOR -> NUMBER .

    RBRACKET        reduce using rule 56 (IDENTIFICATOR -> NUMBER .)


state 99

    (57) IDENTIFICATOR -> ID .

    RBRACKET        reduce using rule 57 (IDENTIFICATOR -> ID .)


state 100

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR . RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    RBRACKET        shift and go to state 123


state 101

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR . RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    RBRACKET        shift and go to state 124


state 102

    (28) F -> VAR .

    SEMMICOLON      reduce using rule 28 (F -> VAR .)
    TO              reduce using rule 28 (F -> VAR .)
    DO              reduce using rule 28 (F -> VAR .)
    PLUS            reduce using rule 28 (F -> VAR .)
    MINUS           reduce using rule 28 (F -> VAR .)
    TIMES           reduce using rule 28 (F -> VAR .)
    DIVIDE          reduce using rule 28 (F -> VAR .)
    RPARENT         reduce using rule 28 (F -> VAR .)


state 103

    (11) STATEMENTS -> LET VAR ASSIGN E .
    (20) E -> E . PLUS T
    (21) E -> E . MINUS T

    SEMMICOLON      reduce using rule 11 (STATEMENTS -> LET VAR ASSIGN E .)
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126


state 104

    (22) E -> T .
    (23) T -> T . TIMES F
    (24) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 22 (E -> T .)
    TO              reduce using rule 22 (E -> T .)
    DO              reduce using rule 22 (E -> T .)
    PLUS            reduce using rule 22 (E -> T .)
    MINUS           reduce using rule 22 (E -> T .)
    RPARENT         reduce using rule 22 (E -> T .)
    TIMES           shift and go to state 127
    DIVIDE          shift and go to state 128


state 105

    (25) T -> F .

    SEMMICOLON      reduce using rule 25 (T -> F .)
    TO              reduce using rule 25 (T -> F .)
    DO              reduce using rule 25 (T -> F .)
    PLUS            reduce using rule 25 (T -> F .)
    MINUS           reduce using rule 25 (T -> F .)
    TIMES           reduce using rule 25 (T -> F .)
    DIVIDE          reduce using rule 25 (T -> F .)
    RPARENT         reduce using rule 25 (T -> F .)


state 106

    (26) F -> NUMBER .

    SEMMICOLON      reduce using rule 26 (F -> NUMBER .)
    TO              reduce using rule 26 (F -> NUMBER .)
    DO              reduce using rule 26 (F -> NUMBER .)
    PLUS            reduce using rule 26 (F -> NUMBER .)
    MINUS           reduce using rule 26 (F -> NUMBER .)
    TIMES           reduce using rule 26 (F -> NUMBER .)
    DIVIDE          reduce using rule 26 (F -> NUMBER .)
    RPARENT         reduce using rule 26 (F -> NUMBER .)


state 107

    (27) F -> FLOATNUMBER .

    SEMMICOLON      reduce using rule 27 (F -> FLOATNUMBER .)
    TO              reduce using rule 27 (F -> FLOATNUMBER .)
    DO              reduce using rule 27 (F -> FLOATNUMBER .)
    PLUS            reduce using rule 27 (F -> FLOATNUMBER .)
    MINUS           reduce using rule 27 (F -> FLOATNUMBER .)
    TIMES           reduce using rule 27 (F -> FLOATNUMBER .)
    DIVIDE          reduce using rule 27 (F -> FLOATNUMBER .)
    RPARENT         reduce using rule 27 (F -> FLOATNUMBER .)


state 108

    (29) F -> LPARENT . E RPARENT
    (20) E -> . E PLUS T
    (21) E -> . E MINUS T
    (22) E -> . T
    (23) T -> . T TIMES F
    (24) T -> . T DIVIDE F
    (25) T -> . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    E                              shift and go to state 129
    T                              shift and go to state 104
    F                              shift and go to state 105
    VAR                            shift and go to state 102

state 109

    (53) DCLARRAY -> LBRACKET IDENTIFICATOR . RBRACKET
    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR . RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (55) DCLCUBE -> LBRACKET IDENTIFICATOR . RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    RBRACKET        shift and go to state 130


state 110

    (71) VALUE -> LPARENT VAR RPARENT .

    SEMMICOLON      reduce using rule 71 (VALUE -> LPARENT VAR RPARENT .)


state 111

    (73) TEXT -> LPARENT STRING RPARENT .

    GTGT            reduce using rule 73 (TEXT -> LPARENT STRING RPARENT .)
    SEMMICOLON      reduce using rule 73 (TEXT -> LPARENT STRING RPARENT .)


state 112

    (13) STATEMENTS -> INPUT TEXT GTGT VAR .

    SEMMICOLON      reduce using rule 13 (STATEMENTS -> INPUT TEXT GTGT VAR .)


state 113

    (15) STATEMENTS -> IF EL THEN1 STATUTES . ELSE1 ENDIF
    (62) ELSE1 -> . ELSE STATUTES
    (63) ELSE1 -> .

    ELSE            shift and go to state 132
    ENDIF           reduce using rule 63 (ELSE1 -> .)

    ELSE1                          shift and go to state 131

state 114

    (30) EL -> EL OR TL .
    (33) TL -> TL . AND FL

    THEN            reduce using rule 30 (EL -> EL OR TL .)
    DO              reduce using rule 30 (EL -> EL OR TL .)
    ENDO            reduce using rule 30 (EL -> EL OR TL .)
    OR              reduce using rule 30 (EL -> EL OR TL .)
    RPARENT         reduce using rule 30 (EL -> EL OR TL .)
    AND             shift and go to state 81


state 115

    (33) TL -> TL AND FL .

    THEN            reduce using rule 33 (TL -> TL AND FL .)
    DO              reduce using rule 33 (TL -> TL AND FL .)
    ENDO            reduce using rule 33 (TL -> TL AND FL .)
    OR              reduce using rule 33 (TL -> TL AND FL .)
    NOT             reduce using rule 33 (TL -> TL AND FL .)
    AND             reduce using rule 33 (TL -> TL AND FL .)
    RPARENT         reduce using rule 33 (TL -> TL AND FL .)


state 116

    (35) FL -> OPERATOR OPREL OPERATOR .

    THEN            reduce using rule 35 (FL -> OPERATOR OPREL OPERATOR .)
    DO              reduce using rule 35 (FL -> OPERATOR OPREL OPERATOR .)
    ENDO            reduce using rule 35 (FL -> OPERATOR OPREL OPERATOR .)
    OR              reduce using rule 35 (FL -> OPERATOR OPREL OPERATOR .)
    NOT             reduce using rule 35 (FL -> OPERATOR OPREL OPERATOR .)
    AND             reduce using rule 35 (FL -> OPERATOR OPREL OPERATOR .)
    RPARENT         reduce using rule 35 (FL -> OPERATOR OPREL OPERATOR .)


state 117

    (36) FL -> LPARENT EL RPARENT .

    THEN            reduce using rule 36 (FL -> LPARENT EL RPARENT .)
    DO              reduce using rule 36 (FL -> LPARENT EL RPARENT .)
    ENDO            reduce using rule 36 (FL -> LPARENT EL RPARENT .)
    OR              reduce using rule 36 (FL -> LPARENT EL RPARENT .)
    NOT             reduce using rule 36 (FL -> LPARENT EL RPARENT .)
    AND             reduce using rule 36 (FL -> LPARENT EL RPARENT .)
    RPARENT         reduce using rule 36 (FL -> LPARENT EL RPARENT .)


state 118

    (16) STATEMENTS -> WHILE1 EL DO1 STATUTES . WHEND

    WHEND           shift and go to state 133


state 119

    (17) STATEMENTS -> DO2 STATUTES LOOPUNTIL EL . ENDO
    (30) EL -> EL . OR TL

    ENDO            shift and go to state 134
    OR              shift and go to state 78


state 120

    (18) STATEMENTS -> FOR ID1 ASSIGN E . TO1 E DO3 STATUTES NEXT
    (20) E -> E . PLUS T
    (21) E -> E . MINUS T
    (69) TO1 -> . TO

    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    TO              shift and go to state 136

    TO1                            shift and go to state 135

state 121

    (6) SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .

    LET             reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    PRINT           reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    INPUT           reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    CLS             reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    IF              reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    FOR             reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    GOSUB           reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    WHILE           reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    DO              reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)
    END             reduce using rule 6 (SP -> SUBPROCEDURE ID2 STATUTES ENDSUB SEMMICOLON SP .)


state 122

    (53) DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .

    SEMMICOLON      reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    ASSIGN          reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    TO              reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    DO              reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    PLUS            reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    MINUS           reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    TIMES           reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    DIVIDE          reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    RPARENT         reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)


state 123

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET . LBRACKET IDENTIFICATOR RBRACKET

    LBRACKET        shift and go to state 137


state 124

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET . LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    LBRACKET        shift and go to state 138


state 125

    (20) E -> E PLUS . T
    (23) T -> . T TIMES F
    (24) T -> . T DIVIDE F
    (25) T -> . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    T                              shift and go to state 139
    F                              shift and go to state 105
    VAR                            shift and go to state 102

state 126

    (21) E -> E MINUS . T
    (23) T -> . T TIMES F
    (24) T -> . T DIVIDE F
    (25) T -> . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    T                              shift and go to state 140
    F                              shift and go to state 105
    VAR                            shift and go to state 102

state 127

    (23) T -> T TIMES . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    F                              shift and go to state 141
    VAR                            shift and go to state 102

state 128

    (24) T -> T DIVIDE . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    F                              shift and go to state 142
    VAR                            shift and go to state 102

state 129

    (29) F -> LPARENT E . RPARENT
    (20) E -> E . PLUS T
    (21) E -> E . MINUS T

    RPARENT         shift and go to state 143
    PLUS            shift and go to state 125
    MINUS           shift and go to state 126


state 130

    (53) DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .
    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET . LBRACKET IDENTIFICATOR RBRACKET
    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET . LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    SEMMICOLON      reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    ASSIGN          reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    TO              reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    DO              reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    PLUS            reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    MINUS           reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    TIMES           reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    DIVIDE          reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    RPARENT         reduce using rule 53 (DCLARRAY -> LBRACKET IDENTIFICATOR RBRACKET .)
    LBRACKET        shift and go to state 144


state 131

    (15) STATEMENTS -> IF EL THEN1 STATUTES ELSE1 . ENDIF

    ENDIF           shift and go to state 145


state 132

    (62) ELSE1 -> ELSE . STATUTES
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    STATUTES                       shift and go to state 146
    STATEMENTS                     shift and go to state 17
    WHILE1                         shift and go to state 23
    DO2                            shift and go to state 24

state 133

    (16) STATEMENTS -> WHILE1 EL DO1 STATUTES WHEND .

    SEMMICOLON      reduce using rule 16 (STATEMENTS -> WHILE1 EL DO1 STATUTES WHEND .)


state 134

    (17) STATEMENTS -> DO2 STATUTES LOOPUNTIL EL ENDO .

    SEMMICOLON      reduce using rule 17 (STATEMENTS -> DO2 STATUTES LOOPUNTIL EL ENDO .)


state 135

    (18) STATEMENTS -> FOR ID1 ASSIGN E TO1 . E DO3 STATUTES NEXT
    (20) E -> . E PLUS T
    (21) E -> . E MINUS T
    (22) E -> . T
    (23) T -> . T TIMES F
    (24) T -> . T DIVIDE F
    (25) T -> . F
    (26) F -> . NUMBER
    (27) F -> . FLOATNUMBER
    (28) F -> . VAR
    (29) F -> . LPARENT E RPARENT
    (58) VAR -> . ID
    (59) VAR -> . ID DCLARRAY
    (60) VAR -> . ID DCLMATRIX
    (61) VAR -> . ID DCLCUBE

    NUMBER          shift and go to state 106
    FLOATNUMBER     shift and go to state 107
    LPARENT         shift and go to state 108
    ID              shift and go to state 40

    E                              shift and go to state 147
    T                              shift and go to state 104
    F                              shift and go to state 105
    VAR                            shift and go to state 102

state 136

    (69) TO1 -> TO .

    NUMBER          reduce using rule 69 (TO1 -> TO .)
    FLOATNUMBER     reduce using rule 69 (TO1 -> TO .)
    ID              reduce using rule 69 (TO1 -> TO .)
    LPARENT         reduce using rule 69 (TO1 -> TO .)


state 137

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET . IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 148

state 138

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET . IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 149

state 139

    (20) E -> E PLUS T .
    (23) T -> T . TIMES F
    (24) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 20 (E -> E PLUS T .)
    TO              reduce using rule 20 (E -> E PLUS T .)
    DO              reduce using rule 20 (E -> E PLUS T .)
    PLUS            reduce using rule 20 (E -> E PLUS T .)
    MINUS           reduce using rule 20 (E -> E PLUS T .)
    RPARENT         reduce using rule 20 (E -> E PLUS T .)
    TIMES           shift and go to state 127
    DIVIDE          shift and go to state 128


state 140

    (21) E -> E MINUS T .
    (23) T -> T . TIMES F
    (24) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 21 (E -> E MINUS T .)
    TO              reduce using rule 21 (E -> E MINUS T .)
    DO              reduce using rule 21 (E -> E MINUS T .)
    PLUS            reduce using rule 21 (E -> E MINUS T .)
    MINUS           reduce using rule 21 (E -> E MINUS T .)
    RPARENT         reduce using rule 21 (E -> E MINUS T .)
    TIMES           shift and go to state 127
    DIVIDE          shift and go to state 128


state 141

    (23) T -> T TIMES F .

    SEMMICOLON      reduce using rule 23 (T -> T TIMES F .)
    TO              reduce using rule 23 (T -> T TIMES F .)
    DO              reduce using rule 23 (T -> T TIMES F .)
    PLUS            reduce using rule 23 (T -> T TIMES F .)
    MINUS           reduce using rule 23 (T -> T TIMES F .)
    TIMES           reduce using rule 23 (T -> T TIMES F .)
    DIVIDE          reduce using rule 23 (T -> T TIMES F .)
    RPARENT         reduce using rule 23 (T -> T TIMES F .)


state 142

    (24) T -> T DIVIDE F .

    SEMMICOLON      reduce using rule 24 (T -> T DIVIDE F .)
    TO              reduce using rule 24 (T -> T DIVIDE F .)
    DO              reduce using rule 24 (T -> T DIVIDE F .)
    PLUS            reduce using rule 24 (T -> T DIVIDE F .)
    MINUS           reduce using rule 24 (T -> T DIVIDE F .)
    TIMES           reduce using rule 24 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 24 (T -> T DIVIDE F .)
    RPARENT         reduce using rule 24 (T -> T DIVIDE F .)


state 143

    (29) F -> LPARENT E RPARENT .

    SEMMICOLON      reduce using rule 29 (F -> LPARENT E RPARENT .)
    TO              reduce using rule 29 (F -> LPARENT E RPARENT .)
    DO              reduce using rule 29 (F -> LPARENT E RPARENT .)
    PLUS            reduce using rule 29 (F -> LPARENT E RPARENT .)
    MINUS           reduce using rule 29 (F -> LPARENT E RPARENT .)
    TIMES           reduce using rule 29 (F -> LPARENT E RPARENT .)
    DIVIDE          reduce using rule 29 (F -> LPARENT E RPARENT .)
    RPARENT         reduce using rule 29 (F -> LPARENT E RPARENT .)


state 144

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET . IDENTIFICATOR RBRACKET
    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET . IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 150

state 145

    (15) STATEMENTS -> IF EL THEN1 STATUTES ELSE1 ENDIF .

    SEMMICOLON      reduce using rule 15 (STATEMENTS -> IF EL THEN1 STATUTES ELSE1 ENDIF .)


state 146

    (62) ELSE1 -> ELSE STATUTES .

    ENDIF           reduce using rule 62 (ELSE1 -> ELSE STATUTES .)


state 147

    (18) STATEMENTS -> FOR ID1 ASSIGN E TO1 E . DO3 STATUTES NEXT
    (20) E -> E . PLUS T
    (21) E -> E . MINUS T
    (70) DO3 -> . DO

    PLUS            shift and go to state 125
    MINUS           shift and go to state 126
    DO              shift and go to state 152

    DO3                            shift and go to state 151

state 148

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR . RBRACKET

    RBRACKET        shift and go to state 153


state 149

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR . RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    RBRACKET        shift and go to state 154


state 150

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR . RBRACKET
    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR . RBRACKET LBRACKET IDENTIFICATOR RBRACKET

    RBRACKET        shift and go to state 155


state 151

    (18) STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 . STATUTES NEXT
    (9) STATUTES -> . STATEMENTS SEMMICOLON STATUTES
    (10) STATUTES -> .
    (11) STATEMENTS -> . LET VAR ASSIGN E
    (12) STATEMENTS -> . PRINT VALUE
    (13) STATEMENTS -> . INPUT TEXT GTGT VAR
    (14) STATEMENTS -> . CLS
    (15) STATEMENTS -> . IF EL THEN1 STATUTES ELSE1 ENDIF
    (16) STATEMENTS -> . WHILE1 EL DO1 STATUTES WHEND
    (17) STATEMENTS -> . DO2 STATUTES LOOPUNTIL EL ENDO
    (18) STATEMENTS -> . FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT
    (19) STATEMENTS -> . GOSUB POINT ID
    (65) WHILE1 -> . WHILE
    (67) DO2 -> . DO

    END             reduce using rule 10 (STATUTES -> .)
    ENDSUB          reduce using rule 10 (STATUTES -> .)
    ELSE            reduce using rule 10 (STATUTES -> .)
    ENDIF           reduce using rule 10 (STATUTES -> .)
    WHEND           reduce using rule 10 (STATUTES -> .)
    LOOPUNTIL       reduce using rule 10 (STATUTES -> .)
    NEXT            reduce using rule 10 (STATUTES -> .)
    LET             shift and go to state 18
    PRINT           shift and go to state 19
    INPUT           shift and go to state 20
    CLS             shift and go to state 21
    IF              shift and go to state 22
    FOR             shift and go to state 25
    GOSUB           shift and go to state 26
    WHILE           shift and go to state 27
    DO              shift and go to state 28

    STATUTES                       shift and go to state 156
    STATEMENTS                     shift and go to state 17
    WHILE1                         shift and go to state 23
    DO2                            shift and go to state 24

state 152

    (70) DO3 -> DO .

    LET             reduce using rule 70 (DO3 -> DO .)
    PRINT           reduce using rule 70 (DO3 -> DO .)
    INPUT           reduce using rule 70 (DO3 -> DO .)
    CLS             reduce using rule 70 (DO3 -> DO .)
    IF              reduce using rule 70 (DO3 -> DO .)
    FOR             reduce using rule 70 (DO3 -> DO .)
    GOSUB           reduce using rule 70 (DO3 -> DO .)
    WHILE           reduce using rule 70 (DO3 -> DO .)
    DO              reduce using rule 70 (DO3 -> DO .)
    NEXT            reduce using rule 70 (DO3 -> DO .)


state 153

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .

    SEMMICOLON      reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    ASSIGN          reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    TO              reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    DO              reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    PLUS            reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    MINUS           reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    TIMES           reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    DIVIDE          reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    RPARENT         reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)


state 154

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET . LBRACKET IDENTIFICATOR RBRACKET

    LBRACKET        shift and go to state 157


state 155

    (54) DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .
    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET . LBRACKET IDENTIFICATOR RBRACKET

    SEMMICOLON      reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    ASSIGN          reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    TO              reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    DO              reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    PLUS            reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    MINUS           reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    TIMES           reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    DIVIDE          reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    RPARENT         reduce using rule 54 (DCLMATRIX -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    LBRACKET        shift and go to state 157


state 156

    (18) STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 STATUTES . NEXT

    NEXT            shift and go to state 158


state 157

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET . IDENTIFICATOR RBRACKET
    (56) IDENTIFICATOR -> . NUMBER
    (57) IDENTIFICATOR -> . ID

    NUMBER          shift and go to state 98
    ID              shift and go to state 99

    IDENTIFICATOR                  shift and go to state 159

state 158

    (18) STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT .

    SEMMICOLON      reduce using rule 18 (STATEMENTS -> FOR ID1 ASSIGN E TO1 E DO3 STATUTES NEXT .)


state 159

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR . RBRACKET

    RBRACKET        shift and go to state 160


state 160

    (55) DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .

    SEMMICOLON      reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    ASSIGN          reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    TO              reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    DO              reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    PLUS            reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    MINUS           reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    TIMES           reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    DIVIDE          reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)
    RPARENT         reduce using rule 55 (DCLCUBE -> LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET LBRACKET IDENTIFICATOR RBRACKET .)

