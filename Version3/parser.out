Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID VARIABLE SP X END SEMMICOLON
Rule 2     VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE
Rule 3     VARIABLE -> <empty>
Rule 4     IDLIST -> ID
Rule 5     IDLIST -> IDLIST COMMA ID
Rule 6     IDLIST -> <empty>
Rule 7     TIPO -> WORD
Rule 8     TIPO -> FLOAT
Rule 9     TIPO -> ARRAY DCLARRAY
Rule 10    TIPO -> MATRIX DCLMATRIX
Rule 11    TIPO -> CUBE DCLCUBE
Rule 12    DCLARRAY -> LBRACKET Z RBRACKET
Rule 13    DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET
Rule 14    DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
Rule 15    Z -> NUMBER
Rule 16    Z -> ID
Rule 17    SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
Rule 18    SP -> <empty>
Rule 19    X -> STATEMENTS SEMMICOLON X
Rule 20    X -> <empty>
Rule 21    STATEMENTS -> LET U ASSIGN E
Rule 22    STATEMENTS -> PRINT Q
Rule 23    STATEMENTS -> INPUT TEXT GTGT VAR
Rule 24    VAR -> ID
Rule 25    VAR -> ID DCLARRAY
Rule 26    VAR -> ID DCLMATRIX
Rule 27    VAR -> ID DCLCUBE
Rule 28    STATEMENTS -> CLS
Rule 29    STATEMENTS -> IF EL THEN1 X ELSE1 ENDIF
Rule 30    STATEMENTS -> WHILE EL X WHEND
Rule 31    STATEMENTS -> DO X LOOPUNTIL EL ENDO
Rule 32    STATEMENTS -> FOR ID TO E X NEXT
Rule 33    STATEMENTS -> GOSUB ID
Rule 34    U -> ID
Rule 35    U -> ID DCLARRAY
Rule 36    U -> ID DCLMATRIX
Rule 37    U -> ID DCLCUBE
Rule 38    Q -> LPARENT VAR RPARENT
Rule 39    Q -> TEXT
Rule 40    TEXT -> LPARENT STRING H RPARENT
Rule 41    TEXT -> <empty>
Rule 42    H -> PLUS STRING H
Rule 43    H -> PLUS U H
Rule 44    H -> <empty>
Rule 45    ELSE1 -> ELSE X
Rule 46    THEN1 -> THEN
Rule 47    ELSE1 -> <empty>
Rule 48    E -> E PLUS T
Rule 49    E -> E MINUS T
Rule 50    E -> T
Rule 51    T -> T TIMES F
Rule 52    T -> T DIVIDE F
Rule 53    T -> F
Rule 54    F -> NUMBER
Rule 55    F -> U
Rule 56    F -> LPARENT E RPARENT
Rule 57    EL -> EL OR TL
Rule 58    EL -> TL NOT
Rule 59    EL -> TL
Rule 60    TL -> TL AND FL
Rule 61    TL -> FL
Rule 62    FL -> K OPREL K
Rule 63    FL -> LPARENT EL RPARENT
Rule 64    OPREL -> LT
Rule 65    OPREL -> LTE
Rule 66    OPREL -> GT
Rule 67    OPREL -> GTE
Rule 68    OPREL -> NE
Rule 69    OPREL -> EQUAL
Rule 70    K -> ID
Rule 71    K -> NUMBER

Terminals, with rules where they appear

AND                  : 60
ARRAY                : 9
AS                   : 2
ASSIGN               : 21
CLS                  : 28
COMMA                : 5
CUBE                 : 11
DIM                  : 2
DIVIDE               : 52
DO                   : 31
ELSE                 : 45
END                  : 1
ENDIF                : 29
ENDO                 : 31
ENDSUB               : 17
EQUAL                : 69
FLOAT                : 8
FOR                  : 32
GOSUB                : 33
GT                   : 66
GTE                  : 67
GTGT                 : 23
ID                   : 1 4 5 16 17 24 25 26 27 32 33 34 35 36 37 70
IF                   : 29
INPUT                : 23
LBRACKET             : 12 13 13 14 14 14
LET                  : 21
LOOPUNTIL            : 31
LPARENT              : 38 40 56 63
LT                   : 64
LTE                  : 65
MATRIX               : 10
MINUS                : 49
NE                   : 68
NEXT                 : 32
NOT                  : 58
NUMBER               : 15 54 71
OR                   : 57
PLUS                 : 42 43 48
PRINT                : 22
PROGRAM              : 1
RBRACKET             : 12 13 13 14 14 14
RPARENT              : 38 40 56 63
SEMMICOLON           : 1 2 17 19
STRING               : 40 42
SUBPROCEDURE         : 17
THEN                 : 46
TIMES                : 51
TO                   : 32
WHEND                : 30
WHILE                : 30
WORD                 : 7
error                : 

Nonterminals, with rules where they appear

DCLARRAY             : 9 25 35
DCLCUBE              : 11 27 37
DCLMATRIX            : 10 26 36
E                    : 21 32 48 49 56
EL                   : 29 30 31 57 63
ELSE1                : 29
F                    : 51 52 53
FL                   : 60 61
H                    : 40 42 43
IDLIST               : 2 5
K                    : 62 62
OPREL                : 62
Q                    : 22
SP                   : 1 17
STATEMENTS           : 19
T                    : 48 49 50 51 52
TEXT                 : 23 39
THEN1                : 29
TIPO                 : 2
TL                   : 57 58 59 60
U                    : 21 43 55
VAR                  : 23 38
VARIABLE             : 1 2
X                    : 1 17 19 29 30 31 32 45
Z                    : 12 13 13 14 14 14
program              : 0

Parsing method: SLR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID VARIABLE SP X END SEMMICOLON

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID VARIABLE SP X END SEMMICOLON

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . VARIABLE SP X END SEMMICOLON
    (2) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (3) VARIABLE -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (VARIABLE -> .)
    LET             reduce using rule 3 (VARIABLE -> .)
    PRINT           reduce using rule 3 (VARIABLE -> .)
    INPUT           reduce using rule 3 (VARIABLE -> .)
    CLS             reduce using rule 3 (VARIABLE -> .)
    IF              reduce using rule 3 (VARIABLE -> .)
    WHILE           reduce using rule 3 (VARIABLE -> .)
    DO              reduce using rule 3 (VARIABLE -> .)
    FOR             reduce using rule 3 (VARIABLE -> .)
    GOSUB           reduce using rule 3 (VARIABLE -> .)
    END             reduce using rule 3 (VARIABLE -> .)

    VARIABLE                       shift and go to state 4

state 4

    (1) program -> PROGRAM ID VARIABLE . SP X END SEMMICOLON
    (17) SP -> . SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
    (18) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 18 (SP -> .)
    PRINT           reduce using rule 18 (SP -> .)
    INPUT           reduce using rule 18 (SP -> .)
    CLS             reduce using rule 18 (SP -> .)
    IF              reduce using rule 18 (SP -> .)
    WHILE           reduce using rule 18 (SP -> .)
    DO              reduce using rule 18 (SP -> .)
    FOR             reduce using rule 18 (SP -> .)
    GOSUB           reduce using rule 18 (SP -> .)
    END             reduce using rule 18 (SP -> .)

    SP                             shift and go to state 6

state 5

    (2) VARIABLE -> DIM . IDLIST AS TIPO SEMMICOLON VARIABLE
    (4) IDLIST -> . ID
    (5) IDLIST -> . IDLIST COMMA ID
    (6) IDLIST -> .

    ID              shift and go to state 9
    AS              reduce using rule 6 (IDLIST -> .)
    COMMA           reduce using rule 6 (IDLIST -> .)

    IDLIST                         shift and go to state 8

state 6

    (1) program -> PROGRAM ID VARIABLE SP . X END SEMMICOLON
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 10
    STATEMENTS                     shift and go to state 11

state 7

    (17) SP -> SUBPROCEDURE . ID X ENDSUB SEMMICOLON SP

    ID              shift and go to state 21


state 8

    (2) VARIABLE -> DIM IDLIST . AS TIPO SEMMICOLON VARIABLE
    (5) IDLIST -> IDLIST . COMMA ID

    AS              shift and go to state 22
    COMMA           shift and go to state 23


state 9

    (4) IDLIST -> ID .

    AS              reduce using rule 4 (IDLIST -> ID .)
    COMMA           reduce using rule 4 (IDLIST -> ID .)


state 10

    (1) program -> PROGRAM ID VARIABLE SP X . END SEMMICOLON

    END             shift and go to state 24


state 11

    (19) X -> STATEMENTS . SEMMICOLON X

    SEMMICOLON      shift and go to state 25


state 12

    (21) STATEMENTS -> LET . U ASSIGN E
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    ID              shift and go to state 27

    U                              shift and go to state 26

state 13

    (22) STATEMENTS -> PRINT . Q
    (38) Q -> . LPARENT VAR RPARENT
    (39) Q -> . TEXT
    (40) TEXT -> . LPARENT STRING H RPARENT
    (41) TEXT -> .

    LPARENT         shift and go to state 29
    GTGT            reduce using rule 41 (TEXT -> .)
    SEMMICOLON      reduce using rule 41 (TEXT -> .)

    Q                              shift and go to state 28
    TEXT                           shift and go to state 30

state 14

    (23) STATEMENTS -> INPUT . TEXT GTGT VAR
    (40) TEXT -> . LPARENT STRING H RPARENT
    (41) TEXT -> .

    LPARENT         shift and go to state 32
    GTGT            reduce using rule 41 (TEXT -> .)
    SEMMICOLON      reduce using rule 41 (TEXT -> .)

    TEXT                           shift and go to state 31

state 15

    (28) STATEMENTS -> CLS .

    SEMMICOLON      reduce using rule 28 (STATEMENTS -> CLS .)


state 16

    (29) STATEMENTS -> IF . EL THEN1 X ELSE1 ENDIF
    (57) EL -> . EL OR TL
    (58) EL -> . TL NOT
    (59) EL -> . TL
    (60) TL -> . TL AND FL
    (61) TL -> . FL
    (62) FL -> . K OPREL K
    (63) FL -> . LPARENT EL RPARENT
    (70) K -> . ID
    (71) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 33
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 17

    (30) STATEMENTS -> WHILE . EL X WHEND
    (57) EL -> . EL OR TL
    (58) EL -> . TL NOT
    (59) EL -> . TL
    (60) TL -> . TL AND FL
    (61) TL -> . FL
    (62) FL -> . K OPREL K
    (63) FL -> . LPARENT EL RPARENT
    (70) K -> . ID
    (71) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 40
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 18

    (31) STATEMENTS -> DO . X LOOPUNTIL EL ENDO
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 41
    STATEMENTS                     shift and go to state 11

state 19

    (32) STATEMENTS -> FOR . ID TO E X NEXT

    ID              shift and go to state 42


state 20

    (33) STATEMENTS -> GOSUB . ID

    ID              shift and go to state 43


state 21

    (17) SP -> SUBPROCEDURE ID . X ENDSUB SEMMICOLON SP
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 44
    STATEMENTS                     shift and go to state 11

state 22

    (2) VARIABLE -> DIM IDLIST AS . TIPO SEMMICOLON VARIABLE
    (7) TIPO -> . WORD
    (8) TIPO -> . FLOAT
    (9) TIPO -> . ARRAY DCLARRAY
    (10) TIPO -> . MATRIX DCLMATRIX
    (11) TIPO -> . CUBE DCLCUBE

    WORD            shift and go to state 46
    FLOAT           shift and go to state 47
    ARRAY           shift and go to state 48
    MATRIX          shift and go to state 49
    CUBE            shift and go to state 50

    TIPO                           shift and go to state 45

state 23

    (5) IDLIST -> IDLIST COMMA . ID

    ID              shift and go to state 51


state 24

    (1) program -> PROGRAM ID VARIABLE SP X END . SEMMICOLON

    SEMMICOLON      shift and go to state 52


state 25

    (19) X -> STATEMENTS SEMMICOLON . X
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    STATEMENTS                     shift and go to state 11
    X                              shift and go to state 53

state 26

    (21) STATEMENTS -> LET U . ASSIGN E

    ASSIGN          shift and go to state 54


state 27

    (34) U -> ID .
    (35) U -> ID . DCLARRAY
    (36) U -> ID . DCLMATRIX
    (37) U -> ID . DCLCUBE
    (12) DCLARRAY -> . LBRACKET Z RBRACKET
    (13) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (14) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    ASSIGN          reduce using rule 34 (U -> ID .)
    PLUS            reduce using rule 34 (U -> ID .)
    RPARENT         reduce using rule 34 (U -> ID .)
    SEMMICOLON      reduce using rule 34 (U -> ID .)
    LET             reduce using rule 34 (U -> ID .)
    PRINT           reduce using rule 34 (U -> ID .)
    INPUT           reduce using rule 34 (U -> ID .)
    CLS             reduce using rule 34 (U -> ID .)
    IF              reduce using rule 34 (U -> ID .)
    WHILE           reduce using rule 34 (U -> ID .)
    DO              reduce using rule 34 (U -> ID .)
    FOR             reduce using rule 34 (U -> ID .)
    GOSUB           reduce using rule 34 (U -> ID .)
    NEXT            reduce using rule 34 (U -> ID .)
    MINUS           reduce using rule 34 (U -> ID .)
    TIMES           reduce using rule 34 (U -> ID .)
    DIVIDE          reduce using rule 34 (U -> ID .)
    LBRACKET        shift and go to state 58

    DCLARRAY                       shift and go to state 55
    DCLMATRIX                      shift and go to state 56
    DCLCUBE                        shift and go to state 57

state 28

    (22) STATEMENTS -> PRINT Q .

    SEMMICOLON      reduce using rule 22 (STATEMENTS -> PRINT Q .)


state 29

    (38) Q -> LPARENT . VAR RPARENT
    (40) TEXT -> LPARENT . STRING H RPARENT
    (24) VAR -> . ID
    (25) VAR -> . ID DCLARRAY
    (26) VAR -> . ID DCLMATRIX
    (27) VAR -> . ID DCLCUBE

    STRING          shift and go to state 60
    ID              shift and go to state 61

    VAR                            shift and go to state 59

state 30

    (39) Q -> TEXT .

    SEMMICOLON      reduce using rule 39 (Q -> TEXT .)


state 31

    (23) STATEMENTS -> INPUT TEXT . GTGT VAR

    GTGT            shift and go to state 62


state 32

    (40) TEXT -> LPARENT . STRING H RPARENT

    STRING          shift and go to state 60


state 33

    (29) STATEMENTS -> IF EL . THEN1 X ELSE1 ENDIF
    (57) EL -> EL . OR TL
    (46) THEN1 -> . THEN

    OR              shift and go to state 64
    THEN            shift and go to state 65

    THEN1                          shift and go to state 63

state 34

    (58) EL -> TL . NOT
    (59) EL -> TL .
    (60) TL -> TL . AND FL

    NOT             shift and go to state 66
    THEN            reduce using rule 59 (EL -> TL .)
    LET             reduce using rule 59 (EL -> TL .)
    PRINT           reduce using rule 59 (EL -> TL .)
    INPUT           reduce using rule 59 (EL -> TL .)
    CLS             reduce using rule 59 (EL -> TL .)
    IF              reduce using rule 59 (EL -> TL .)
    WHILE           reduce using rule 59 (EL -> TL .)
    DO              reduce using rule 59 (EL -> TL .)
    FOR             reduce using rule 59 (EL -> TL .)
    GOSUB           reduce using rule 59 (EL -> TL .)
    WHEND           reduce using rule 59 (EL -> TL .)
    ENDO            reduce using rule 59 (EL -> TL .)
    OR              reduce using rule 59 (EL -> TL .)
    RPARENT         reduce using rule 59 (EL -> TL .)
    AND             shift and go to state 67


state 35

    (61) TL -> FL .

    THEN            reduce using rule 61 (TL -> FL .)
    LET             reduce using rule 61 (TL -> FL .)
    PRINT           reduce using rule 61 (TL -> FL .)
    INPUT           reduce using rule 61 (TL -> FL .)
    CLS             reduce using rule 61 (TL -> FL .)
    IF              reduce using rule 61 (TL -> FL .)
    WHILE           reduce using rule 61 (TL -> FL .)
    DO              reduce using rule 61 (TL -> FL .)
    FOR             reduce using rule 61 (TL -> FL .)
    GOSUB           reduce using rule 61 (TL -> FL .)
    WHEND           reduce using rule 61 (TL -> FL .)
    ENDO            reduce using rule 61 (TL -> FL .)
    OR              reduce using rule 61 (TL -> FL .)
    NOT             reduce using rule 61 (TL -> FL .)
    AND             reduce using rule 61 (TL -> FL .)
    RPARENT         reduce using rule 61 (TL -> FL .)


state 36

    (62) FL -> K . OPREL K
    (64) OPREL -> . LT
    (65) OPREL -> . LTE
    (66) OPREL -> . GT
    (67) OPREL -> . GTE
    (68) OPREL -> . NE
    (69) OPREL -> . EQUAL

    LT              shift and go to state 69
    LTE             shift and go to state 70
    GT              shift and go to state 71
    GTE             shift and go to state 72
    NE              shift and go to state 73
    EQUAL           shift and go to state 74

    OPREL                          shift and go to state 68

state 37

    (63) FL -> LPARENT . EL RPARENT
    (57) EL -> . EL OR TL
    (58) EL -> . TL NOT
    (59) EL -> . TL
    (60) TL -> . TL AND FL
    (61) TL -> . FL
    (62) FL -> . K OPREL K
    (63) FL -> . LPARENT EL RPARENT
    (70) K -> . ID
    (71) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 75
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 38

    (70) K -> ID .

    LT              reduce using rule 70 (K -> ID .)
    LTE             reduce using rule 70 (K -> ID .)
    GT              reduce using rule 70 (K -> ID .)
    GTE             reduce using rule 70 (K -> ID .)
    NE              reduce using rule 70 (K -> ID .)
    EQUAL           reduce using rule 70 (K -> ID .)
    THEN            reduce using rule 70 (K -> ID .)
    LET             reduce using rule 70 (K -> ID .)
    PRINT           reduce using rule 70 (K -> ID .)
    INPUT           reduce using rule 70 (K -> ID .)
    CLS             reduce using rule 70 (K -> ID .)
    IF              reduce using rule 70 (K -> ID .)
    WHILE           reduce using rule 70 (K -> ID .)
    DO              reduce using rule 70 (K -> ID .)
    FOR             reduce using rule 70 (K -> ID .)
    GOSUB           reduce using rule 70 (K -> ID .)
    WHEND           reduce using rule 70 (K -> ID .)
    ENDO            reduce using rule 70 (K -> ID .)
    OR              reduce using rule 70 (K -> ID .)
    NOT             reduce using rule 70 (K -> ID .)
    AND             reduce using rule 70 (K -> ID .)
    RPARENT         reduce using rule 70 (K -> ID .)


state 39

    (71) K -> NUMBER .

    LT              reduce using rule 71 (K -> NUMBER .)
    LTE             reduce using rule 71 (K -> NUMBER .)
    GT              reduce using rule 71 (K -> NUMBER .)
    GTE             reduce using rule 71 (K -> NUMBER .)
    NE              reduce using rule 71 (K -> NUMBER .)
    EQUAL           reduce using rule 71 (K -> NUMBER .)
    THEN            reduce using rule 71 (K -> NUMBER .)
    LET             reduce using rule 71 (K -> NUMBER .)
    PRINT           reduce using rule 71 (K -> NUMBER .)
    INPUT           reduce using rule 71 (K -> NUMBER .)
    CLS             reduce using rule 71 (K -> NUMBER .)
    IF              reduce using rule 71 (K -> NUMBER .)
    WHILE           reduce using rule 71 (K -> NUMBER .)
    DO              reduce using rule 71 (K -> NUMBER .)
    FOR             reduce using rule 71 (K -> NUMBER .)
    GOSUB           reduce using rule 71 (K -> NUMBER .)
    WHEND           reduce using rule 71 (K -> NUMBER .)
    ENDO            reduce using rule 71 (K -> NUMBER .)
    OR              reduce using rule 71 (K -> NUMBER .)
    NOT             reduce using rule 71 (K -> NUMBER .)
    AND             reduce using rule 71 (K -> NUMBER .)
    RPARENT         reduce using rule 71 (K -> NUMBER .)


state 40

    (30) STATEMENTS -> WHILE EL . X WHEND
    (57) EL -> EL . OR TL
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    OR              shift and go to state 64
    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 76
    STATEMENTS                     shift and go to state 11

state 41

    (31) STATEMENTS -> DO X . LOOPUNTIL EL ENDO

    LOOPUNTIL       shift and go to state 77


state 42

    (32) STATEMENTS -> FOR ID . TO E X NEXT

    TO              shift and go to state 78


state 43

    (33) STATEMENTS -> GOSUB ID .

    SEMMICOLON      reduce using rule 33 (STATEMENTS -> GOSUB ID .)


state 44

    (17) SP -> SUBPROCEDURE ID X . ENDSUB SEMMICOLON SP

    ENDSUB          shift and go to state 79


state 45

    (2) VARIABLE -> DIM IDLIST AS TIPO . SEMMICOLON VARIABLE

    SEMMICOLON      shift and go to state 80


state 46

    (7) TIPO -> WORD .

    SEMMICOLON      reduce using rule 7 (TIPO -> WORD .)


state 47

    (8) TIPO -> FLOAT .

    SEMMICOLON      reduce using rule 8 (TIPO -> FLOAT .)


state 48

    (9) TIPO -> ARRAY . DCLARRAY
    (12) DCLARRAY -> . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 82

    DCLARRAY                       shift and go to state 81

state 49

    (10) TIPO -> MATRIX . DCLMATRIX
    (13) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 84

    DCLMATRIX                      shift and go to state 83

state 50

    (11) TIPO -> CUBE . DCLCUBE
    (14) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 86

    DCLCUBE                        shift and go to state 85

state 51

    (5) IDLIST -> IDLIST COMMA ID .

    AS              reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)
    COMMA           reduce using rule 5 (IDLIST -> IDLIST COMMA ID .)


state 52

    (1) program -> PROGRAM ID VARIABLE SP X END SEMMICOLON .

    $end            reduce using rule 1 (program -> PROGRAM ID VARIABLE SP X END SEMMICOLON .)


state 53

    (19) X -> STATEMENTS SEMMICOLON X .

    END             reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    ENDSUB          reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    ELSE            reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    ENDIF           reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    WHEND           reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    LOOPUNTIL       reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)
    NEXT            reduce using rule 19 (X -> STATEMENTS SEMMICOLON X .)


state 54

    (21) STATEMENTS -> LET U ASSIGN . E
    (48) E -> . E PLUS T
    (49) E -> . E MINUS T
    (50) E -> . T
    (51) T -> . T TIMES F
    (52) T -> . T DIVIDE F
    (53) T -> . F
    (54) F -> . NUMBER
    (55) F -> . U
    (56) F -> . LPARENT E RPARENT
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    NUMBER          shift and go to state 91
    LPARENT         shift and go to state 92
    ID              shift and go to state 27

    U                              shift and go to state 87
    E                              shift and go to state 88
    T                              shift and go to state 89
    F                              shift and go to state 90

state 55

    (35) U -> ID DCLARRAY .

    ASSIGN          reduce using rule 35 (U -> ID DCLARRAY .)
    PLUS            reduce using rule 35 (U -> ID DCLARRAY .)
    RPARENT         reduce using rule 35 (U -> ID DCLARRAY .)
    SEMMICOLON      reduce using rule 35 (U -> ID DCLARRAY .)
    LET             reduce using rule 35 (U -> ID DCLARRAY .)
    PRINT           reduce using rule 35 (U -> ID DCLARRAY .)
    INPUT           reduce using rule 35 (U -> ID DCLARRAY .)
    CLS             reduce using rule 35 (U -> ID DCLARRAY .)
    IF              reduce using rule 35 (U -> ID DCLARRAY .)
    WHILE           reduce using rule 35 (U -> ID DCLARRAY .)
    DO              reduce using rule 35 (U -> ID DCLARRAY .)
    FOR             reduce using rule 35 (U -> ID DCLARRAY .)
    GOSUB           reduce using rule 35 (U -> ID DCLARRAY .)
    NEXT            reduce using rule 35 (U -> ID DCLARRAY .)
    MINUS           reduce using rule 35 (U -> ID DCLARRAY .)
    TIMES           reduce using rule 35 (U -> ID DCLARRAY .)
    DIVIDE          reduce using rule 35 (U -> ID DCLARRAY .)


state 56

    (36) U -> ID DCLMATRIX .

    ASSIGN          reduce using rule 36 (U -> ID DCLMATRIX .)
    PLUS            reduce using rule 36 (U -> ID DCLMATRIX .)
    RPARENT         reduce using rule 36 (U -> ID DCLMATRIX .)
    SEMMICOLON      reduce using rule 36 (U -> ID DCLMATRIX .)
    LET             reduce using rule 36 (U -> ID DCLMATRIX .)
    PRINT           reduce using rule 36 (U -> ID DCLMATRIX .)
    INPUT           reduce using rule 36 (U -> ID DCLMATRIX .)
    CLS             reduce using rule 36 (U -> ID DCLMATRIX .)
    IF              reduce using rule 36 (U -> ID DCLMATRIX .)
    WHILE           reduce using rule 36 (U -> ID DCLMATRIX .)
    DO              reduce using rule 36 (U -> ID DCLMATRIX .)
    FOR             reduce using rule 36 (U -> ID DCLMATRIX .)
    GOSUB           reduce using rule 36 (U -> ID DCLMATRIX .)
    NEXT            reduce using rule 36 (U -> ID DCLMATRIX .)
    MINUS           reduce using rule 36 (U -> ID DCLMATRIX .)
    TIMES           reduce using rule 36 (U -> ID DCLMATRIX .)
    DIVIDE          reduce using rule 36 (U -> ID DCLMATRIX .)


state 57

    (37) U -> ID DCLCUBE .

    ASSIGN          reduce using rule 37 (U -> ID DCLCUBE .)
    PLUS            reduce using rule 37 (U -> ID DCLCUBE .)
    RPARENT         reduce using rule 37 (U -> ID DCLCUBE .)
    SEMMICOLON      reduce using rule 37 (U -> ID DCLCUBE .)
    LET             reduce using rule 37 (U -> ID DCLCUBE .)
    PRINT           reduce using rule 37 (U -> ID DCLCUBE .)
    INPUT           reduce using rule 37 (U -> ID DCLCUBE .)
    CLS             reduce using rule 37 (U -> ID DCLCUBE .)
    IF              reduce using rule 37 (U -> ID DCLCUBE .)
    WHILE           reduce using rule 37 (U -> ID DCLCUBE .)
    DO              reduce using rule 37 (U -> ID DCLCUBE .)
    FOR             reduce using rule 37 (U -> ID DCLCUBE .)
    GOSUB           reduce using rule 37 (U -> ID DCLCUBE .)
    NEXT            reduce using rule 37 (U -> ID DCLCUBE .)
    MINUS           reduce using rule 37 (U -> ID DCLCUBE .)
    TIMES           reduce using rule 37 (U -> ID DCLCUBE .)
    DIVIDE          reduce using rule 37 (U -> ID DCLCUBE .)


state 58

    (12) DCLARRAY -> LBRACKET . Z RBRACKET
    (13) DCLMATRIX -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (14) DCLCUBE -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 93

state 59

    (38) Q -> LPARENT VAR . RPARENT

    RPARENT         shift and go to state 96


state 60

    (40) TEXT -> LPARENT STRING . H RPARENT
    (42) H -> . PLUS STRING H
    (43) H -> . PLUS U H
    (44) H -> .

    PLUS            shift and go to state 98
    RPARENT         reduce using rule 44 (H -> .)

    H                              shift and go to state 97

state 61

    (24) VAR -> ID .
    (25) VAR -> ID . DCLARRAY
    (26) VAR -> ID . DCLMATRIX
    (27) VAR -> ID . DCLCUBE
    (12) DCLARRAY -> . LBRACKET Z RBRACKET
    (13) DCLMATRIX -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (14) DCLCUBE -> . LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 24 (VAR -> ID .)
    RPARENT         reduce using rule 24 (VAR -> ID .)
    LBRACKET        shift and go to state 58

    DCLARRAY                       shift and go to state 99
    DCLMATRIX                      shift and go to state 100
    DCLCUBE                        shift and go to state 101

state 62

    (23) STATEMENTS -> INPUT TEXT GTGT . VAR
    (24) VAR -> . ID
    (25) VAR -> . ID DCLARRAY
    (26) VAR -> . ID DCLMATRIX
    (27) VAR -> . ID DCLCUBE

    ID              shift and go to state 61

    VAR                            shift and go to state 102

state 63

    (29) STATEMENTS -> IF EL THEN1 . X ELSE1 ENDIF
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 103
    STATEMENTS                     shift and go to state 11

state 64

    (57) EL -> EL OR . TL
    (60) TL -> . TL AND FL
    (61) TL -> . FL
    (62) FL -> . K OPREL K
    (63) FL -> . LPARENT EL RPARENT
    (70) K -> . ID
    (71) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    TL                             shift and go to state 104
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 65

    (46) THEN1 -> THEN .

    LET             reduce using rule 46 (THEN1 -> THEN .)
    PRINT           reduce using rule 46 (THEN1 -> THEN .)
    INPUT           reduce using rule 46 (THEN1 -> THEN .)
    CLS             reduce using rule 46 (THEN1 -> THEN .)
    IF              reduce using rule 46 (THEN1 -> THEN .)
    WHILE           reduce using rule 46 (THEN1 -> THEN .)
    DO              reduce using rule 46 (THEN1 -> THEN .)
    FOR             reduce using rule 46 (THEN1 -> THEN .)
    GOSUB           reduce using rule 46 (THEN1 -> THEN .)
    ELSE            reduce using rule 46 (THEN1 -> THEN .)
    ENDIF           reduce using rule 46 (THEN1 -> THEN .)


state 66

    (58) EL -> TL NOT .

    THEN            reduce using rule 58 (EL -> TL NOT .)
    LET             reduce using rule 58 (EL -> TL NOT .)
    PRINT           reduce using rule 58 (EL -> TL NOT .)
    INPUT           reduce using rule 58 (EL -> TL NOT .)
    CLS             reduce using rule 58 (EL -> TL NOT .)
    IF              reduce using rule 58 (EL -> TL NOT .)
    WHILE           reduce using rule 58 (EL -> TL NOT .)
    DO              reduce using rule 58 (EL -> TL NOT .)
    FOR             reduce using rule 58 (EL -> TL NOT .)
    GOSUB           reduce using rule 58 (EL -> TL NOT .)
    WHEND           reduce using rule 58 (EL -> TL NOT .)
    ENDO            reduce using rule 58 (EL -> TL NOT .)
    OR              reduce using rule 58 (EL -> TL NOT .)
    RPARENT         reduce using rule 58 (EL -> TL NOT .)


state 67

    (60) TL -> TL AND . FL
    (62) FL -> . K OPREL K
    (63) FL -> . LPARENT EL RPARENT
    (70) K -> . ID
    (71) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    FL                             shift and go to state 105
    K                              shift and go to state 36

state 68

    (62) FL -> K OPREL . K
    (70) K -> . ID
    (71) K -> . NUMBER

    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    K                              shift and go to state 106

state 69

    (64) OPREL -> LT .

    ID              reduce using rule 64 (OPREL -> LT .)
    NUMBER          reduce using rule 64 (OPREL -> LT .)


state 70

    (65) OPREL -> LTE .

    ID              reduce using rule 65 (OPREL -> LTE .)
    NUMBER          reduce using rule 65 (OPREL -> LTE .)


state 71

    (66) OPREL -> GT .

    ID              reduce using rule 66 (OPREL -> GT .)
    NUMBER          reduce using rule 66 (OPREL -> GT .)


state 72

    (67) OPREL -> GTE .

    ID              reduce using rule 67 (OPREL -> GTE .)
    NUMBER          reduce using rule 67 (OPREL -> GTE .)


state 73

    (68) OPREL -> NE .

    ID              reduce using rule 68 (OPREL -> NE .)
    NUMBER          reduce using rule 68 (OPREL -> NE .)


state 74

    (69) OPREL -> EQUAL .

    ID              reduce using rule 69 (OPREL -> EQUAL .)
    NUMBER          reduce using rule 69 (OPREL -> EQUAL .)


state 75

    (63) FL -> LPARENT EL . RPARENT
    (57) EL -> EL . OR TL

    RPARENT         shift and go to state 107
    OR              shift and go to state 64


state 76

    (30) STATEMENTS -> WHILE EL X . WHEND

    WHEND           shift and go to state 108


state 77

    (31) STATEMENTS -> DO X LOOPUNTIL . EL ENDO
    (57) EL -> . EL OR TL
    (58) EL -> . TL NOT
    (59) EL -> . TL
    (60) TL -> . TL AND FL
    (61) TL -> . FL
    (62) FL -> . K OPREL K
    (63) FL -> . LPARENT EL RPARENT
    (70) K -> . ID
    (71) K -> . NUMBER

    LPARENT         shift and go to state 37
    ID              shift and go to state 38
    NUMBER          shift and go to state 39

    EL                             shift and go to state 109
    TL                             shift and go to state 34
    FL                             shift and go to state 35
    K                              shift and go to state 36

state 78

    (32) STATEMENTS -> FOR ID TO . E X NEXT
    (48) E -> . E PLUS T
    (49) E -> . E MINUS T
    (50) E -> . T
    (51) T -> . T TIMES F
    (52) T -> . T DIVIDE F
    (53) T -> . F
    (54) F -> . NUMBER
    (55) F -> . U
    (56) F -> . LPARENT E RPARENT
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    NUMBER          shift and go to state 91
    LPARENT         shift and go to state 92
    ID              shift and go to state 27

    E                              shift and go to state 110
    T                              shift and go to state 89
    F                              shift and go to state 90
    U                              shift and go to state 87

state 79

    (17) SP -> SUBPROCEDURE ID X ENDSUB . SEMMICOLON SP

    SEMMICOLON      shift and go to state 111


state 80

    (2) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON . VARIABLE
    (2) VARIABLE -> . DIM IDLIST AS TIPO SEMMICOLON VARIABLE
    (3) VARIABLE -> .

    DIM             shift and go to state 5
    SUBPROCEDURE    reduce using rule 3 (VARIABLE -> .)
    LET             reduce using rule 3 (VARIABLE -> .)
    PRINT           reduce using rule 3 (VARIABLE -> .)
    INPUT           reduce using rule 3 (VARIABLE -> .)
    CLS             reduce using rule 3 (VARIABLE -> .)
    IF              reduce using rule 3 (VARIABLE -> .)
    WHILE           reduce using rule 3 (VARIABLE -> .)
    DO              reduce using rule 3 (VARIABLE -> .)
    FOR             reduce using rule 3 (VARIABLE -> .)
    GOSUB           reduce using rule 3 (VARIABLE -> .)
    END             reduce using rule 3 (VARIABLE -> .)

    VARIABLE                       shift and go to state 112

state 81

    (9) TIPO -> ARRAY DCLARRAY .

    SEMMICOLON      reduce using rule 9 (TIPO -> ARRAY DCLARRAY .)


state 82

    (12) DCLARRAY -> LBRACKET . Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 113

state 83

    (10) TIPO -> MATRIX DCLMATRIX .

    SEMMICOLON      reduce using rule 10 (TIPO -> MATRIX DCLMATRIX .)


state 84

    (13) DCLMATRIX -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 114

state 85

    (11) TIPO -> CUBE DCLCUBE .

    SEMMICOLON      reduce using rule 11 (TIPO -> CUBE DCLCUBE .)


state 86

    (14) DCLCUBE -> LBRACKET . Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 115

state 87

    (55) F -> U .

    SEMMICOLON      reduce using rule 55 (F -> U .)
    LET             reduce using rule 55 (F -> U .)
    PRINT           reduce using rule 55 (F -> U .)
    INPUT           reduce using rule 55 (F -> U .)
    CLS             reduce using rule 55 (F -> U .)
    IF              reduce using rule 55 (F -> U .)
    WHILE           reduce using rule 55 (F -> U .)
    DO              reduce using rule 55 (F -> U .)
    FOR             reduce using rule 55 (F -> U .)
    GOSUB           reduce using rule 55 (F -> U .)
    NEXT            reduce using rule 55 (F -> U .)
    PLUS            reduce using rule 55 (F -> U .)
    MINUS           reduce using rule 55 (F -> U .)
    TIMES           reduce using rule 55 (F -> U .)
    DIVIDE          reduce using rule 55 (F -> U .)
    RPARENT         reduce using rule 55 (F -> U .)


state 88

    (21) STATEMENTS -> LET U ASSIGN E .
    (48) E -> E . PLUS T
    (49) E -> E . MINUS T

    SEMMICOLON      reduce using rule 21 (STATEMENTS -> LET U ASSIGN E .)
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117


state 89

    (50) E -> T .
    (51) T -> T . TIMES F
    (52) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 50 (E -> T .)
    LET             reduce using rule 50 (E -> T .)
    PRINT           reduce using rule 50 (E -> T .)
    INPUT           reduce using rule 50 (E -> T .)
    CLS             reduce using rule 50 (E -> T .)
    IF              reduce using rule 50 (E -> T .)
    WHILE           reduce using rule 50 (E -> T .)
    DO              reduce using rule 50 (E -> T .)
    FOR             reduce using rule 50 (E -> T .)
    GOSUB           reduce using rule 50 (E -> T .)
    NEXT            reduce using rule 50 (E -> T .)
    PLUS            reduce using rule 50 (E -> T .)
    MINUS           reduce using rule 50 (E -> T .)
    RPARENT         reduce using rule 50 (E -> T .)
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 119


state 90

    (53) T -> F .

    SEMMICOLON      reduce using rule 53 (T -> F .)
    LET             reduce using rule 53 (T -> F .)
    PRINT           reduce using rule 53 (T -> F .)
    INPUT           reduce using rule 53 (T -> F .)
    CLS             reduce using rule 53 (T -> F .)
    IF              reduce using rule 53 (T -> F .)
    WHILE           reduce using rule 53 (T -> F .)
    DO              reduce using rule 53 (T -> F .)
    FOR             reduce using rule 53 (T -> F .)
    GOSUB           reduce using rule 53 (T -> F .)
    NEXT            reduce using rule 53 (T -> F .)
    PLUS            reduce using rule 53 (T -> F .)
    MINUS           reduce using rule 53 (T -> F .)
    TIMES           reduce using rule 53 (T -> F .)
    DIVIDE          reduce using rule 53 (T -> F .)
    RPARENT         reduce using rule 53 (T -> F .)


state 91

    (54) F -> NUMBER .

    SEMMICOLON      reduce using rule 54 (F -> NUMBER .)
    LET             reduce using rule 54 (F -> NUMBER .)
    PRINT           reduce using rule 54 (F -> NUMBER .)
    INPUT           reduce using rule 54 (F -> NUMBER .)
    CLS             reduce using rule 54 (F -> NUMBER .)
    IF              reduce using rule 54 (F -> NUMBER .)
    WHILE           reduce using rule 54 (F -> NUMBER .)
    DO              reduce using rule 54 (F -> NUMBER .)
    FOR             reduce using rule 54 (F -> NUMBER .)
    GOSUB           reduce using rule 54 (F -> NUMBER .)
    NEXT            reduce using rule 54 (F -> NUMBER .)
    PLUS            reduce using rule 54 (F -> NUMBER .)
    MINUS           reduce using rule 54 (F -> NUMBER .)
    TIMES           reduce using rule 54 (F -> NUMBER .)
    DIVIDE          reduce using rule 54 (F -> NUMBER .)
    RPARENT         reduce using rule 54 (F -> NUMBER .)


state 92

    (56) F -> LPARENT . E RPARENT
    (48) E -> . E PLUS T
    (49) E -> . E MINUS T
    (50) E -> . T
    (51) T -> . T TIMES F
    (52) T -> . T DIVIDE F
    (53) T -> . F
    (54) F -> . NUMBER
    (55) F -> . U
    (56) F -> . LPARENT E RPARENT
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    NUMBER          shift and go to state 91
    LPARENT         shift and go to state 92
    ID              shift and go to state 27

    E                              shift and go to state 120
    T                              shift and go to state 89
    F                              shift and go to state 90
    U                              shift and go to state 87

state 93

    (12) DCLARRAY -> LBRACKET Z . RBRACKET
    (13) DCLMATRIX -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET
    (14) DCLCUBE -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 121


state 94

    (15) Z -> NUMBER .

    RBRACKET        reduce using rule 15 (Z -> NUMBER .)


state 95

    (16) Z -> ID .

    RBRACKET        reduce using rule 16 (Z -> ID .)


state 96

    (38) Q -> LPARENT VAR RPARENT .

    SEMMICOLON      reduce using rule 38 (Q -> LPARENT VAR RPARENT .)


state 97

    (40) TEXT -> LPARENT STRING H . RPARENT

    RPARENT         shift and go to state 122


state 98

    (42) H -> PLUS . STRING H
    (43) H -> PLUS . U H
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    STRING          shift and go to state 123
    ID              shift and go to state 27

    U                              shift and go to state 124

state 99

    (25) VAR -> ID DCLARRAY .

    SEMMICOLON      reduce using rule 25 (VAR -> ID DCLARRAY .)
    RPARENT         reduce using rule 25 (VAR -> ID DCLARRAY .)


state 100

    (26) VAR -> ID DCLMATRIX .

    SEMMICOLON      reduce using rule 26 (VAR -> ID DCLMATRIX .)
    RPARENT         reduce using rule 26 (VAR -> ID DCLMATRIX .)


state 101

    (27) VAR -> ID DCLCUBE .

    SEMMICOLON      reduce using rule 27 (VAR -> ID DCLCUBE .)
    RPARENT         reduce using rule 27 (VAR -> ID DCLCUBE .)


state 102

    (23) STATEMENTS -> INPUT TEXT GTGT VAR .

    SEMMICOLON      reduce using rule 23 (STATEMENTS -> INPUT TEXT GTGT VAR .)


state 103

    (29) STATEMENTS -> IF EL THEN1 X . ELSE1 ENDIF
    (45) ELSE1 -> . ELSE X
    (47) ELSE1 -> .

    ELSE            shift and go to state 126
    ENDIF           reduce using rule 47 (ELSE1 -> .)

    ELSE1                          shift and go to state 125

state 104

    (57) EL -> EL OR TL .
    (60) TL -> TL . AND FL

    THEN            reduce using rule 57 (EL -> EL OR TL .)
    LET             reduce using rule 57 (EL -> EL OR TL .)
    PRINT           reduce using rule 57 (EL -> EL OR TL .)
    INPUT           reduce using rule 57 (EL -> EL OR TL .)
    CLS             reduce using rule 57 (EL -> EL OR TL .)
    IF              reduce using rule 57 (EL -> EL OR TL .)
    WHILE           reduce using rule 57 (EL -> EL OR TL .)
    DO              reduce using rule 57 (EL -> EL OR TL .)
    FOR             reduce using rule 57 (EL -> EL OR TL .)
    GOSUB           reduce using rule 57 (EL -> EL OR TL .)
    WHEND           reduce using rule 57 (EL -> EL OR TL .)
    ENDO            reduce using rule 57 (EL -> EL OR TL .)
    OR              reduce using rule 57 (EL -> EL OR TL .)
    RPARENT         reduce using rule 57 (EL -> EL OR TL .)
    AND             shift and go to state 67


state 105

    (60) TL -> TL AND FL .

    THEN            reduce using rule 60 (TL -> TL AND FL .)
    LET             reduce using rule 60 (TL -> TL AND FL .)
    PRINT           reduce using rule 60 (TL -> TL AND FL .)
    INPUT           reduce using rule 60 (TL -> TL AND FL .)
    CLS             reduce using rule 60 (TL -> TL AND FL .)
    IF              reduce using rule 60 (TL -> TL AND FL .)
    WHILE           reduce using rule 60 (TL -> TL AND FL .)
    DO              reduce using rule 60 (TL -> TL AND FL .)
    FOR             reduce using rule 60 (TL -> TL AND FL .)
    GOSUB           reduce using rule 60 (TL -> TL AND FL .)
    WHEND           reduce using rule 60 (TL -> TL AND FL .)
    ENDO            reduce using rule 60 (TL -> TL AND FL .)
    OR              reduce using rule 60 (TL -> TL AND FL .)
    NOT             reduce using rule 60 (TL -> TL AND FL .)
    AND             reduce using rule 60 (TL -> TL AND FL .)
    RPARENT         reduce using rule 60 (TL -> TL AND FL .)


state 106

    (62) FL -> K OPREL K .

    THEN            reduce using rule 62 (FL -> K OPREL K .)
    LET             reduce using rule 62 (FL -> K OPREL K .)
    PRINT           reduce using rule 62 (FL -> K OPREL K .)
    INPUT           reduce using rule 62 (FL -> K OPREL K .)
    CLS             reduce using rule 62 (FL -> K OPREL K .)
    IF              reduce using rule 62 (FL -> K OPREL K .)
    WHILE           reduce using rule 62 (FL -> K OPREL K .)
    DO              reduce using rule 62 (FL -> K OPREL K .)
    FOR             reduce using rule 62 (FL -> K OPREL K .)
    GOSUB           reduce using rule 62 (FL -> K OPREL K .)
    WHEND           reduce using rule 62 (FL -> K OPREL K .)
    ENDO            reduce using rule 62 (FL -> K OPREL K .)
    OR              reduce using rule 62 (FL -> K OPREL K .)
    NOT             reduce using rule 62 (FL -> K OPREL K .)
    AND             reduce using rule 62 (FL -> K OPREL K .)
    RPARENT         reduce using rule 62 (FL -> K OPREL K .)


state 107

    (63) FL -> LPARENT EL RPARENT .

    THEN            reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    LET             reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    PRINT           reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    INPUT           reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    CLS             reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    IF              reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    WHILE           reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    DO              reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    FOR             reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    GOSUB           reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    WHEND           reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    ENDO            reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    OR              reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    NOT             reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    AND             reduce using rule 63 (FL -> LPARENT EL RPARENT .)
    RPARENT         reduce using rule 63 (FL -> LPARENT EL RPARENT .)


state 108

    (30) STATEMENTS -> WHILE EL X WHEND .

    SEMMICOLON      reduce using rule 30 (STATEMENTS -> WHILE EL X WHEND .)


state 109

    (31) STATEMENTS -> DO X LOOPUNTIL EL . ENDO
    (57) EL -> EL . OR TL

    ENDO            shift and go to state 127
    OR              shift and go to state 64


state 110

    (32) STATEMENTS -> FOR ID TO E . X NEXT
    (48) E -> E . PLUS T
    (49) E -> E . MINUS T
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    PLUS            shift and go to state 116
    MINUS           shift and go to state 117
    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 128
    STATEMENTS                     shift and go to state 11

state 111

    (17) SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON . SP
    (17) SP -> . SUBPROCEDURE ID X ENDSUB SEMMICOLON SP
    (18) SP -> .

    SUBPROCEDURE    shift and go to state 7
    LET             reduce using rule 18 (SP -> .)
    PRINT           reduce using rule 18 (SP -> .)
    INPUT           reduce using rule 18 (SP -> .)
    CLS             reduce using rule 18 (SP -> .)
    IF              reduce using rule 18 (SP -> .)
    WHILE           reduce using rule 18 (SP -> .)
    DO              reduce using rule 18 (SP -> .)
    FOR             reduce using rule 18 (SP -> .)
    GOSUB           reduce using rule 18 (SP -> .)
    END             reduce using rule 18 (SP -> .)

    SP                             shift and go to state 129

state 112

    (2) VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .

    SUBPROCEDURE    reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    LET             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    PRINT           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    INPUT           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    CLS             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    IF              reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    WHILE           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    DO              reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    FOR             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    GOSUB           reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)
    END             reduce using rule 2 (VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE .)


state 113

    (12) DCLARRAY -> LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 130


state 114

    (13) DCLMATRIX -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 131


state 115

    (14) DCLCUBE -> LBRACKET Z . RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 132


state 116

    (48) E -> E PLUS . T
    (51) T -> . T TIMES F
    (52) T -> . T DIVIDE F
    (53) T -> . F
    (54) F -> . NUMBER
    (55) F -> . U
    (56) F -> . LPARENT E RPARENT
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    NUMBER          shift and go to state 91
    LPARENT         shift and go to state 92
    ID              shift and go to state 27

    T                              shift and go to state 133
    F                              shift and go to state 90
    U                              shift and go to state 87

state 117

    (49) E -> E MINUS . T
    (51) T -> . T TIMES F
    (52) T -> . T DIVIDE F
    (53) T -> . F
    (54) F -> . NUMBER
    (55) F -> . U
    (56) F -> . LPARENT E RPARENT
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    NUMBER          shift and go to state 91
    LPARENT         shift and go to state 92
    ID              shift and go to state 27

    T                              shift and go to state 134
    F                              shift and go to state 90
    U                              shift and go to state 87

state 118

    (51) T -> T TIMES . F
    (54) F -> . NUMBER
    (55) F -> . U
    (56) F -> . LPARENT E RPARENT
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    NUMBER          shift and go to state 91
    LPARENT         shift and go to state 92
    ID              shift and go to state 27

    F                              shift and go to state 135
    U                              shift and go to state 87

state 119

    (52) T -> T DIVIDE . F
    (54) F -> . NUMBER
    (55) F -> . U
    (56) F -> . LPARENT E RPARENT
    (34) U -> . ID
    (35) U -> . ID DCLARRAY
    (36) U -> . ID DCLMATRIX
    (37) U -> . ID DCLCUBE

    NUMBER          shift and go to state 91
    LPARENT         shift and go to state 92
    ID              shift and go to state 27

    F                              shift and go to state 136
    U                              shift and go to state 87

state 120

    (56) F -> LPARENT E . RPARENT
    (48) E -> E . PLUS T
    (49) E -> E . MINUS T

    RPARENT         shift and go to state 137
    PLUS            shift and go to state 116
    MINUS           shift and go to state 117


state 121

    (12) DCLARRAY -> LBRACKET Z RBRACKET .
    (13) DCLMATRIX -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET
    (14) DCLCUBE -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    LET             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    CLS             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    IF              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DO              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    FOR             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    LBRACKET        shift and go to state 138


state 122

    (40) TEXT -> LPARENT STRING H RPARENT .

    GTGT            reduce using rule 40 (TEXT -> LPARENT STRING H RPARENT .)
    SEMMICOLON      reduce using rule 40 (TEXT -> LPARENT STRING H RPARENT .)


state 123

    (42) H -> PLUS STRING . H
    (42) H -> . PLUS STRING H
    (43) H -> . PLUS U H
    (44) H -> .

    PLUS            shift and go to state 98
    RPARENT         reduce using rule 44 (H -> .)

    H                              shift and go to state 139

state 124

    (43) H -> PLUS U . H
    (42) H -> . PLUS STRING H
    (43) H -> . PLUS U H
    (44) H -> .

    PLUS            shift and go to state 98
    RPARENT         reduce using rule 44 (H -> .)

    H                              shift and go to state 140

state 125

    (29) STATEMENTS -> IF EL THEN1 X ELSE1 . ENDIF

    ENDIF           shift and go to state 141


state 126

    (45) ELSE1 -> ELSE . X
    (19) X -> . STATEMENTS SEMMICOLON X
    (20) X -> .
    (21) STATEMENTS -> . LET U ASSIGN E
    (22) STATEMENTS -> . PRINT Q
    (23) STATEMENTS -> . INPUT TEXT GTGT VAR
    (28) STATEMENTS -> . CLS
    (29) STATEMENTS -> . IF EL THEN1 X ELSE1 ENDIF
    (30) STATEMENTS -> . WHILE EL X WHEND
    (31) STATEMENTS -> . DO X LOOPUNTIL EL ENDO
    (32) STATEMENTS -> . FOR ID TO E X NEXT
    (33) STATEMENTS -> . GOSUB ID

    END             reduce using rule 20 (X -> .)
    ENDSUB          reduce using rule 20 (X -> .)
    ELSE            reduce using rule 20 (X -> .)
    ENDIF           reduce using rule 20 (X -> .)
    WHEND           reduce using rule 20 (X -> .)
    LOOPUNTIL       reduce using rule 20 (X -> .)
    NEXT            reduce using rule 20 (X -> .)
    LET             shift and go to state 12
    PRINT           shift and go to state 13
    INPUT           shift and go to state 14
    CLS             shift and go to state 15
    IF              shift and go to state 16
    WHILE           shift and go to state 17
    DO              shift and go to state 18
    FOR             shift and go to state 19
    GOSUB           shift and go to state 20

    X                              shift and go to state 142
    STATEMENTS                     shift and go to state 11

state 127

    (31) STATEMENTS -> DO X LOOPUNTIL EL ENDO .

    SEMMICOLON      reduce using rule 31 (STATEMENTS -> DO X LOOPUNTIL EL ENDO .)


state 128

    (32) STATEMENTS -> FOR ID TO E X . NEXT

    NEXT            shift and go to state 143


state 129

    (17) SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .

    LET             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    PRINT           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    INPUT           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    CLS             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    IF              reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    WHILE           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    DO              reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    FOR             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    GOSUB           reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)
    END             reduce using rule 17 (SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP .)


state 130

    (12) DCLARRAY -> LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    LET             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    CLS             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    IF              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DO              reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    FOR             reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 12 (DCLARRAY -> LBRACKET Z RBRACKET .)


state 131

    (13) DCLMATRIX -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 144


state 132

    (14) DCLCUBE -> LBRACKET Z RBRACKET . LBRACKET Z RBRACKET LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 145


state 133

    (48) E -> E PLUS T .
    (51) T -> T . TIMES F
    (52) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 48 (E -> E PLUS T .)
    LET             reduce using rule 48 (E -> E PLUS T .)
    PRINT           reduce using rule 48 (E -> E PLUS T .)
    INPUT           reduce using rule 48 (E -> E PLUS T .)
    CLS             reduce using rule 48 (E -> E PLUS T .)
    IF              reduce using rule 48 (E -> E PLUS T .)
    WHILE           reduce using rule 48 (E -> E PLUS T .)
    DO              reduce using rule 48 (E -> E PLUS T .)
    FOR             reduce using rule 48 (E -> E PLUS T .)
    GOSUB           reduce using rule 48 (E -> E PLUS T .)
    NEXT            reduce using rule 48 (E -> E PLUS T .)
    PLUS            reduce using rule 48 (E -> E PLUS T .)
    MINUS           reduce using rule 48 (E -> E PLUS T .)
    RPARENT         reduce using rule 48 (E -> E PLUS T .)
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 119


state 134

    (49) E -> E MINUS T .
    (51) T -> T . TIMES F
    (52) T -> T . DIVIDE F

    SEMMICOLON      reduce using rule 49 (E -> E MINUS T .)
    LET             reduce using rule 49 (E -> E MINUS T .)
    PRINT           reduce using rule 49 (E -> E MINUS T .)
    INPUT           reduce using rule 49 (E -> E MINUS T .)
    CLS             reduce using rule 49 (E -> E MINUS T .)
    IF              reduce using rule 49 (E -> E MINUS T .)
    WHILE           reduce using rule 49 (E -> E MINUS T .)
    DO              reduce using rule 49 (E -> E MINUS T .)
    FOR             reduce using rule 49 (E -> E MINUS T .)
    GOSUB           reduce using rule 49 (E -> E MINUS T .)
    NEXT            reduce using rule 49 (E -> E MINUS T .)
    PLUS            reduce using rule 49 (E -> E MINUS T .)
    MINUS           reduce using rule 49 (E -> E MINUS T .)
    RPARENT         reduce using rule 49 (E -> E MINUS T .)
    TIMES           shift and go to state 118
    DIVIDE          shift and go to state 119


state 135

    (51) T -> T TIMES F .

    SEMMICOLON      reduce using rule 51 (T -> T TIMES F .)
    LET             reduce using rule 51 (T -> T TIMES F .)
    PRINT           reduce using rule 51 (T -> T TIMES F .)
    INPUT           reduce using rule 51 (T -> T TIMES F .)
    CLS             reduce using rule 51 (T -> T TIMES F .)
    IF              reduce using rule 51 (T -> T TIMES F .)
    WHILE           reduce using rule 51 (T -> T TIMES F .)
    DO              reduce using rule 51 (T -> T TIMES F .)
    FOR             reduce using rule 51 (T -> T TIMES F .)
    GOSUB           reduce using rule 51 (T -> T TIMES F .)
    NEXT            reduce using rule 51 (T -> T TIMES F .)
    PLUS            reduce using rule 51 (T -> T TIMES F .)
    MINUS           reduce using rule 51 (T -> T TIMES F .)
    TIMES           reduce using rule 51 (T -> T TIMES F .)
    DIVIDE          reduce using rule 51 (T -> T TIMES F .)
    RPARENT         reduce using rule 51 (T -> T TIMES F .)


state 136

    (52) T -> T DIVIDE F .

    SEMMICOLON      reduce using rule 52 (T -> T DIVIDE F .)
    LET             reduce using rule 52 (T -> T DIVIDE F .)
    PRINT           reduce using rule 52 (T -> T DIVIDE F .)
    INPUT           reduce using rule 52 (T -> T DIVIDE F .)
    CLS             reduce using rule 52 (T -> T DIVIDE F .)
    IF              reduce using rule 52 (T -> T DIVIDE F .)
    WHILE           reduce using rule 52 (T -> T DIVIDE F .)
    DO              reduce using rule 52 (T -> T DIVIDE F .)
    FOR             reduce using rule 52 (T -> T DIVIDE F .)
    GOSUB           reduce using rule 52 (T -> T DIVIDE F .)
    NEXT            reduce using rule 52 (T -> T DIVIDE F .)
    PLUS            reduce using rule 52 (T -> T DIVIDE F .)
    MINUS           reduce using rule 52 (T -> T DIVIDE F .)
    TIMES           reduce using rule 52 (T -> T DIVIDE F .)
    DIVIDE          reduce using rule 52 (T -> T DIVIDE F .)
    RPARENT         reduce using rule 52 (T -> T DIVIDE F .)


state 137

    (56) F -> LPARENT E RPARENT .

    SEMMICOLON      reduce using rule 56 (F -> LPARENT E RPARENT .)
    LET             reduce using rule 56 (F -> LPARENT E RPARENT .)
    PRINT           reduce using rule 56 (F -> LPARENT E RPARENT .)
    INPUT           reduce using rule 56 (F -> LPARENT E RPARENT .)
    CLS             reduce using rule 56 (F -> LPARENT E RPARENT .)
    IF              reduce using rule 56 (F -> LPARENT E RPARENT .)
    WHILE           reduce using rule 56 (F -> LPARENT E RPARENT .)
    DO              reduce using rule 56 (F -> LPARENT E RPARENT .)
    FOR             reduce using rule 56 (F -> LPARENT E RPARENT .)
    GOSUB           reduce using rule 56 (F -> LPARENT E RPARENT .)
    NEXT            reduce using rule 56 (F -> LPARENT E RPARENT .)
    PLUS            reduce using rule 56 (F -> LPARENT E RPARENT .)
    MINUS           reduce using rule 56 (F -> LPARENT E RPARENT .)
    TIMES           reduce using rule 56 (F -> LPARENT E RPARENT .)
    DIVIDE          reduce using rule 56 (F -> LPARENT E RPARENT .)
    RPARENT         reduce using rule 56 (F -> LPARENT E RPARENT .)


state 138

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 146

state 139

    (42) H -> PLUS STRING H .

    RPARENT         reduce using rule 42 (H -> PLUS STRING H .)


state 140

    (43) H -> PLUS U H .

    RPARENT         reduce using rule 43 (H -> PLUS U H .)


state 141

    (29) STATEMENTS -> IF EL THEN1 X ELSE1 ENDIF .

    SEMMICOLON      reduce using rule 29 (STATEMENTS -> IF EL THEN1 X ELSE1 ENDIF .)


state 142

    (45) ELSE1 -> ELSE X .

    ENDIF           reduce using rule 45 (ELSE1 -> ELSE X .)


state 143

    (32) STATEMENTS -> FOR ID TO E X NEXT .

    SEMMICOLON      reduce using rule 32 (STATEMENTS -> FOR ID TO E X NEXT .)


state 144

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 147

state 145

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET . Z RBRACKET LBRACKET Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 148

state 146

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET
    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 149


state 147

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 150


state 148

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z . RBRACKET LBRACKET Z RBRACKET

    RBRACKET        shift and go to state 151


state 149

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .
    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    SEMMICOLON      reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LET             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    CLS             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    IF              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    FOR             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LBRACKET        shift and go to state 152


state 150

    (13) DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LET             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    CLS             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    IF              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    FOR             reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 13 (DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)


state 151

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET . LBRACKET Z RBRACKET

    LBRACKET        shift and go to state 152


state 152

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET . Z RBRACKET
    (15) Z -> . NUMBER
    (16) Z -> . ID

    NUMBER          shift and go to state 94
    ID              shift and go to state 95

    Z                              shift and go to state 153

state 153

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z . RBRACKET

    RBRACKET        shift and go to state 154


state 154

    (14) DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .

    SEMMICOLON      reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    ASSIGN          reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    RPARENT         reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PLUS            reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    LET             reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    PRINT           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    INPUT           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    CLS             reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    IF              reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    WHILE           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DO              reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    FOR             reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    GOSUB           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    NEXT            reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    MINUS           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    TIMES           reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)
    DIVIDE          reduce using rule 14 (DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET .)

