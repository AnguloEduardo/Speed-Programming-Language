
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'SLR'

_lr_signature = 'AND ARRAY AS ASSIGN CLS COMMA CUBE DIM DIVIDE DO ELSE END ENDIF ENDO ENDSUB EQUAL FLOAT FOR GOSUB GT GTE GTGT ID IF INPUT LBRACKET LET LOOPUNTIL LPARENT LT LTE MATRIX MINUS NE NEXT NOT NUMBER OR PLUS PRINT PROGRAM RBRACKET RPARENT SEMMICOLON STRING SUBPROCEDURE THEN TIMES TO WHEND WHILE WORD\n\tprogram : PROGRAM ID VARIABLE SP X END SEMMICOLON\n\t\n\tVARIABLE : DIM IDLIST AS TIPO SEMMICOLON VARIABLE\n\t\n\tVARIABLE :\n\t\n\tIDLIST : ID\n\t\n\tIDLIST : IDLIST COMMA ID\n\t\n\tIDLIST :\n\t\n\tTIPO : WORD\n\t\n\tTIPO : FLOAT\n\t\n\tTIPO : ARRAY DCLARRAY\n\t\n\tTIPO : MATRIX DCLMATRIX\n\t\n\tTIPO : CUBE DCLCUBE\n\t\n\tDCLARRAY : LBRACKET Z RBRACKET\n\t\n\tDCLMATRIX : LBRACKET Z RBRACKET LBRACKET Z RBRACKET\n\t\n\tDCLCUBE : LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET\n\t\n\tZ : NUMBER\n\t| ID\n\t\n\tSP : SUBPROCEDURE ID X ENDSUB SEMMICOLON SP\n\t\n\tSP :\n\t\n\tX : STATEMENTS SEMMICOLON X\n\t\n\tX :\n\t\n\tSTATEMENTS : LET U ASSIGN E\n\t\n\tSTATEMENTS : PRINT Q\n\t\n\tSTATEMENTS : INPUT TEXT GTGT VAR\n\t\n\tVAR : ID\n\t| ID DCLARRAY\n\t| ID DCLMATRIX\n\t| ID DCLCUBE\n\t\n\tSTATEMENTS : CLS\n\t\n\tSTATEMENTS : IF EL THEN X ELSE1 ENDIF\n\t\n\tSTATEMENTS : WHILE EL X WHEND\n\t\n\tSTATEMENTS : DO X LOOPUNTIL EL ENDO\n\t\n\tSTATEMENTS : FOR ID TO E X NEXT\n\t\n\tSTATEMENTS : GOSUB ID\n\t\n\tU : ID\n\t\n\tU : ID DCLARRAY\n\t\n\tU : ID DCLMATRIX\n\t\n\tU : ID DCLCUBE\n\t\n\tQ : LPARENT VAR RPARENT\n\t\n\tQ : TEXT\n\t\n    TEXT : LPARENT STRING H RPARENT\n    \n\tTEXT :\n\t\n\tH : PLUS STRING H\n\t\n\tH : PLUS U H\n\t\n\tH :\n\t\n\tELSE1 : ELSE X\n\t\n\tELSE1 :\n\t\n\tE : E PLUS T\n\t| E MINUS T\n\t\n\tE : T\n\t\n\tT : T TIMES F\n\t| T DIVIDE F\n\t\n\tT : F\n\t\n\tF : NUMBER\n\t\n\tF : U\n\t\n\tF : LPARENT E RPARENT\n\t\n\tEL : EL OR TL\n\t\n\tEL : TL NOT\n\t| TL\n\t\n\tTL : TL AND FL\n\t\n\tTL : FL\n\t\n\tFL : K OPREL K\n\t\n\tFL : LPARENT EL RPARENT\n\t\n\tOPREL : LT\n\t| LTE\n\t| GT\n\t| GTE\n\t| NE\n\t| EQUAL\n\t\n\tK : ID\n\t\n\tK : NUMBER\n\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,52,],[0,-1,]),'ID':([2,5,7,12,16,17,19,20,23,29,37,54,58,62,64,66,67,68,69,70,71,72,73,76,77,81,83,85,91,97,115,116,117,118,137,143,144,151,],[3,9,21,27,38,38,42,43,51,61,38,27,94,61,38,38,38,-63,-64,-65,-66,-67,-68,38,27,94,94,94,27,27,27,27,27,27,94,94,94,94,]),'DIM':([3,79,],[5,5,]),'SUBPROCEDURE':([3,4,79,110,111,],[-3,7,-3,7,-2,]),'LET':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,12,12,12,12,-34,-58,-60,-69,-70,12,-35,-36,-37,12,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,12,-18,-2,-12,12,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'PRINT':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,13,13,13,13,-34,-58,-60,-69,-70,13,-35,-36,-37,13,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,13,-18,-2,-12,13,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'INPUT':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,14,14,14,14,-34,-58,-60,-69,-70,14,-35,-36,-37,14,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,14,-18,-2,-12,14,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'CLS':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,15,15,15,15,-34,-58,-60,-69,-70,15,-35,-36,-37,15,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,15,-18,-2,-12,15,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'IF':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,16,16,16,16,-34,-58,-60,-69,-70,16,-35,-36,-37,16,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,16,-18,-2,-12,16,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'WHILE':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,17,17,17,17,-34,-58,-60,-69,-70,17,-35,-36,-37,17,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,17,-18,-2,-12,17,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'DO':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,18,18,18,18,-34,-58,-60,-69,-70,18,-35,-36,-37,18,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,18,-18,-2,-12,18,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'FOR':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,19,19,19,19,-34,-58,-60,-69,-70,19,-35,-36,-37,19,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,19,-18,-2,-12,19,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'GOSUB':([3,4,6,18,21,25,27,34,35,38,39,40,55,56,57,63,65,79,86,88,89,90,103,104,105,106,109,110,111,120,125,128,129,132,133,134,135,136,148,149,153,],[-3,-18,20,20,20,20,-34,-58,-60,-69,-70,20,-35,-36,-37,20,-57,-3,-54,-49,-52,-53,-56,-59,-61,-62,20,-18,-2,-12,20,-17,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'END':([3,4,6,10,18,21,25,40,53,63,79,109,110,111,125,128,],[-3,-18,-20,24,-20,-20,-20,-20,-19,-20,-3,-20,-18,-2,-20,-17,]),'AS':([5,8,9,51,],[-6,22,-4,-5,]),'COMMA':([5,8,9,51,],[-6,23,-4,-5,]),'ENDSUB':([6,18,21,25,40,44,53,63,109,125,],[-20,-20,-20,-20,-20,78,-19,-20,-20,-20,]),'ELSE':([6,18,21,25,40,53,63,102,109,125,],[-20,-20,-20,-20,-20,-19,-20,125,-20,-20,]),'ENDIF':([6,18,21,25,40,53,63,102,109,124,125,141,],[-20,-20,-20,-20,-20,-19,-20,-46,-20,140,-20,-45,]),'WHEND':([6,18,21,25,34,35,38,39,40,53,63,65,75,103,104,105,106,109,125,],[-20,-20,-20,-20,-58,-60,-69,-70,-20,-19,-20,-57,107,-56,-59,-61,-62,-20,-20,]),'LOOPUNTIL':([6,18,21,25,40,41,53,63,109,125,],[-20,-20,-20,-20,-20,76,-19,-20,-20,-20,]),'NEXT':([6,18,21,25,27,40,53,55,56,57,63,86,88,89,90,109,120,125,127,129,132,133,134,135,136,148,149,153,],[-20,-20,-20,-20,-34,-20,-19,-35,-36,-37,-20,-54,-49,-52,-53,-20,-12,-20,142,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'SEMMICOLON':([11,13,14,15,24,27,28,30,43,45,46,47,55,56,57,61,78,80,82,84,86,87,88,89,90,95,98,99,100,101,107,120,121,126,129,132,133,134,135,136,140,142,148,149,153,],[25,-41,-41,-28,52,-34,-22,-39,-33,79,-7,-8,-35,-36,-37,-24,110,-9,-10,-11,-54,-21,-49,-52,-53,-38,-25,-26,-27,-23,-30,-12,-40,-31,-12,-47,-48,-50,-51,-55,-29,-32,-13,-13,-14,]),'LPARENT':([13,14,16,17,37,54,64,66,76,77,91,115,116,117,118,],[29,32,37,37,37,91,37,37,37,91,91,91,91,91,91,]),'GTGT':([13,14,31,121,],[-41,-41,62,-40,]),'NUMBER':([16,17,37,54,58,64,66,67,68,69,70,71,72,73,76,77,81,83,85,91,115,116,117,118,137,143,144,151,],[39,39,39,90,93,39,39,39,-63,-64,-65,-66,-67,-68,39,90,93,93,93,90,90,90,90,90,93,93,93,93,]),'WORD':([22,],[46,]),'FLOAT':([22,],[47,]),'ARRAY':([22,],[48,]),'MATRIX':([22,],[49,]),'CUBE':([22,],[50,]),'ASSIGN':([26,27,55,56,57,120,129,148,149,153,],[54,-34,-35,-36,-37,-12,-12,-13,-13,-14,]),'PLUS':([27,55,56,57,60,86,87,88,89,90,109,119,120,122,123,129,132,133,134,135,136,148,149,153,],[-34,-35,-36,-37,97,-54,115,-49,-52,-53,115,115,-12,97,97,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'RPARENT':([27,34,35,38,39,55,56,57,59,60,61,65,74,86,88,89,90,96,98,99,100,103,104,105,106,119,120,122,123,129,132,133,134,135,136,138,139,148,149,153,],[-34,-58,-60,-69,-70,-35,-36,-37,95,-44,-24,-57,106,-54,-49,-52,-53,121,-25,-26,-27,-56,-59,-61,-62,136,-12,-44,-44,-12,-47,-48,-50,-51,-55,-42,-43,-13,-13,-14,]),'MINUS':([27,55,56,57,86,87,88,89,90,109,119,120,129,132,133,134,135,136,148,149,153,],[-34,-35,-36,-37,-54,116,-49,-52,-53,116,116,-12,-12,-47,-48,-50,-51,-55,-13,-13,-14,]),'TIMES':([27,55,56,57,86,88,89,90,120,129,132,133,134,135,136,148,149,153,],[-34,-35,-36,-37,-54,117,-52,-53,-12,-12,117,117,-50,-51,-55,-13,-13,-14,]),'DIVIDE':([27,55,56,57,86,88,89,90,120,129,132,133,134,135,136,148,149,153,],[-34,-35,-36,-37,-54,118,-52,-53,-12,-12,118,118,-50,-51,-55,-13,-13,-14,]),'LBRACKET':([27,48,49,50,61,120,130,131,148,150,],[58,81,83,85,58,137,143,144,151,151,]),'STRING':([29,32,97,],[60,60,122,]),'THEN':([33,34,35,38,39,65,103,104,105,106,],[63,-58,-60,-69,-70,-57,-56,-59,-61,-62,]),'OR':([33,34,35,38,39,40,65,74,103,104,105,106,108,],[64,-58,-60,-69,-70,64,-57,64,-56,-59,-61,-62,64,]),'NOT':([34,35,38,39,104,105,106,],[65,-60,-69,-70,-59,-61,-62,]),'ENDO':([34,35,38,39,65,103,104,105,106,108,],[-58,-60,-69,-70,-57,-56,-59,-61,-62,126,]),'AND':([34,35,38,39,103,104,105,106,],[66,-60,-69,-70,66,-59,-61,-62,]),'LT':([36,38,39,],[68,-69,-70,]),'LTE':([36,38,39,],[69,-69,-70,]),'GT':([36,38,39,],[70,-69,-70,]),'GTE':([36,38,39,],[71,-69,-70,]),'NE':([36,38,39,],[72,-69,-70,]),'EQUAL':([36,38,39,],[73,-69,-70,]),'TO':([42,],[77,]),'RBRACKET':([92,93,94,112,113,114,145,146,147,152,],[120,-15,-16,129,130,131,148,149,150,153,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'VARIABLE':([3,79,],[4,111,]),'SP':([4,110,],[6,128,]),'IDLIST':([5,],[8,]),'X':([6,18,21,25,40,63,109,125,],[10,41,44,53,75,102,127,141,]),'STATEMENTS':([6,18,21,25,40,63,109,125,],[11,11,11,11,11,11,11,11,]),'U':([12,54,77,91,97,115,116,117,118,],[26,86,86,86,123,86,86,86,86,]),'Q':([13,],[28,]),'TEXT':([13,14,],[30,31,]),'EL':([16,17,37,76,],[33,40,74,108,]),'TL':([16,17,37,64,76,],[34,34,34,103,34,]),'FL':([16,17,37,64,66,76,],[35,35,35,35,104,35,]),'K':([16,17,37,64,66,67,76,],[36,36,36,36,36,105,36,]),'TIPO':([22,],[45,]),'DCLARRAY':([27,48,61,],[55,80,98,]),'DCLMATRIX':([27,49,61,],[56,82,99,]),'DCLCUBE':([27,50,61,],[57,84,100,]),'VAR':([29,62,],[59,101,]),'OPREL':([36,],[67,]),'E':([54,77,91,],[87,109,119,]),'T':([54,77,91,115,116,],[88,88,88,132,133,]),'F':([54,77,91,115,116,117,118,],[89,89,89,89,89,134,135,]),'Z':([58,81,83,85,137,143,144,151,],[92,112,113,114,145,146,147,152,]),'H':([60,122,123,],[96,138,139,]),'ELSE1':([102,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID VARIABLE SP X END SEMMICOLON','program',7,'p_PROGRAM','syntactic_analyser.py',24),
  ('VARIABLE -> DIM IDLIST AS TIPO SEMMICOLON VARIABLE','VARIABLE',6,'p_VARIABLE','syntactic_analyser.py',30),
  ('VARIABLE -> <empty>','VARIABLE',0,'p_VARIABLE_EMPTY','syntactic_analyser.py',36),
  ('IDLIST -> ID','IDLIST',1,'p_IDLIST','syntactic_analyser.py',41),
  ('IDLIST -> IDLIST COMMA ID','IDLIST',3,'p_IDLIST2','syntactic_analyser.py',47),
  ('IDLIST -> <empty>','IDLIST',0,'p_IDLIST_EMPTY','syntactic_analyser.py',54),
  ('TIPO -> WORD','TIPO',1,'p_TIPO_WORD','syntactic_analyser.py',59),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO_FLOAT','syntactic_analyser.py',65),
  ('TIPO -> ARRAY DCLARRAY','TIPO',2,'p_TIPO_ARRAY','syntactic_analyser.py',71),
  ('TIPO -> MATRIX DCLMATRIX','TIPO',2,'p_TIPO_MATRIX','syntactic_analyser.py',78),
  ('TIPO -> CUBE DCLCUBE','TIPO',2,'p_TIPO_CUBE','syntactic_analyser.py',85),
  ('DCLARRAY -> LBRACKET Z RBRACKET','DCLARRAY',3,'p_DCLARRAY','syntactic_analyser.py',92),
  ('DCLMATRIX -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET','DCLMATRIX',6,'p_DCLMATRIX','syntactic_analyser.py',98),
  ('DCLCUBE -> LBRACKET Z RBRACKET LBRACKET Z RBRACKET LBRACKET Z RBRACKET','DCLCUBE',9,'p_DCLCUBE','syntactic_analyser.py',104),
  ('Z -> NUMBER','Z',1,'p_Z','syntactic_analyser.py',110),
  ('Z -> ID','Z',1,'p_Z','syntactic_analyser.py',111),
  ('SP -> SUBPROCEDURE ID X ENDSUB SEMMICOLON SP','SP',6,'p_SP','syntactic_analyser.py',116),
  ('SP -> <empty>','SP',0,'p_SP_EMPTY','syntactic_analyser.py',122),
  ('X -> STATEMENTS SEMMICOLON X','X',3,'p_X','syntactic_analyser.py',127),
  ('X -> <empty>','X',0,'p_X1','syntactic_analyser.py',133),
  ('STATEMENTS -> LET U ASSIGN E','STATEMENTS',4,'p_STATEMENTS_LET','syntactic_analyser.py',138),
  ('STATEMENTS -> PRINT Q','STATEMENTS',2,'p_STATEMENTS_PRINT','syntactic_analyser.py',145),
  ('STATEMENTS -> INPUT TEXT GTGT VAR','STATEMENTS',4,'p_STATEMENTS_INPUT','syntactic_analyser.py',151),
  ('VAR -> ID','VAR',1,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',157),
  ('VAR -> ID DCLARRAY','VAR',2,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',158),
  ('VAR -> ID DCLMATRIX','VAR',2,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',159),
  ('VAR -> ID DCLCUBE','VAR',2,'p_STATEMENTS_INPUT_VAR','syntactic_analyser.py',160),
  ('STATEMENTS -> CLS','STATEMENTS',1,'p_STATEMENTS_CLS','syntactic_analyser.py',164),
  ('STATEMENTS -> IF EL THEN X ELSE1 ENDIF','STATEMENTS',6,'p_STATEMENTS_IF','syntactic_analyser.py',169),
  ('STATEMENTS -> WHILE EL X WHEND','STATEMENTS',4,'p_STATEMENTS_WHILE','syntactic_analyser.py',175),
  ('STATEMENTS -> DO X LOOPUNTIL EL ENDO','STATEMENTS',5,'p_STATEMENTS_DO','syntactic_analyser.py',181),
  ('STATEMENTS -> FOR ID TO E X NEXT','STATEMENTS',6,'p_STATEMENTS_FOR','syntactic_analyser.py',187),
  ('STATEMENTS -> GOSUB ID','STATEMENTS',2,'p_STATEMENTS_GOSUB','syntactic_analyser.py',193),
  ('U -> ID','U',1,'p_U','syntactic_analyser.py',198),
  ('U -> ID DCLARRAY','U',2,'p_U1','syntactic_analyser.py',205),
  ('U -> ID DCLMATRIX','U',2,'p_U2','syntactic_analyser.py',212),
  ('U -> ID DCLCUBE','U',2,'p_U3','syntactic_analyser.py',219),
  ('Q -> LPARENT VAR RPARENT','Q',3,'p_Q','syntactic_analyser.py',226),
  ('Q -> TEXT','Q',1,'p_Q1','syntactic_analyser.py',232),
  ('TEXT -> LPARENT STRING H RPARENT','TEXT',4,'p_TEXT','syntactic_analyser.py',238),
  ('TEXT -> <empty>','TEXT',0,'p_TEXT_EMPTY','syntactic_analyser.py',244),
  ('H -> PLUS STRING H','H',3,'p_H','syntactic_analyser.py',248),
  ('H -> PLUS U H','H',3,'p_H1','syntactic_analyser.py',254),
  ('H -> <empty>','H',0,'p_H_EMPTY','syntactic_analyser.py',260),
  ('ELSE1 -> ELSE X','ELSE1',2,'p_ELSE1','syntactic_analyser.py',265),
  ('ELSE1 -> <empty>','ELSE1',0,'p_ELSE1_EMPTY','syntactic_analyser.py',271),
  ('E -> E PLUS T','E',3,'p_E','syntactic_analyser.py',276),
  ('E -> E MINUS T','E',3,'p_E','syntactic_analyser.py',277),
  ('E -> T','E',1,'p_E1','syntactic_analyser.py',284),
  ('T -> T TIMES F','T',3,'p_T','syntactic_analyser.py',290),
  ('T -> T DIVIDE F','T',3,'p_T','syntactic_analyser.py',291),
  ('T -> F','T',1,'p_T1','syntactic_analyser.py',298),
  ('F -> NUMBER','F',1,'p_F','syntactic_analyser.py',304),
  ('F -> U','F',1,'p_F1','syntactic_analyser.py',310),
  ('F -> LPARENT E RPARENT','F',3,'p_F2','syntactic_analyser.py',316),
  ('EL -> EL OR TL','EL',3,'p_EL','syntactic_analyser.py',322),
  ('EL -> TL NOT','EL',2,'p_EL1','syntactic_analyser.py',329),
  ('EL -> TL','EL',1,'p_EL1','syntactic_analyser.py',330),
  ('TL -> TL AND FL','TL',3,'p_TL','syntactic_analyser.py',336),
  ('TL -> FL','TL',1,'p_TL1','syntactic_analyser.py',343),
  ('FL -> K OPREL K','FL',3,'p_FL','syntactic_analyser.py',349),
  ('FL -> LPARENT EL RPARENT','FL',3,'p_FL1','syntactic_analyser.py',356),
  ('OPREL -> LT','OPREL',1,'p_OPREL','syntactic_analyser.py',362),
  ('OPREL -> LTE','OPREL',1,'p_OPREL','syntactic_analyser.py',363),
  ('OPREL -> GT','OPREL',1,'p_OPREL','syntactic_analyser.py',364),
  ('OPREL -> GTE','OPREL',1,'p_OPREL','syntactic_analyser.py',365),
  ('OPREL -> NE','OPREL',1,'p_OPREL','syntactic_analyser.py',366),
  ('OPREL -> EQUAL','OPREL',1,'p_OPREL','syntactic_analyser.py',367),
  ('K -> ID','K',1,'p_K','syntactic_analyser.py',373),
  ('K -> NUMBER','K',1,'p_K1','syntactic_analyser.py',379),
]
